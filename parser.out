Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    INTEGER
    NUMERIC

Grammar

Rule 0     S' -> entrada
Rule 1     entrada -> entrada create_type
Rule 2     entrada -> entrada create_db
Rule 3     entrada -> entrada show_db
Rule 4     entrada -> entrada alter_db
Rule 5     entrada -> entrada drop_db
Rule 6     entrada -> entrada create_table
Rule 7     entrada -> entrada drop_table
Rule 8     entrada -> entrada alter_table
Rule 9     entrada -> entrada s_delete
Rule 10    entrada -> entrada s_insert
Rule 11    entrada -> entrada s_update
Rule 12    entrada -> entrada s_select
Rule 13    entrada -> create_type
Rule 14    entrada -> create_db
Rule 15    entrada -> show_db
Rule 16    entrada -> alter_db
Rule 17    entrada -> drop_db
Rule 18    entrada -> create_table
Rule 19    entrada -> drop_table
Rule 20    entrada -> alter_table
Rule 21    entrada -> s_delete
Rule 22    entrada -> s_insert
Rule 23    entrada -> s_update
Rule 24    entrada -> s_select
Rule 25    s_select -> SELECT list_cols FROM list_from list_joins list_conditions list_order PTCOMA
Rule 26    list_cols -> list_cols COMA ID
Rule 27    list_cols -> ID
Rule 28    list_cols -> MULTI
Rule 29    list_from -> list_from COMA ID
Rule 30    list_from -> ID
Rule 31    list_joins -> list_joins join_type JOIN ID join_conditions
Rule 32    list_joins -> join_type JOIN ID join_conditions
Rule 33    list_joins -> empty
Rule 34    join_type -> INNER
Rule 35    join_type -> LEFT
Rule 36    join_type -> RIGHT
Rule 37    join_type -> FULL
Rule 38    join_type -> OUTER
Rule 39    join_type -> empty
Rule 40    join_conditions -> ON ID sel_comp ID
Rule 41    join_conditions -> ON ID sel_comp data_type
Rule 42    join_conditions -> empty
Rule 43    list_conditions -> WHERE sel_cond
Rule 44    list_conditions -> empty
Rule 45    sel_cond -> sel_cond AND
Rule 46    sel_cond -> ID sel_comp ID
Rule 47    sel_cond -> ID sel_comp data_type
Rule 48    list_order -> ORDER BY ID ASC
Rule 49    list_order -> ORDER BY ID DESC
Rule 50    list_order -> empty
Rule 51    sel_comp -> IGUAL
Rule 52    sel_comp -> MAYIG
Rule 53    sel_comp -> MENIG
Rule 54    sel_comp -> DIFEQ
Rule 55    sel_comp -> MAYOR
Rule 56    sel_comp -> MENOR
Rule 57    empty -> <empty>
Rule 58    create_type -> CREATE TYPE ID AS c_type PTCOMA
Rule 59    c_type -> ENUM PARIZQ lista
Rule 60    c_type -> PARIZQ lista
Rule 61    lista -> id_cadena lista1
Rule 62    lista1 -> lista1 COMA id_cadena
Rule 63    lista1 -> lista1 PARDER
Rule 64    lista1 -> COMA id_cadena
Rule 65    lista1 -> PARDER
Rule 66    id_cadena -> ID data_type
Rule 67    id_cadena -> CADENA
Rule 68    data_type -> ENTERO
Rule 69    data_type -> TEXT
Rule 70    data_type -> SMALLINT
Rule 71    data_type -> BEGINT
Rule 72    data_type -> DECIMAL
Rule 73    data_type -> REAL
Rule 74    data_type -> DOUBLE PRECISION
Rule 75    data_type -> MONEY
Rule 76    data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER
Rule 77    data_type -> VARCHAR PARIZQ ENTERO PARDER
Rule 78    data_type -> CHARACTER PARIZQ ENTERO PARDER
Rule 79    data_type -> CHAR PARIZQ ENTERO PARDER
Rule 80    data_type -> TIMESTAMP
Rule 81    data_type -> TIMESTAMP time_zone
Rule 82    data_type -> DATA
Rule 83    data_type -> TIME
Rule 84    data_type -> TIME time_zone
Rule 85    data_type -> INTERVAL
Rule 86    time_zone -> WITH TIME ZONE
Rule 87    time_zone -> WITHOUT TIME ZONE
Rule 88    create_db -> CREATE c_db
Rule 89    c_db -> OR REPLACE DATABASE c_db1
Rule 90    c_db -> DATABASE c_db1
Rule 91    c_db1 -> IF NOT EXISTS ID owner_mode
Rule 92    c_db1 -> ID owner_mode
Rule 93    owner_mode -> owner_mode OWNER igual_id
Rule 94    owner_mode -> owner_mode MODE igual_id
Rule 95    owner_mode -> owner_mode PTCOMA
Rule 96    owner_mode -> OWNER igual_id
Rule 97    owner_mode -> MODE igual_id
Rule 98    owner_mode -> PTCOMA
Rule 99    igual_id -> IGUAL ID
Rule 100   igual_id -> ID
Rule 101   show_db -> SHOW DATABASES like_id
Rule 102   like_id -> LIKE ID PTCOMA
Rule 103   like_id -> PTCOMA
Rule 104   alter_db -> ALTER DATABASE ID al_db PTCOMA
Rule 105   al_db -> RENAME TO ID
Rule 106   al_db -> OWNER TO owner_db
Rule 107   owner_db -> ID
Rule 108   owner_db -> CURRENT_USER
Rule 109   owner_db -> SESSION_USER
Rule 110   drop_db -> DROP DATABASE PTCOMA
Rule 111   drop_db -> DROP DATABASE IF EXISTS PTCOMA
Rule 112   create_table -> CREATE TABLE ID PARIZQ values PARDER PTCOMA
Rule 113   values -> colum_list
Rule 114   values -> colum_list COMA const_keys
Rule 115   colum_list -> colum_list COMA ID data_type
Rule 116   colum_list -> colum_list COMA ID data_type const
Rule 117   colum_list -> ID data_type
Rule 118   colum_list -> ID data_type const
Rule 119   const_keys -> const_keys COMA PRIMARY KEY PARIZQ lista_id PARDER
Rule 120   const_keys -> const_keys COMA FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER
Rule 121   const_keys -> PRIMARY KEY PARIZQ lista_id PARDER
Rule 122   const_keys -> FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER
Rule 123   const -> const DEFAULT val
Rule 124   const -> const NOT NULL
Rule 125   const -> const NULL
Rule 126   const -> const CONSTRAINT ID UNIQUE
Rule 127   const -> const UNIQUE
Rule 128   const -> const CONSTRAINT ID CHECK PARIZQ PARDER
Rule 129   const -> const CHECK PARIZQ PARDER
Rule 130   const -> const PRIMARY KEY
Rule 131   const -> const REFERENCES ID
Rule 132   const -> DEFAULT val
Rule 133   const -> NOT NULL
Rule 134   const -> NULL
Rule 135   const -> CONSTRAINT ID UNIQUE
Rule 136   const -> UNIQUE
Rule 137   const -> CONSTRAINT ID CHECK PARIZQ PARDER
Rule 138   const -> CHECK PARIZQ PARDER
Rule 139   const -> PRIMARY KEY
Rule 140   const -> REFERENCES ID
Rule 141   lista_id -> lista_id COMA ID
Rule 142   lista_id -> ID
Rule 143   val -> ENTERO
Rule 144   drop_table -> DROP TABLE ID PTCOMA
Rule 145   alter_table -> ALTER TABLE ID acciones
Rule 146   acciones -> ADD acc
Rule 147   acciones -> ALTER COLUMN ID TYPE data_type
Rule 148   acciones -> DROP CONSTRAINT ID
Rule 149   acciones -> RENAME COLUMN ID TO ID
Rule 150   acc -> const
Rule 151   acc -> const_keys
Rule 152   s_delete -> DELETE FROM ID PTCOMA
Rule 153   s_delete -> DELETE FROM ID WHERE ID IGUAL expresion PTCOMA
Rule 154   s_insert -> INSERT INTO ID PARIZQ lista_id PARDER VALUES lista_values PTCOMA
Rule 155   lista_values -> lista_values COMA PARIZQ lista_valores PARDER
Rule 156   lista_values -> PARIZQ lista_valores PARDER
Rule 157   lista_valores -> lista_valores COMA valores
Rule 158   lista_valores -> valores
Rule 159   valores -> CADENA
Rule 160   valores -> ENTERO
Rule 161   valores -> DECIMA
Rule 162   s_update -> UPDATE ID SET lista_asig PTCOMA
Rule 163   s_update -> UPDATE ID SET lista_asig WHERE ID IGUAL expresion PTCOMA
Rule 164   lista_asig -> lista_asig COMA ID IGUAL valores
Rule 165   lista_asig -> ID IGUAL valores
Rule 166   expresion -> NOT expresion
Rule 167   expresion -> expresion OR expresion
Rule 168   expresion -> expresion AND expresion
Rule 169   expresion -> expresion MAYOR expresion
Rule 170   expresion -> expresion MENOR expresion
Rule 171   expresion -> expresion MAYIG expresion
Rule 172   expresion -> expresion MENIG expresion
Rule 173   expresion -> expresion IGUAQ expresion
Rule 174   expresion -> expresion DIFEQ expresion
Rule 175   expresion -> MENOS expresion
Rule 176   expresion -> SUMAS expresion
Rule 177   expresion -> expresion POTEN expresion
Rule 178   expresion -> expresion MULTI expresion
Rule 179   expresion -> expresion DIVIS expresion
Rule 180   expresion -> expresion SUMAS expresion
Rule 181   expresion -> expresion MENOS expresion
Rule 182   expresion -> PARIZQ expresion PARDER
Rule 183   expresion -> SUM PARIZQ expresion PARDER
Rule 184   expresion -> AVG PARIZQ expresion PARDER
Rule 185   expresion -> MAX PARIZQ expresion PARDER
Rule 186   expresion -> PI
Rule 187   expresion -> POWER PARIZQ expresion PARDER
Rule 188   expresion -> SQRT PARIZQ expresion PARDER
Rule 189   expresion -> valores

Terminals, with rules where they appear

ADD                  : 146
ALTER                : 104 145 147
AND                  : 45 168
AS                   : 58
ASC                  : 48
AVG                  : 184
BEGINT               : 71
BY                   : 48 49
CADENA               : 67 159
CHAR                 : 79
CHARACTER            : 76 78
CHECK                : 128 129 137 138
COLUMN               : 147 149
COMA                 : 26 29 62 64 114 115 116 119 120 141 155 157 164
CONSTRAINT           : 126 128 135 137 148
CREATE               : 58 88 112
CURRENT_USER         : 108
DATA                 : 82
DATABASE             : 89 90 104 110 111
DATABASES            : 101
DECIMA               : 161
DECIMAL              : 72
DEFAULT              : 123 132
DELETE               : 152 153
DESC                 : 49
DIFEQ                : 54 174
DIVIS                : 179
DOUBLE               : 74
DROP                 : 110 111 144 148
ENTERO               : 68 76 77 78 79 143 160
ENUM                 : 59
EXISTS               : 91 111
FOREIGN              : 120 122
FROM                 : 25 152 153
FULL                 : 37
ID                   : 26 27 29 30 31 32 40 40 41 46 46 47 48 49 58 66 91 92 99 100 102 104 105 107 112 115 116 117 118 126 128 131 135 137 140 141 142 144 145 147 148 149 149 152 153 153 154 162 163 163 164 165
IF                   : 91 111
IGUAL                : 51 99 153 163 164 165
IGUAQ                : 173
INNER                : 34
INSERT               : 154
INTEGER              : 
INTERVAL             : 85
INTO                 : 154
JOIN                 : 31 32
KEY                  : 119 120 121 122 130 139
LEFT                 : 35
LIKE                 : 102
MAX                  : 185
MAYIG                : 52 171
MAYOR                : 55 169
MENIG                : 53 172
MENOR                : 56 170
MENOS                : 175 181
MODE                 : 94 97
MONEY                : 75
MULTI                : 28 178
NOT                  : 91 124 133 166
NULL                 : 124 125 133 134
NUMERIC              : 
ON                   : 40 41
OR                   : 89 167
ORDER                : 48 49
OUTER                : 38
OWNER                : 93 96 106
PARDER               : 63 65 76 77 78 79 112 119 120 120 121 122 122 128 129 137 138 154 155 156 182 183 184 185 187 188
PARIZQ               : 59 60 76 77 78 79 112 119 120 120 121 122 122 128 129 137 138 154 155 156 182 183 184 185 187 188
PI                   : 186
POTEN                : 177
POWER                : 187
PRECISION            : 74
PRIMARY              : 119 121 130 139
PTCOMA               : 25 58 95 98 102 103 104 110 111 112 144 152 153 154 162 163
REAL                 : 73
REFERENCES           : 120 122 131 140
RENAME               : 105 149
REPLACE              : 89
RIGHT                : 36
SELECT               : 25
SESSION_USER         : 109
SET                  : 162 163
SHOW                 : 101
SMALLINT             : 70
SQRT                 : 188
SUM                  : 183
SUMAS                : 176 180
TABLE                : 112 144 145
TEXT                 : 69
TIME                 : 83 84 86 87
TIMESTAMP            : 80 81
TO                   : 105 106 149
TYPE                 : 58 147
UNIQUE               : 126 127 135 136
UPDATE               : 162 163
VALUES               : 154
VARCHAR              : 77
VARYING              : 76
WHERE                : 43 153 163
WITH                 : 86
WITHOUT              : 87
ZONE                 : 86 87
error                : 

Nonterminals, with rules where they appear

acc                  : 146
acciones             : 145
al_db                : 104
alter_db             : 4 16
alter_table          : 8 20
c_db                 : 88
c_db1                : 89 90
c_type               : 58
colum_list           : 113 114 115 116
const                : 116 118 123 124 125 126 127 128 129 130 131 150
const_keys           : 114 119 120 151
create_db            : 2 14
create_table         : 6 18
create_type          : 1 13
data_type            : 41 47 66 115 116 117 118 147
drop_db              : 5 17
drop_table           : 7 19
empty                : 33 39 42 44 50
entrada              : 1 2 3 4 5 6 7 8 9 10 11 12 0
expresion            : 153 163 166 167 167 168 168 169 169 170 170 171 171 172 172 173 173 174 174 175 176 177 177 178 178 179 179 180 180 181 181 182 183 184 185 187 188
id_cadena            : 61 62 64
igual_id             : 93 94 96 97
join_conditions      : 31 32
join_type            : 31 32
like_id              : 101
list_cols            : 25 26
list_conditions      : 25
list_from            : 25 29
list_joins           : 25 31
list_order           : 25
lista                : 59 60
lista1               : 61 62 63
lista_asig           : 162 163 164
lista_id             : 119 120 121 122 141 154
lista_valores        : 155 156 157
lista_values         : 154 155
owner_db             : 106
owner_mode           : 91 92 93 94 95
s_delete             : 9 21
s_insert             : 10 22
s_select             : 12 24
s_update             : 11 23
sel_comp             : 40 41 46 47
sel_cond             : 43 45
show_db              : 3 15
time_zone            : 81 84
val                  : 123 132
valores              : 157 158 164 165 189
values               : 112

Parsing method: LALR

state 0

    (0) S' -> . entrada
    (1) entrada -> . entrada create_type
    (2) entrada -> . entrada create_db
    (3) entrada -> . entrada show_db
    (4) entrada -> . entrada alter_db
    (5) entrada -> . entrada drop_db
    (6) entrada -> . entrada create_table
    (7) entrada -> . entrada drop_table
    (8) entrada -> . entrada alter_table
    (9) entrada -> . entrada s_delete
    (10) entrada -> . entrada s_insert
    (11) entrada -> . entrada s_update
    (12) entrada -> . entrada s_select
    (13) entrada -> . create_type
    (14) entrada -> . create_db
    (15) entrada -> . show_db
    (16) entrada -> . alter_db
    (17) entrada -> . drop_db
    (18) entrada -> . create_table
    (19) entrada -> . drop_table
    (20) entrada -> . alter_table
    (21) entrada -> . s_delete
    (22) entrada -> . s_insert
    (23) entrada -> . s_update
    (24) entrada -> . s_select
    (58) create_type -> . CREATE TYPE ID AS c_type PTCOMA
    (88) create_db -> . CREATE c_db
    (101) show_db -> . SHOW DATABASES like_id
    (104) alter_db -> . ALTER DATABASE ID al_db PTCOMA
    (110) drop_db -> . DROP DATABASE PTCOMA
    (111) drop_db -> . DROP DATABASE IF EXISTS PTCOMA
    (112) create_table -> . CREATE TABLE ID PARIZQ values PARDER PTCOMA
    (144) drop_table -> . DROP TABLE ID PTCOMA
    (145) alter_table -> . ALTER TABLE ID acciones
    (152) s_delete -> . DELETE FROM ID PTCOMA
    (153) s_delete -> . DELETE FROM ID WHERE ID IGUAL expresion PTCOMA
    (154) s_insert -> . INSERT INTO ID PARIZQ lista_id PARDER VALUES lista_values PTCOMA
    (162) s_update -> . UPDATE ID SET lista_asig PTCOMA
    (163) s_update -> . UPDATE ID SET lista_asig WHERE ID IGUAL expresion PTCOMA
    (25) s_select -> . SELECT list_cols FROM list_from list_joins list_conditions list_order PTCOMA

    CREATE          shift and go to state 14
    SHOW            shift and go to state 15
    ALTER           shift and go to state 16
    DROP            shift and go to state 17
    DELETE          shift and go to state 18
    INSERT          shift and go to state 19
    UPDATE          shift and go to state 20
    SELECT          shift and go to state 21

    entrada                        shift and go to state 1
    create_type                    shift and go to state 2
    create_db                      shift and go to state 3
    show_db                        shift and go to state 4
    alter_db                       shift and go to state 5
    drop_db                        shift and go to state 6
    create_table                   shift and go to state 7
    drop_table                     shift and go to state 8
    alter_table                    shift and go to state 9
    s_delete                       shift and go to state 10
    s_insert                       shift and go to state 11
    s_update                       shift and go to state 12
    s_select                       shift and go to state 13

state 1

    (0) S' -> entrada .
    (1) entrada -> entrada . create_type
    (2) entrada -> entrada . create_db
    (3) entrada -> entrada . show_db
    (4) entrada -> entrada . alter_db
    (5) entrada -> entrada . drop_db
    (6) entrada -> entrada . create_table
    (7) entrada -> entrada . drop_table
    (8) entrada -> entrada . alter_table
    (9) entrada -> entrada . s_delete
    (10) entrada -> entrada . s_insert
    (11) entrada -> entrada . s_update
    (12) entrada -> entrada . s_select
    (58) create_type -> . CREATE TYPE ID AS c_type PTCOMA
    (88) create_db -> . CREATE c_db
    (101) show_db -> . SHOW DATABASES like_id
    (104) alter_db -> . ALTER DATABASE ID al_db PTCOMA
    (110) drop_db -> . DROP DATABASE PTCOMA
    (111) drop_db -> . DROP DATABASE IF EXISTS PTCOMA
    (112) create_table -> . CREATE TABLE ID PARIZQ values PARDER PTCOMA
    (144) drop_table -> . DROP TABLE ID PTCOMA
    (145) alter_table -> . ALTER TABLE ID acciones
    (152) s_delete -> . DELETE FROM ID PTCOMA
    (153) s_delete -> . DELETE FROM ID WHERE ID IGUAL expresion PTCOMA
    (154) s_insert -> . INSERT INTO ID PARIZQ lista_id PARDER VALUES lista_values PTCOMA
    (162) s_update -> . UPDATE ID SET lista_asig PTCOMA
    (163) s_update -> . UPDATE ID SET lista_asig WHERE ID IGUAL expresion PTCOMA
    (25) s_select -> . SELECT list_cols FROM list_from list_joins list_conditions list_order PTCOMA

    CREATE          shift and go to state 14
    SHOW            shift and go to state 15
    ALTER           shift and go to state 16
    DROP            shift and go to state 17
    DELETE          shift and go to state 18
    INSERT          shift and go to state 19
    UPDATE          shift and go to state 20
    SELECT          shift and go to state 21

    create_type                    shift and go to state 22
    create_db                      shift and go to state 23
    show_db                        shift and go to state 24
    alter_db                       shift and go to state 25
    drop_db                        shift and go to state 26
    create_table                   shift and go to state 27
    drop_table                     shift and go to state 28
    alter_table                    shift and go to state 29
    s_delete                       shift and go to state 30
    s_insert                       shift and go to state 31
    s_update                       shift and go to state 32
    s_select                       shift and go to state 33

state 2

    (13) entrada -> create_type .

    CREATE          reduce using rule 13 (entrada -> create_type .)
    SHOW            reduce using rule 13 (entrada -> create_type .)
    ALTER           reduce using rule 13 (entrada -> create_type .)
    DROP            reduce using rule 13 (entrada -> create_type .)
    DELETE          reduce using rule 13 (entrada -> create_type .)
    INSERT          reduce using rule 13 (entrada -> create_type .)
    UPDATE          reduce using rule 13 (entrada -> create_type .)
    SELECT          reduce using rule 13 (entrada -> create_type .)
    $end            reduce using rule 13 (entrada -> create_type .)


state 3

    (14) entrada -> create_db .

    CREATE          reduce using rule 14 (entrada -> create_db .)
    SHOW            reduce using rule 14 (entrada -> create_db .)
    ALTER           reduce using rule 14 (entrada -> create_db .)
    DROP            reduce using rule 14 (entrada -> create_db .)
    DELETE          reduce using rule 14 (entrada -> create_db .)
    INSERT          reduce using rule 14 (entrada -> create_db .)
    UPDATE          reduce using rule 14 (entrada -> create_db .)
    SELECT          reduce using rule 14 (entrada -> create_db .)
    $end            reduce using rule 14 (entrada -> create_db .)


state 4

    (15) entrada -> show_db .

    CREATE          reduce using rule 15 (entrada -> show_db .)
    SHOW            reduce using rule 15 (entrada -> show_db .)
    ALTER           reduce using rule 15 (entrada -> show_db .)
    DROP            reduce using rule 15 (entrada -> show_db .)
    DELETE          reduce using rule 15 (entrada -> show_db .)
    INSERT          reduce using rule 15 (entrada -> show_db .)
    UPDATE          reduce using rule 15 (entrada -> show_db .)
    SELECT          reduce using rule 15 (entrada -> show_db .)
    $end            reduce using rule 15 (entrada -> show_db .)


state 5

    (16) entrada -> alter_db .

    CREATE          reduce using rule 16 (entrada -> alter_db .)
    SHOW            reduce using rule 16 (entrada -> alter_db .)
    ALTER           reduce using rule 16 (entrada -> alter_db .)
    DROP            reduce using rule 16 (entrada -> alter_db .)
    DELETE          reduce using rule 16 (entrada -> alter_db .)
    INSERT          reduce using rule 16 (entrada -> alter_db .)
    UPDATE          reduce using rule 16 (entrada -> alter_db .)
    SELECT          reduce using rule 16 (entrada -> alter_db .)
    $end            reduce using rule 16 (entrada -> alter_db .)


state 6

    (17) entrada -> drop_db .

    CREATE          reduce using rule 17 (entrada -> drop_db .)
    SHOW            reduce using rule 17 (entrada -> drop_db .)
    ALTER           reduce using rule 17 (entrada -> drop_db .)
    DROP            reduce using rule 17 (entrada -> drop_db .)
    DELETE          reduce using rule 17 (entrada -> drop_db .)
    INSERT          reduce using rule 17 (entrada -> drop_db .)
    UPDATE          reduce using rule 17 (entrada -> drop_db .)
    SELECT          reduce using rule 17 (entrada -> drop_db .)
    $end            reduce using rule 17 (entrada -> drop_db .)


state 7

    (18) entrada -> create_table .

    CREATE          reduce using rule 18 (entrada -> create_table .)
    SHOW            reduce using rule 18 (entrada -> create_table .)
    ALTER           reduce using rule 18 (entrada -> create_table .)
    DROP            reduce using rule 18 (entrada -> create_table .)
    DELETE          reduce using rule 18 (entrada -> create_table .)
    INSERT          reduce using rule 18 (entrada -> create_table .)
    UPDATE          reduce using rule 18 (entrada -> create_table .)
    SELECT          reduce using rule 18 (entrada -> create_table .)
    $end            reduce using rule 18 (entrada -> create_table .)


state 8

    (19) entrada -> drop_table .

    CREATE          reduce using rule 19 (entrada -> drop_table .)
    SHOW            reduce using rule 19 (entrada -> drop_table .)
    ALTER           reduce using rule 19 (entrada -> drop_table .)
    DROP            reduce using rule 19 (entrada -> drop_table .)
    DELETE          reduce using rule 19 (entrada -> drop_table .)
    INSERT          reduce using rule 19 (entrada -> drop_table .)
    UPDATE          reduce using rule 19 (entrada -> drop_table .)
    SELECT          reduce using rule 19 (entrada -> drop_table .)
    $end            reduce using rule 19 (entrada -> drop_table .)


state 9

    (20) entrada -> alter_table .

    CREATE          reduce using rule 20 (entrada -> alter_table .)
    SHOW            reduce using rule 20 (entrada -> alter_table .)
    ALTER           reduce using rule 20 (entrada -> alter_table .)
    DROP            reduce using rule 20 (entrada -> alter_table .)
    DELETE          reduce using rule 20 (entrada -> alter_table .)
    INSERT          reduce using rule 20 (entrada -> alter_table .)
    UPDATE          reduce using rule 20 (entrada -> alter_table .)
    SELECT          reduce using rule 20 (entrada -> alter_table .)
    $end            reduce using rule 20 (entrada -> alter_table .)


state 10

    (21) entrada -> s_delete .

    CREATE          reduce using rule 21 (entrada -> s_delete .)
    SHOW            reduce using rule 21 (entrada -> s_delete .)
    ALTER           reduce using rule 21 (entrada -> s_delete .)
    DROP            reduce using rule 21 (entrada -> s_delete .)
    DELETE          reduce using rule 21 (entrada -> s_delete .)
    INSERT          reduce using rule 21 (entrada -> s_delete .)
    UPDATE          reduce using rule 21 (entrada -> s_delete .)
    SELECT          reduce using rule 21 (entrada -> s_delete .)
    $end            reduce using rule 21 (entrada -> s_delete .)


state 11

    (22) entrada -> s_insert .

    CREATE          reduce using rule 22 (entrada -> s_insert .)
    SHOW            reduce using rule 22 (entrada -> s_insert .)
    ALTER           reduce using rule 22 (entrada -> s_insert .)
    DROP            reduce using rule 22 (entrada -> s_insert .)
    DELETE          reduce using rule 22 (entrada -> s_insert .)
    INSERT          reduce using rule 22 (entrada -> s_insert .)
    UPDATE          reduce using rule 22 (entrada -> s_insert .)
    SELECT          reduce using rule 22 (entrada -> s_insert .)
    $end            reduce using rule 22 (entrada -> s_insert .)


state 12

    (23) entrada -> s_update .

    CREATE          reduce using rule 23 (entrada -> s_update .)
    SHOW            reduce using rule 23 (entrada -> s_update .)
    ALTER           reduce using rule 23 (entrada -> s_update .)
    DROP            reduce using rule 23 (entrada -> s_update .)
    DELETE          reduce using rule 23 (entrada -> s_update .)
    INSERT          reduce using rule 23 (entrada -> s_update .)
    UPDATE          reduce using rule 23 (entrada -> s_update .)
    SELECT          reduce using rule 23 (entrada -> s_update .)
    $end            reduce using rule 23 (entrada -> s_update .)


state 13

    (24) entrada -> s_select .

    CREATE          reduce using rule 24 (entrada -> s_select .)
    SHOW            reduce using rule 24 (entrada -> s_select .)
    ALTER           reduce using rule 24 (entrada -> s_select .)
    DROP            reduce using rule 24 (entrada -> s_select .)
    DELETE          reduce using rule 24 (entrada -> s_select .)
    INSERT          reduce using rule 24 (entrada -> s_select .)
    UPDATE          reduce using rule 24 (entrada -> s_select .)
    SELECT          reduce using rule 24 (entrada -> s_select .)
    $end            reduce using rule 24 (entrada -> s_select .)


state 14

    (58) create_type -> CREATE . TYPE ID AS c_type PTCOMA
    (88) create_db -> CREATE . c_db
    (112) create_table -> CREATE . TABLE ID PARIZQ values PARDER PTCOMA
    (89) c_db -> . OR REPLACE DATABASE c_db1
    (90) c_db -> . DATABASE c_db1

    TYPE            shift and go to state 34
    TABLE           shift and go to state 36
    OR              shift and go to state 37
    DATABASE        shift and go to state 38

    c_db                           shift and go to state 35

state 15

    (101) show_db -> SHOW . DATABASES like_id

    DATABASES       shift and go to state 39


state 16

    (104) alter_db -> ALTER . DATABASE ID al_db PTCOMA
    (145) alter_table -> ALTER . TABLE ID acciones

    DATABASE        shift and go to state 40
    TABLE           shift and go to state 41


state 17

    (110) drop_db -> DROP . DATABASE PTCOMA
    (111) drop_db -> DROP . DATABASE IF EXISTS PTCOMA
    (144) drop_table -> DROP . TABLE ID PTCOMA

    DATABASE        shift and go to state 42
    TABLE           shift and go to state 43


state 18

    (152) s_delete -> DELETE . FROM ID PTCOMA
    (153) s_delete -> DELETE . FROM ID WHERE ID IGUAL expresion PTCOMA

    FROM            shift and go to state 44


state 19

    (154) s_insert -> INSERT . INTO ID PARIZQ lista_id PARDER VALUES lista_values PTCOMA

    INTO            shift and go to state 45


state 20

    (162) s_update -> UPDATE . ID SET lista_asig PTCOMA
    (163) s_update -> UPDATE . ID SET lista_asig WHERE ID IGUAL expresion PTCOMA

    ID              shift and go to state 46


state 21

    (25) s_select -> SELECT . list_cols FROM list_from list_joins list_conditions list_order PTCOMA
    (26) list_cols -> . list_cols COMA ID
    (27) list_cols -> . ID
    (28) list_cols -> . MULTI

    ID              shift and go to state 48
    MULTI           shift and go to state 49

    list_cols                      shift and go to state 47

state 22

    (1) entrada -> entrada create_type .

    CREATE          reduce using rule 1 (entrada -> entrada create_type .)
    SHOW            reduce using rule 1 (entrada -> entrada create_type .)
    ALTER           reduce using rule 1 (entrada -> entrada create_type .)
    DROP            reduce using rule 1 (entrada -> entrada create_type .)
    DELETE          reduce using rule 1 (entrada -> entrada create_type .)
    INSERT          reduce using rule 1 (entrada -> entrada create_type .)
    UPDATE          reduce using rule 1 (entrada -> entrada create_type .)
    SELECT          reduce using rule 1 (entrada -> entrada create_type .)
    $end            reduce using rule 1 (entrada -> entrada create_type .)


state 23

    (2) entrada -> entrada create_db .

    CREATE          reduce using rule 2 (entrada -> entrada create_db .)
    SHOW            reduce using rule 2 (entrada -> entrada create_db .)
    ALTER           reduce using rule 2 (entrada -> entrada create_db .)
    DROP            reduce using rule 2 (entrada -> entrada create_db .)
    DELETE          reduce using rule 2 (entrada -> entrada create_db .)
    INSERT          reduce using rule 2 (entrada -> entrada create_db .)
    UPDATE          reduce using rule 2 (entrada -> entrada create_db .)
    SELECT          reduce using rule 2 (entrada -> entrada create_db .)
    $end            reduce using rule 2 (entrada -> entrada create_db .)


state 24

    (3) entrada -> entrada show_db .

    CREATE          reduce using rule 3 (entrada -> entrada show_db .)
    SHOW            reduce using rule 3 (entrada -> entrada show_db .)
    ALTER           reduce using rule 3 (entrada -> entrada show_db .)
    DROP            reduce using rule 3 (entrada -> entrada show_db .)
    DELETE          reduce using rule 3 (entrada -> entrada show_db .)
    INSERT          reduce using rule 3 (entrada -> entrada show_db .)
    UPDATE          reduce using rule 3 (entrada -> entrada show_db .)
    SELECT          reduce using rule 3 (entrada -> entrada show_db .)
    $end            reduce using rule 3 (entrada -> entrada show_db .)


state 25

    (4) entrada -> entrada alter_db .

    CREATE          reduce using rule 4 (entrada -> entrada alter_db .)
    SHOW            reduce using rule 4 (entrada -> entrada alter_db .)
    ALTER           reduce using rule 4 (entrada -> entrada alter_db .)
    DROP            reduce using rule 4 (entrada -> entrada alter_db .)
    DELETE          reduce using rule 4 (entrada -> entrada alter_db .)
    INSERT          reduce using rule 4 (entrada -> entrada alter_db .)
    UPDATE          reduce using rule 4 (entrada -> entrada alter_db .)
    SELECT          reduce using rule 4 (entrada -> entrada alter_db .)
    $end            reduce using rule 4 (entrada -> entrada alter_db .)


state 26

    (5) entrada -> entrada drop_db .

    CREATE          reduce using rule 5 (entrada -> entrada drop_db .)
    SHOW            reduce using rule 5 (entrada -> entrada drop_db .)
    ALTER           reduce using rule 5 (entrada -> entrada drop_db .)
    DROP            reduce using rule 5 (entrada -> entrada drop_db .)
    DELETE          reduce using rule 5 (entrada -> entrada drop_db .)
    INSERT          reduce using rule 5 (entrada -> entrada drop_db .)
    UPDATE          reduce using rule 5 (entrada -> entrada drop_db .)
    SELECT          reduce using rule 5 (entrada -> entrada drop_db .)
    $end            reduce using rule 5 (entrada -> entrada drop_db .)


state 27

    (6) entrada -> entrada create_table .

    CREATE          reduce using rule 6 (entrada -> entrada create_table .)
    SHOW            reduce using rule 6 (entrada -> entrada create_table .)
    ALTER           reduce using rule 6 (entrada -> entrada create_table .)
    DROP            reduce using rule 6 (entrada -> entrada create_table .)
    DELETE          reduce using rule 6 (entrada -> entrada create_table .)
    INSERT          reduce using rule 6 (entrada -> entrada create_table .)
    UPDATE          reduce using rule 6 (entrada -> entrada create_table .)
    SELECT          reduce using rule 6 (entrada -> entrada create_table .)
    $end            reduce using rule 6 (entrada -> entrada create_table .)


state 28

    (7) entrada -> entrada drop_table .

    CREATE          reduce using rule 7 (entrada -> entrada drop_table .)
    SHOW            reduce using rule 7 (entrada -> entrada drop_table .)
    ALTER           reduce using rule 7 (entrada -> entrada drop_table .)
    DROP            reduce using rule 7 (entrada -> entrada drop_table .)
    DELETE          reduce using rule 7 (entrada -> entrada drop_table .)
    INSERT          reduce using rule 7 (entrada -> entrada drop_table .)
    UPDATE          reduce using rule 7 (entrada -> entrada drop_table .)
    SELECT          reduce using rule 7 (entrada -> entrada drop_table .)
    $end            reduce using rule 7 (entrada -> entrada drop_table .)


state 29

    (8) entrada -> entrada alter_table .

    CREATE          reduce using rule 8 (entrada -> entrada alter_table .)
    SHOW            reduce using rule 8 (entrada -> entrada alter_table .)
    ALTER           reduce using rule 8 (entrada -> entrada alter_table .)
    DROP            reduce using rule 8 (entrada -> entrada alter_table .)
    DELETE          reduce using rule 8 (entrada -> entrada alter_table .)
    INSERT          reduce using rule 8 (entrada -> entrada alter_table .)
    UPDATE          reduce using rule 8 (entrada -> entrada alter_table .)
    SELECT          reduce using rule 8 (entrada -> entrada alter_table .)
    $end            reduce using rule 8 (entrada -> entrada alter_table .)


state 30

    (9) entrada -> entrada s_delete .

    CREATE          reduce using rule 9 (entrada -> entrada s_delete .)
    SHOW            reduce using rule 9 (entrada -> entrada s_delete .)
    ALTER           reduce using rule 9 (entrada -> entrada s_delete .)
    DROP            reduce using rule 9 (entrada -> entrada s_delete .)
    DELETE          reduce using rule 9 (entrada -> entrada s_delete .)
    INSERT          reduce using rule 9 (entrada -> entrada s_delete .)
    UPDATE          reduce using rule 9 (entrada -> entrada s_delete .)
    SELECT          reduce using rule 9 (entrada -> entrada s_delete .)
    $end            reduce using rule 9 (entrada -> entrada s_delete .)


state 31

    (10) entrada -> entrada s_insert .

    CREATE          reduce using rule 10 (entrada -> entrada s_insert .)
    SHOW            reduce using rule 10 (entrada -> entrada s_insert .)
    ALTER           reduce using rule 10 (entrada -> entrada s_insert .)
    DROP            reduce using rule 10 (entrada -> entrada s_insert .)
    DELETE          reduce using rule 10 (entrada -> entrada s_insert .)
    INSERT          reduce using rule 10 (entrada -> entrada s_insert .)
    UPDATE          reduce using rule 10 (entrada -> entrada s_insert .)
    SELECT          reduce using rule 10 (entrada -> entrada s_insert .)
    $end            reduce using rule 10 (entrada -> entrada s_insert .)


state 32

    (11) entrada -> entrada s_update .

    CREATE          reduce using rule 11 (entrada -> entrada s_update .)
    SHOW            reduce using rule 11 (entrada -> entrada s_update .)
    ALTER           reduce using rule 11 (entrada -> entrada s_update .)
    DROP            reduce using rule 11 (entrada -> entrada s_update .)
    DELETE          reduce using rule 11 (entrada -> entrada s_update .)
    INSERT          reduce using rule 11 (entrada -> entrada s_update .)
    UPDATE          reduce using rule 11 (entrada -> entrada s_update .)
    SELECT          reduce using rule 11 (entrada -> entrada s_update .)
    $end            reduce using rule 11 (entrada -> entrada s_update .)


state 33

    (12) entrada -> entrada s_select .

    CREATE          reduce using rule 12 (entrada -> entrada s_select .)
    SHOW            reduce using rule 12 (entrada -> entrada s_select .)
    ALTER           reduce using rule 12 (entrada -> entrada s_select .)
    DROP            reduce using rule 12 (entrada -> entrada s_select .)
    DELETE          reduce using rule 12 (entrada -> entrada s_select .)
    INSERT          reduce using rule 12 (entrada -> entrada s_select .)
    UPDATE          reduce using rule 12 (entrada -> entrada s_select .)
    SELECT          reduce using rule 12 (entrada -> entrada s_select .)
    $end            reduce using rule 12 (entrada -> entrada s_select .)


state 34

    (58) create_type -> CREATE TYPE . ID AS c_type PTCOMA

    ID              shift and go to state 50


state 35

    (88) create_db -> CREATE c_db .

    CREATE          reduce using rule 88 (create_db -> CREATE c_db .)
    SHOW            reduce using rule 88 (create_db -> CREATE c_db .)
    ALTER           reduce using rule 88 (create_db -> CREATE c_db .)
    DROP            reduce using rule 88 (create_db -> CREATE c_db .)
    DELETE          reduce using rule 88 (create_db -> CREATE c_db .)
    INSERT          reduce using rule 88 (create_db -> CREATE c_db .)
    UPDATE          reduce using rule 88 (create_db -> CREATE c_db .)
    SELECT          reduce using rule 88 (create_db -> CREATE c_db .)
    $end            reduce using rule 88 (create_db -> CREATE c_db .)


state 36

    (112) create_table -> CREATE TABLE . ID PARIZQ values PARDER PTCOMA

    ID              shift and go to state 51


state 37

    (89) c_db -> OR . REPLACE DATABASE c_db1

    REPLACE         shift and go to state 52


state 38

    (90) c_db -> DATABASE . c_db1
    (91) c_db1 -> . IF NOT EXISTS ID owner_mode
    (92) c_db1 -> . ID owner_mode

    IF              shift and go to state 54
    ID              shift and go to state 55

    c_db1                          shift and go to state 53

state 39

    (101) show_db -> SHOW DATABASES . like_id
    (102) like_id -> . LIKE ID PTCOMA
    (103) like_id -> . PTCOMA

    LIKE            shift and go to state 57
    PTCOMA          shift and go to state 58

    like_id                        shift and go to state 56

state 40

    (104) alter_db -> ALTER DATABASE . ID al_db PTCOMA

    ID              shift and go to state 59


state 41

    (145) alter_table -> ALTER TABLE . ID acciones

    ID              shift and go to state 60


state 42

    (110) drop_db -> DROP DATABASE . PTCOMA
    (111) drop_db -> DROP DATABASE . IF EXISTS PTCOMA

    PTCOMA          shift and go to state 61
    IF              shift and go to state 62


state 43

    (144) drop_table -> DROP TABLE . ID PTCOMA

    ID              shift and go to state 63


state 44

    (152) s_delete -> DELETE FROM . ID PTCOMA
    (153) s_delete -> DELETE FROM . ID WHERE ID IGUAL expresion PTCOMA

    ID              shift and go to state 64


state 45

    (154) s_insert -> INSERT INTO . ID PARIZQ lista_id PARDER VALUES lista_values PTCOMA

    ID              shift and go to state 65


state 46

    (162) s_update -> UPDATE ID . SET lista_asig PTCOMA
    (163) s_update -> UPDATE ID . SET lista_asig WHERE ID IGUAL expresion PTCOMA

    SET             shift and go to state 66


state 47

    (25) s_select -> SELECT list_cols . FROM list_from list_joins list_conditions list_order PTCOMA
    (26) list_cols -> list_cols . COMA ID

    FROM            shift and go to state 67
    COMA            shift and go to state 68


state 48

    (27) list_cols -> ID .

    FROM            reduce using rule 27 (list_cols -> ID .)
    COMA            reduce using rule 27 (list_cols -> ID .)


state 49

    (28) list_cols -> MULTI .

    FROM            reduce using rule 28 (list_cols -> MULTI .)
    COMA            reduce using rule 28 (list_cols -> MULTI .)


state 50

    (58) create_type -> CREATE TYPE ID . AS c_type PTCOMA

    AS              shift and go to state 69


state 51

    (112) create_table -> CREATE TABLE ID . PARIZQ values PARDER PTCOMA

    PARIZQ          shift and go to state 70


state 52

    (89) c_db -> OR REPLACE . DATABASE c_db1

    DATABASE        shift and go to state 71


state 53

    (90) c_db -> DATABASE c_db1 .

    CREATE          reduce using rule 90 (c_db -> DATABASE c_db1 .)
    SHOW            reduce using rule 90 (c_db -> DATABASE c_db1 .)
    ALTER           reduce using rule 90 (c_db -> DATABASE c_db1 .)
    DROP            reduce using rule 90 (c_db -> DATABASE c_db1 .)
    DELETE          reduce using rule 90 (c_db -> DATABASE c_db1 .)
    INSERT          reduce using rule 90 (c_db -> DATABASE c_db1 .)
    UPDATE          reduce using rule 90 (c_db -> DATABASE c_db1 .)
    SELECT          reduce using rule 90 (c_db -> DATABASE c_db1 .)
    $end            reduce using rule 90 (c_db -> DATABASE c_db1 .)


state 54

    (91) c_db1 -> IF . NOT EXISTS ID owner_mode

    NOT             shift and go to state 72


state 55

    (92) c_db1 -> ID . owner_mode
    (93) owner_mode -> . owner_mode OWNER igual_id
    (94) owner_mode -> . owner_mode MODE igual_id
    (95) owner_mode -> . owner_mode PTCOMA
    (96) owner_mode -> . OWNER igual_id
    (97) owner_mode -> . MODE igual_id
    (98) owner_mode -> . PTCOMA

    OWNER           shift and go to state 74
    MODE            shift and go to state 75
    PTCOMA          shift and go to state 76

    owner_mode                     shift and go to state 73

state 56

    (101) show_db -> SHOW DATABASES like_id .

    CREATE          reduce using rule 101 (show_db -> SHOW DATABASES like_id .)
    SHOW            reduce using rule 101 (show_db -> SHOW DATABASES like_id .)
    ALTER           reduce using rule 101 (show_db -> SHOW DATABASES like_id .)
    DROP            reduce using rule 101 (show_db -> SHOW DATABASES like_id .)
    DELETE          reduce using rule 101 (show_db -> SHOW DATABASES like_id .)
    INSERT          reduce using rule 101 (show_db -> SHOW DATABASES like_id .)
    UPDATE          reduce using rule 101 (show_db -> SHOW DATABASES like_id .)
    SELECT          reduce using rule 101 (show_db -> SHOW DATABASES like_id .)
    $end            reduce using rule 101 (show_db -> SHOW DATABASES like_id .)


state 57

    (102) like_id -> LIKE . ID PTCOMA

    ID              shift and go to state 77


state 58

    (103) like_id -> PTCOMA .

    CREATE          reduce using rule 103 (like_id -> PTCOMA .)
    SHOW            reduce using rule 103 (like_id -> PTCOMA .)
    ALTER           reduce using rule 103 (like_id -> PTCOMA .)
    DROP            reduce using rule 103 (like_id -> PTCOMA .)
    DELETE          reduce using rule 103 (like_id -> PTCOMA .)
    INSERT          reduce using rule 103 (like_id -> PTCOMA .)
    UPDATE          reduce using rule 103 (like_id -> PTCOMA .)
    SELECT          reduce using rule 103 (like_id -> PTCOMA .)
    $end            reduce using rule 103 (like_id -> PTCOMA .)


state 59

    (104) alter_db -> ALTER DATABASE ID . al_db PTCOMA
    (105) al_db -> . RENAME TO ID
    (106) al_db -> . OWNER TO owner_db

    RENAME          shift and go to state 79
    OWNER           shift and go to state 80

    al_db                          shift and go to state 78

state 60

    (145) alter_table -> ALTER TABLE ID . acciones
    (146) acciones -> . ADD acc
    (147) acciones -> . ALTER COLUMN ID TYPE data_type
    (148) acciones -> . DROP CONSTRAINT ID
    (149) acciones -> . RENAME COLUMN ID TO ID

    ADD             shift and go to state 83
    ALTER           shift and go to state 81
    DROP            shift and go to state 84
    RENAME          shift and go to state 85

    acciones                       shift and go to state 82

state 61

    (110) drop_db -> DROP DATABASE PTCOMA .

    CREATE          reduce using rule 110 (drop_db -> DROP DATABASE PTCOMA .)
    SHOW            reduce using rule 110 (drop_db -> DROP DATABASE PTCOMA .)
    ALTER           reduce using rule 110 (drop_db -> DROP DATABASE PTCOMA .)
    DROP            reduce using rule 110 (drop_db -> DROP DATABASE PTCOMA .)
    DELETE          reduce using rule 110 (drop_db -> DROP DATABASE PTCOMA .)
    INSERT          reduce using rule 110 (drop_db -> DROP DATABASE PTCOMA .)
    UPDATE          reduce using rule 110 (drop_db -> DROP DATABASE PTCOMA .)
    SELECT          reduce using rule 110 (drop_db -> DROP DATABASE PTCOMA .)
    $end            reduce using rule 110 (drop_db -> DROP DATABASE PTCOMA .)


state 62

    (111) drop_db -> DROP DATABASE IF . EXISTS PTCOMA

    EXISTS          shift and go to state 86


state 63

    (144) drop_table -> DROP TABLE ID . PTCOMA

    PTCOMA          shift and go to state 87


state 64

    (152) s_delete -> DELETE FROM ID . PTCOMA
    (153) s_delete -> DELETE FROM ID . WHERE ID IGUAL expresion PTCOMA

    PTCOMA          shift and go to state 88
    WHERE           shift and go to state 89


state 65

    (154) s_insert -> INSERT INTO ID . PARIZQ lista_id PARDER VALUES lista_values PTCOMA

    PARIZQ          shift and go to state 90


state 66

    (162) s_update -> UPDATE ID SET . lista_asig PTCOMA
    (163) s_update -> UPDATE ID SET . lista_asig WHERE ID IGUAL expresion PTCOMA
    (164) lista_asig -> . lista_asig COMA ID IGUAL valores
    (165) lista_asig -> . ID IGUAL valores

    ID              shift and go to state 91

    lista_asig                     shift and go to state 92

state 67

    (25) s_select -> SELECT list_cols FROM . list_from list_joins list_conditions list_order PTCOMA
    (29) list_from -> . list_from COMA ID
    (30) list_from -> . ID

    ID              shift and go to state 94

    list_from                      shift and go to state 93

state 68

    (26) list_cols -> list_cols COMA . ID

    ID              shift and go to state 95


state 69

    (58) create_type -> CREATE TYPE ID AS . c_type PTCOMA
    (59) c_type -> . ENUM PARIZQ lista
    (60) c_type -> . PARIZQ lista

    ENUM            shift and go to state 97
    PARIZQ          shift and go to state 98

    c_type                         shift and go to state 96

state 70

    (112) create_table -> CREATE TABLE ID PARIZQ . values PARDER PTCOMA
    (113) values -> . colum_list
    (114) values -> . colum_list COMA const_keys
    (115) colum_list -> . colum_list COMA ID data_type
    (116) colum_list -> . colum_list COMA ID data_type const
    (117) colum_list -> . ID data_type
    (118) colum_list -> . ID data_type const

    ID              shift and go to state 99

    values                         shift and go to state 100
    colum_list                     shift and go to state 101

state 71

    (89) c_db -> OR REPLACE DATABASE . c_db1
    (91) c_db1 -> . IF NOT EXISTS ID owner_mode
    (92) c_db1 -> . ID owner_mode

    IF              shift and go to state 54
    ID              shift and go to state 55

    c_db1                          shift and go to state 102

state 72

    (91) c_db1 -> IF NOT . EXISTS ID owner_mode

    EXISTS          shift and go to state 103


state 73

    (92) c_db1 -> ID owner_mode .
    (93) owner_mode -> owner_mode . OWNER igual_id
    (94) owner_mode -> owner_mode . MODE igual_id
    (95) owner_mode -> owner_mode . PTCOMA

    CREATE          reduce using rule 92 (c_db1 -> ID owner_mode .)
    SHOW            reduce using rule 92 (c_db1 -> ID owner_mode .)
    ALTER           reduce using rule 92 (c_db1 -> ID owner_mode .)
    DROP            reduce using rule 92 (c_db1 -> ID owner_mode .)
    DELETE          reduce using rule 92 (c_db1 -> ID owner_mode .)
    INSERT          reduce using rule 92 (c_db1 -> ID owner_mode .)
    UPDATE          reduce using rule 92 (c_db1 -> ID owner_mode .)
    SELECT          reduce using rule 92 (c_db1 -> ID owner_mode .)
    $end            reduce using rule 92 (c_db1 -> ID owner_mode .)
    OWNER           shift and go to state 104
    MODE            shift and go to state 105
    PTCOMA          shift and go to state 106


state 74

    (96) owner_mode -> OWNER . igual_id
    (99) igual_id -> . IGUAL ID
    (100) igual_id -> . ID

    IGUAL           shift and go to state 108
    ID              shift and go to state 109

    igual_id                       shift and go to state 107

state 75

    (97) owner_mode -> MODE . igual_id
    (99) igual_id -> . IGUAL ID
    (100) igual_id -> . ID

    IGUAL           shift and go to state 108
    ID              shift and go to state 109

    igual_id                       shift and go to state 110

state 76

    (98) owner_mode -> PTCOMA .

    OWNER           reduce using rule 98 (owner_mode -> PTCOMA .)
    MODE            reduce using rule 98 (owner_mode -> PTCOMA .)
    PTCOMA          reduce using rule 98 (owner_mode -> PTCOMA .)
    CREATE          reduce using rule 98 (owner_mode -> PTCOMA .)
    SHOW            reduce using rule 98 (owner_mode -> PTCOMA .)
    ALTER           reduce using rule 98 (owner_mode -> PTCOMA .)
    DROP            reduce using rule 98 (owner_mode -> PTCOMA .)
    DELETE          reduce using rule 98 (owner_mode -> PTCOMA .)
    INSERT          reduce using rule 98 (owner_mode -> PTCOMA .)
    UPDATE          reduce using rule 98 (owner_mode -> PTCOMA .)
    SELECT          reduce using rule 98 (owner_mode -> PTCOMA .)
    $end            reduce using rule 98 (owner_mode -> PTCOMA .)


state 77

    (102) like_id -> LIKE ID . PTCOMA

    PTCOMA          shift and go to state 111


state 78

    (104) alter_db -> ALTER DATABASE ID al_db . PTCOMA

    PTCOMA          shift and go to state 112


state 79

    (105) al_db -> RENAME . TO ID

    TO              shift and go to state 113


state 80

    (106) al_db -> OWNER . TO owner_db

    TO              shift and go to state 114


state 81

    (147) acciones -> ALTER . COLUMN ID TYPE data_type

    COLUMN          shift and go to state 115


state 82

    (145) alter_table -> ALTER TABLE ID acciones .

    CREATE          reduce using rule 145 (alter_table -> ALTER TABLE ID acciones .)
    SHOW            reduce using rule 145 (alter_table -> ALTER TABLE ID acciones .)
    ALTER           reduce using rule 145 (alter_table -> ALTER TABLE ID acciones .)
    DROP            reduce using rule 145 (alter_table -> ALTER TABLE ID acciones .)
    DELETE          reduce using rule 145 (alter_table -> ALTER TABLE ID acciones .)
    INSERT          reduce using rule 145 (alter_table -> ALTER TABLE ID acciones .)
    UPDATE          reduce using rule 145 (alter_table -> ALTER TABLE ID acciones .)
    SELECT          reduce using rule 145 (alter_table -> ALTER TABLE ID acciones .)
    $end            reduce using rule 145 (alter_table -> ALTER TABLE ID acciones .)


state 83

    (146) acciones -> ADD . acc
    (150) acc -> . const
    (151) acc -> . const_keys
    (123) const -> . const DEFAULT val
    (124) const -> . const NOT NULL
    (125) const -> . const NULL
    (126) const -> . const CONSTRAINT ID UNIQUE
    (127) const -> . const UNIQUE
    (128) const -> . const CONSTRAINT ID CHECK PARIZQ PARDER
    (129) const -> . const CHECK PARIZQ PARDER
    (130) const -> . const PRIMARY KEY
    (131) const -> . const REFERENCES ID
    (132) const -> . DEFAULT val
    (133) const -> . NOT NULL
    (134) const -> . NULL
    (135) const -> . CONSTRAINT ID UNIQUE
    (136) const -> . UNIQUE
    (137) const -> . CONSTRAINT ID CHECK PARIZQ PARDER
    (138) const -> . CHECK PARIZQ PARDER
    (139) const -> . PRIMARY KEY
    (140) const -> . REFERENCES ID
    (119) const_keys -> . const_keys COMA PRIMARY KEY PARIZQ lista_id PARDER
    (120) const_keys -> . const_keys COMA FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER
    (121) const_keys -> . PRIMARY KEY PARIZQ lista_id PARDER
    (122) const_keys -> . FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER

    DEFAULT         shift and go to state 119
    NOT             shift and go to state 120
    NULL            shift and go to state 121
    CONSTRAINT      shift and go to state 122
    UNIQUE          shift and go to state 123
    CHECK           shift and go to state 124
    PRIMARY         shift and go to state 125
    REFERENCES      shift and go to state 126
    FOREIGN         shift and go to state 127

    acc                            shift and go to state 116
    const                          shift and go to state 117
    const_keys                     shift and go to state 118

state 84

    (148) acciones -> DROP . CONSTRAINT ID

    CONSTRAINT      shift and go to state 128


state 85

    (149) acciones -> RENAME . COLUMN ID TO ID

    COLUMN          shift and go to state 129


state 86

    (111) drop_db -> DROP DATABASE IF EXISTS . PTCOMA

    PTCOMA          shift and go to state 130


state 87

    (144) drop_table -> DROP TABLE ID PTCOMA .

    CREATE          reduce using rule 144 (drop_table -> DROP TABLE ID PTCOMA .)
    SHOW            reduce using rule 144 (drop_table -> DROP TABLE ID PTCOMA .)
    ALTER           reduce using rule 144 (drop_table -> DROP TABLE ID PTCOMA .)
    DROP            reduce using rule 144 (drop_table -> DROP TABLE ID PTCOMA .)
    DELETE          reduce using rule 144 (drop_table -> DROP TABLE ID PTCOMA .)
    INSERT          reduce using rule 144 (drop_table -> DROP TABLE ID PTCOMA .)
    UPDATE          reduce using rule 144 (drop_table -> DROP TABLE ID PTCOMA .)
    SELECT          reduce using rule 144 (drop_table -> DROP TABLE ID PTCOMA .)
    $end            reduce using rule 144 (drop_table -> DROP TABLE ID PTCOMA .)


state 88

    (152) s_delete -> DELETE FROM ID PTCOMA .

    CREATE          reduce using rule 152 (s_delete -> DELETE FROM ID PTCOMA .)
    SHOW            reduce using rule 152 (s_delete -> DELETE FROM ID PTCOMA .)
    ALTER           reduce using rule 152 (s_delete -> DELETE FROM ID PTCOMA .)
    DROP            reduce using rule 152 (s_delete -> DELETE FROM ID PTCOMA .)
    DELETE          reduce using rule 152 (s_delete -> DELETE FROM ID PTCOMA .)
    INSERT          reduce using rule 152 (s_delete -> DELETE FROM ID PTCOMA .)
    UPDATE          reduce using rule 152 (s_delete -> DELETE FROM ID PTCOMA .)
    SELECT          reduce using rule 152 (s_delete -> DELETE FROM ID PTCOMA .)
    $end            reduce using rule 152 (s_delete -> DELETE FROM ID PTCOMA .)


state 89

    (153) s_delete -> DELETE FROM ID WHERE . ID IGUAL expresion PTCOMA

    ID              shift and go to state 131


state 90

    (154) s_insert -> INSERT INTO ID PARIZQ . lista_id PARDER VALUES lista_values PTCOMA
    (141) lista_id -> . lista_id COMA ID
    (142) lista_id -> . ID

    ID              shift and go to state 132

    lista_id                       shift and go to state 133

state 91

    (165) lista_asig -> ID . IGUAL valores

    IGUAL           shift and go to state 134


state 92

    (162) s_update -> UPDATE ID SET lista_asig . PTCOMA
    (163) s_update -> UPDATE ID SET lista_asig . WHERE ID IGUAL expresion PTCOMA
    (164) lista_asig -> lista_asig . COMA ID IGUAL valores

    PTCOMA          shift and go to state 135
    WHERE           shift and go to state 136
    COMA            shift and go to state 137


state 93

    (25) s_select -> SELECT list_cols FROM list_from . list_joins list_conditions list_order PTCOMA
    (29) list_from -> list_from . COMA ID
    (31) list_joins -> . list_joins join_type JOIN ID join_conditions
    (32) list_joins -> . join_type JOIN ID join_conditions
    (33) list_joins -> . empty
    (34) join_type -> . INNER
    (35) join_type -> . LEFT
    (36) join_type -> . RIGHT
    (37) join_type -> . FULL
    (38) join_type -> . OUTER
    (39) join_type -> . empty
    (57) empty -> .

  ! shift/reduce conflict for INNER resolved as shift
  ! shift/reduce conflict for LEFT resolved as shift
  ! shift/reduce conflict for RIGHT resolved as shift
  ! shift/reduce conflict for FULL resolved as shift
  ! shift/reduce conflict for OUTER resolved as shift
    COMA            shift and go to state 139
    INNER           shift and go to state 142
    LEFT            shift and go to state 143
    RIGHT           shift and go to state 144
    FULL            shift and go to state 145
    OUTER           shift and go to state 146
    WHERE           reduce using rule 57 (empty -> .)
    ORDER           reduce using rule 57 (empty -> .)
    PTCOMA          reduce using rule 57 (empty -> .)
    JOIN            reduce using rule 57 (empty -> .)

  ! INNER           [ reduce using rule 57 (empty -> .) ]
  ! LEFT            [ reduce using rule 57 (empty -> .) ]
  ! RIGHT           [ reduce using rule 57 (empty -> .) ]
  ! FULL            [ reduce using rule 57 (empty -> .) ]
  ! OUTER           [ reduce using rule 57 (empty -> .) ]

    list_joins                     shift and go to state 138
    join_type                      shift and go to state 140
    empty                          shift and go to state 141

state 94

    (30) list_from -> ID .

    COMA            reduce using rule 30 (list_from -> ID .)
    INNER           reduce using rule 30 (list_from -> ID .)
    LEFT            reduce using rule 30 (list_from -> ID .)
    RIGHT           reduce using rule 30 (list_from -> ID .)
    FULL            reduce using rule 30 (list_from -> ID .)
    OUTER           reduce using rule 30 (list_from -> ID .)
    WHERE           reduce using rule 30 (list_from -> ID .)
    ORDER           reduce using rule 30 (list_from -> ID .)
    PTCOMA          reduce using rule 30 (list_from -> ID .)
    JOIN            reduce using rule 30 (list_from -> ID .)


state 95

    (26) list_cols -> list_cols COMA ID .

    FROM            reduce using rule 26 (list_cols -> list_cols COMA ID .)
    COMA            reduce using rule 26 (list_cols -> list_cols COMA ID .)


state 96

    (58) create_type -> CREATE TYPE ID AS c_type . PTCOMA

    PTCOMA          shift and go to state 147


state 97

    (59) c_type -> ENUM . PARIZQ lista

    PARIZQ          shift and go to state 148


state 98

    (60) c_type -> PARIZQ . lista
    (61) lista -> . id_cadena lista1
    (66) id_cadena -> . ID data_type
    (67) id_cadena -> . CADENA

    ID              shift and go to state 151
    CADENA          shift and go to state 152

    lista                          shift and go to state 149
    id_cadena                      shift and go to state 150

state 99

    (117) colum_list -> ID . data_type
    (118) colum_list -> ID . data_type const
    (68) data_type -> . ENTERO
    (69) data_type -> . TEXT
    (70) data_type -> . SMALLINT
    (71) data_type -> . BEGINT
    (72) data_type -> . DECIMAL
    (73) data_type -> . REAL
    (74) data_type -> . DOUBLE PRECISION
    (75) data_type -> . MONEY
    (76) data_type -> . CHARACTER VARYING PARIZQ ENTERO PARDER
    (77) data_type -> . VARCHAR PARIZQ ENTERO PARDER
    (78) data_type -> . CHARACTER PARIZQ ENTERO PARDER
    (79) data_type -> . CHAR PARIZQ ENTERO PARDER
    (80) data_type -> . TIMESTAMP
    (81) data_type -> . TIMESTAMP time_zone
    (82) data_type -> . DATA
    (83) data_type -> . TIME
    (84) data_type -> . TIME time_zone
    (85) data_type -> . INTERVAL

    ENTERO          shift and go to state 154
    TEXT            shift and go to state 155
    SMALLINT        shift and go to state 156
    BEGINT          shift and go to state 157
    DECIMAL         shift and go to state 158
    REAL            shift and go to state 159
    DOUBLE          shift and go to state 160
    MONEY           shift and go to state 161
    CHARACTER       shift and go to state 162
    VARCHAR         shift and go to state 163
    CHAR            shift and go to state 164
    TIMESTAMP       shift and go to state 165
    DATA            shift and go to state 166
    TIME            shift and go to state 167
    INTERVAL        shift and go to state 168

    data_type                      shift and go to state 153

state 100

    (112) create_table -> CREATE TABLE ID PARIZQ values . PARDER PTCOMA

    PARDER          shift and go to state 169


state 101

    (113) values -> colum_list .
    (114) values -> colum_list . COMA const_keys
    (115) colum_list -> colum_list . COMA ID data_type
    (116) colum_list -> colum_list . COMA ID data_type const

    PARDER          reduce using rule 113 (values -> colum_list .)
    COMA            shift and go to state 170


state 102

    (89) c_db -> OR REPLACE DATABASE c_db1 .

    CREATE          reduce using rule 89 (c_db -> OR REPLACE DATABASE c_db1 .)
    SHOW            reduce using rule 89 (c_db -> OR REPLACE DATABASE c_db1 .)
    ALTER           reduce using rule 89 (c_db -> OR REPLACE DATABASE c_db1 .)
    DROP            reduce using rule 89 (c_db -> OR REPLACE DATABASE c_db1 .)
    DELETE          reduce using rule 89 (c_db -> OR REPLACE DATABASE c_db1 .)
    INSERT          reduce using rule 89 (c_db -> OR REPLACE DATABASE c_db1 .)
    UPDATE          reduce using rule 89 (c_db -> OR REPLACE DATABASE c_db1 .)
    SELECT          reduce using rule 89 (c_db -> OR REPLACE DATABASE c_db1 .)
    $end            reduce using rule 89 (c_db -> OR REPLACE DATABASE c_db1 .)


state 103

    (91) c_db1 -> IF NOT EXISTS . ID owner_mode

    ID              shift and go to state 171


state 104

    (93) owner_mode -> owner_mode OWNER . igual_id
    (99) igual_id -> . IGUAL ID
    (100) igual_id -> . ID

    IGUAL           shift and go to state 108
    ID              shift and go to state 109

    igual_id                       shift and go to state 172

state 105

    (94) owner_mode -> owner_mode MODE . igual_id
    (99) igual_id -> . IGUAL ID
    (100) igual_id -> . ID

    IGUAL           shift and go to state 108
    ID              shift and go to state 109

    igual_id                       shift and go to state 173

state 106

    (95) owner_mode -> owner_mode PTCOMA .

    OWNER           reduce using rule 95 (owner_mode -> owner_mode PTCOMA .)
    MODE            reduce using rule 95 (owner_mode -> owner_mode PTCOMA .)
    PTCOMA          reduce using rule 95 (owner_mode -> owner_mode PTCOMA .)
    CREATE          reduce using rule 95 (owner_mode -> owner_mode PTCOMA .)
    SHOW            reduce using rule 95 (owner_mode -> owner_mode PTCOMA .)
    ALTER           reduce using rule 95 (owner_mode -> owner_mode PTCOMA .)
    DROP            reduce using rule 95 (owner_mode -> owner_mode PTCOMA .)
    DELETE          reduce using rule 95 (owner_mode -> owner_mode PTCOMA .)
    INSERT          reduce using rule 95 (owner_mode -> owner_mode PTCOMA .)
    UPDATE          reduce using rule 95 (owner_mode -> owner_mode PTCOMA .)
    SELECT          reduce using rule 95 (owner_mode -> owner_mode PTCOMA .)
    $end            reduce using rule 95 (owner_mode -> owner_mode PTCOMA .)


state 107

    (96) owner_mode -> OWNER igual_id .

    OWNER           reduce using rule 96 (owner_mode -> OWNER igual_id .)
    MODE            reduce using rule 96 (owner_mode -> OWNER igual_id .)
    PTCOMA          reduce using rule 96 (owner_mode -> OWNER igual_id .)
    CREATE          reduce using rule 96 (owner_mode -> OWNER igual_id .)
    SHOW            reduce using rule 96 (owner_mode -> OWNER igual_id .)
    ALTER           reduce using rule 96 (owner_mode -> OWNER igual_id .)
    DROP            reduce using rule 96 (owner_mode -> OWNER igual_id .)
    DELETE          reduce using rule 96 (owner_mode -> OWNER igual_id .)
    INSERT          reduce using rule 96 (owner_mode -> OWNER igual_id .)
    UPDATE          reduce using rule 96 (owner_mode -> OWNER igual_id .)
    SELECT          reduce using rule 96 (owner_mode -> OWNER igual_id .)
    $end            reduce using rule 96 (owner_mode -> OWNER igual_id .)


state 108

    (99) igual_id -> IGUAL . ID

    ID              shift and go to state 174


state 109

    (100) igual_id -> ID .

    OWNER           reduce using rule 100 (igual_id -> ID .)
    MODE            reduce using rule 100 (igual_id -> ID .)
    PTCOMA          reduce using rule 100 (igual_id -> ID .)
    CREATE          reduce using rule 100 (igual_id -> ID .)
    SHOW            reduce using rule 100 (igual_id -> ID .)
    ALTER           reduce using rule 100 (igual_id -> ID .)
    DROP            reduce using rule 100 (igual_id -> ID .)
    DELETE          reduce using rule 100 (igual_id -> ID .)
    INSERT          reduce using rule 100 (igual_id -> ID .)
    UPDATE          reduce using rule 100 (igual_id -> ID .)
    SELECT          reduce using rule 100 (igual_id -> ID .)
    $end            reduce using rule 100 (igual_id -> ID .)


state 110

    (97) owner_mode -> MODE igual_id .

    OWNER           reduce using rule 97 (owner_mode -> MODE igual_id .)
    MODE            reduce using rule 97 (owner_mode -> MODE igual_id .)
    PTCOMA          reduce using rule 97 (owner_mode -> MODE igual_id .)
    CREATE          reduce using rule 97 (owner_mode -> MODE igual_id .)
    SHOW            reduce using rule 97 (owner_mode -> MODE igual_id .)
    ALTER           reduce using rule 97 (owner_mode -> MODE igual_id .)
    DROP            reduce using rule 97 (owner_mode -> MODE igual_id .)
    DELETE          reduce using rule 97 (owner_mode -> MODE igual_id .)
    INSERT          reduce using rule 97 (owner_mode -> MODE igual_id .)
    UPDATE          reduce using rule 97 (owner_mode -> MODE igual_id .)
    SELECT          reduce using rule 97 (owner_mode -> MODE igual_id .)
    $end            reduce using rule 97 (owner_mode -> MODE igual_id .)


state 111

    (102) like_id -> LIKE ID PTCOMA .

    CREATE          reduce using rule 102 (like_id -> LIKE ID PTCOMA .)
    SHOW            reduce using rule 102 (like_id -> LIKE ID PTCOMA .)
    ALTER           reduce using rule 102 (like_id -> LIKE ID PTCOMA .)
    DROP            reduce using rule 102 (like_id -> LIKE ID PTCOMA .)
    DELETE          reduce using rule 102 (like_id -> LIKE ID PTCOMA .)
    INSERT          reduce using rule 102 (like_id -> LIKE ID PTCOMA .)
    UPDATE          reduce using rule 102 (like_id -> LIKE ID PTCOMA .)
    SELECT          reduce using rule 102 (like_id -> LIKE ID PTCOMA .)
    $end            reduce using rule 102 (like_id -> LIKE ID PTCOMA .)


state 112

    (104) alter_db -> ALTER DATABASE ID al_db PTCOMA .

    CREATE          reduce using rule 104 (alter_db -> ALTER DATABASE ID al_db PTCOMA .)
    SHOW            reduce using rule 104 (alter_db -> ALTER DATABASE ID al_db PTCOMA .)
    ALTER           reduce using rule 104 (alter_db -> ALTER DATABASE ID al_db PTCOMA .)
    DROP            reduce using rule 104 (alter_db -> ALTER DATABASE ID al_db PTCOMA .)
    DELETE          reduce using rule 104 (alter_db -> ALTER DATABASE ID al_db PTCOMA .)
    INSERT          reduce using rule 104 (alter_db -> ALTER DATABASE ID al_db PTCOMA .)
    UPDATE          reduce using rule 104 (alter_db -> ALTER DATABASE ID al_db PTCOMA .)
    SELECT          reduce using rule 104 (alter_db -> ALTER DATABASE ID al_db PTCOMA .)
    $end            reduce using rule 104 (alter_db -> ALTER DATABASE ID al_db PTCOMA .)


state 113

    (105) al_db -> RENAME TO . ID

    ID              shift and go to state 175


state 114

    (106) al_db -> OWNER TO . owner_db
    (107) owner_db -> . ID
    (108) owner_db -> . CURRENT_USER
    (109) owner_db -> . SESSION_USER

    ID              shift and go to state 177
    CURRENT_USER    shift and go to state 178
    SESSION_USER    shift and go to state 179

    owner_db                       shift and go to state 176

state 115

    (147) acciones -> ALTER COLUMN . ID TYPE data_type

    ID              shift and go to state 180


state 116

    (146) acciones -> ADD acc .

    CREATE          reduce using rule 146 (acciones -> ADD acc .)
    SHOW            reduce using rule 146 (acciones -> ADD acc .)
    ALTER           reduce using rule 146 (acciones -> ADD acc .)
    DROP            reduce using rule 146 (acciones -> ADD acc .)
    DELETE          reduce using rule 146 (acciones -> ADD acc .)
    INSERT          reduce using rule 146 (acciones -> ADD acc .)
    UPDATE          reduce using rule 146 (acciones -> ADD acc .)
    SELECT          reduce using rule 146 (acciones -> ADD acc .)
    $end            reduce using rule 146 (acciones -> ADD acc .)


state 117

    (150) acc -> const .
    (123) const -> const . DEFAULT val
    (124) const -> const . NOT NULL
    (125) const -> const . NULL
    (126) const -> const . CONSTRAINT ID UNIQUE
    (127) const -> const . UNIQUE
    (128) const -> const . CONSTRAINT ID CHECK PARIZQ PARDER
    (129) const -> const . CHECK PARIZQ PARDER
    (130) const -> const . PRIMARY KEY
    (131) const -> const . REFERENCES ID

    CREATE          reduce using rule 150 (acc -> const .)
    SHOW            reduce using rule 150 (acc -> const .)
    ALTER           reduce using rule 150 (acc -> const .)
    DROP            reduce using rule 150 (acc -> const .)
    DELETE          reduce using rule 150 (acc -> const .)
    INSERT          reduce using rule 150 (acc -> const .)
    UPDATE          reduce using rule 150 (acc -> const .)
    SELECT          reduce using rule 150 (acc -> const .)
    $end            reduce using rule 150 (acc -> const .)
    DEFAULT         shift and go to state 181
    NOT             shift and go to state 182
    NULL            shift and go to state 183
    CONSTRAINT      shift and go to state 184
    UNIQUE          shift and go to state 185
    CHECK           shift and go to state 186
    PRIMARY         shift and go to state 187
    REFERENCES      shift and go to state 188


state 118

    (151) acc -> const_keys .
    (119) const_keys -> const_keys . COMA PRIMARY KEY PARIZQ lista_id PARDER
    (120) const_keys -> const_keys . COMA FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER

    CREATE          reduce using rule 151 (acc -> const_keys .)
    SHOW            reduce using rule 151 (acc -> const_keys .)
    ALTER           reduce using rule 151 (acc -> const_keys .)
    DROP            reduce using rule 151 (acc -> const_keys .)
    DELETE          reduce using rule 151 (acc -> const_keys .)
    INSERT          reduce using rule 151 (acc -> const_keys .)
    UPDATE          reduce using rule 151 (acc -> const_keys .)
    SELECT          reduce using rule 151 (acc -> const_keys .)
    $end            reduce using rule 151 (acc -> const_keys .)
    COMA            shift and go to state 189


state 119

    (132) const -> DEFAULT . val
    (143) val -> . ENTERO

    ENTERO          shift and go to state 191

    val                            shift and go to state 190

state 120

    (133) const -> NOT . NULL

    NULL            shift and go to state 192


state 121

    (134) const -> NULL .

    DEFAULT         reduce using rule 134 (const -> NULL .)
    NOT             reduce using rule 134 (const -> NULL .)
    NULL            reduce using rule 134 (const -> NULL .)
    CONSTRAINT      reduce using rule 134 (const -> NULL .)
    UNIQUE          reduce using rule 134 (const -> NULL .)
    CHECK           reduce using rule 134 (const -> NULL .)
    PRIMARY         reduce using rule 134 (const -> NULL .)
    REFERENCES      reduce using rule 134 (const -> NULL .)
    CREATE          reduce using rule 134 (const -> NULL .)
    SHOW            reduce using rule 134 (const -> NULL .)
    ALTER           reduce using rule 134 (const -> NULL .)
    DROP            reduce using rule 134 (const -> NULL .)
    DELETE          reduce using rule 134 (const -> NULL .)
    INSERT          reduce using rule 134 (const -> NULL .)
    UPDATE          reduce using rule 134 (const -> NULL .)
    SELECT          reduce using rule 134 (const -> NULL .)
    $end            reduce using rule 134 (const -> NULL .)
    COMA            reduce using rule 134 (const -> NULL .)
    PARDER          reduce using rule 134 (const -> NULL .)


state 122

    (135) const -> CONSTRAINT . ID UNIQUE
    (137) const -> CONSTRAINT . ID CHECK PARIZQ PARDER

    ID              shift and go to state 193


state 123

    (136) const -> UNIQUE .

    DEFAULT         reduce using rule 136 (const -> UNIQUE .)
    NOT             reduce using rule 136 (const -> UNIQUE .)
    NULL            reduce using rule 136 (const -> UNIQUE .)
    CONSTRAINT      reduce using rule 136 (const -> UNIQUE .)
    UNIQUE          reduce using rule 136 (const -> UNIQUE .)
    CHECK           reduce using rule 136 (const -> UNIQUE .)
    PRIMARY         reduce using rule 136 (const -> UNIQUE .)
    REFERENCES      reduce using rule 136 (const -> UNIQUE .)
    CREATE          reduce using rule 136 (const -> UNIQUE .)
    SHOW            reduce using rule 136 (const -> UNIQUE .)
    ALTER           reduce using rule 136 (const -> UNIQUE .)
    DROP            reduce using rule 136 (const -> UNIQUE .)
    DELETE          reduce using rule 136 (const -> UNIQUE .)
    INSERT          reduce using rule 136 (const -> UNIQUE .)
    UPDATE          reduce using rule 136 (const -> UNIQUE .)
    SELECT          reduce using rule 136 (const -> UNIQUE .)
    $end            reduce using rule 136 (const -> UNIQUE .)
    COMA            reduce using rule 136 (const -> UNIQUE .)
    PARDER          reduce using rule 136 (const -> UNIQUE .)


state 124

    (138) const -> CHECK . PARIZQ PARDER

    PARIZQ          shift and go to state 194


state 125

    (139) const -> PRIMARY . KEY
    (121) const_keys -> PRIMARY . KEY PARIZQ lista_id PARDER

    KEY             shift and go to state 195


state 126

    (140) const -> REFERENCES . ID

    ID              shift and go to state 196


state 127

    (122) const_keys -> FOREIGN . KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER

    KEY             shift and go to state 197


state 128

    (148) acciones -> DROP CONSTRAINT . ID

    ID              shift and go to state 198


state 129

    (149) acciones -> RENAME COLUMN . ID TO ID

    ID              shift and go to state 199


state 130

    (111) drop_db -> DROP DATABASE IF EXISTS PTCOMA .

    CREATE          reduce using rule 111 (drop_db -> DROP DATABASE IF EXISTS PTCOMA .)
    SHOW            reduce using rule 111 (drop_db -> DROP DATABASE IF EXISTS PTCOMA .)
    ALTER           reduce using rule 111 (drop_db -> DROP DATABASE IF EXISTS PTCOMA .)
    DROP            reduce using rule 111 (drop_db -> DROP DATABASE IF EXISTS PTCOMA .)
    DELETE          reduce using rule 111 (drop_db -> DROP DATABASE IF EXISTS PTCOMA .)
    INSERT          reduce using rule 111 (drop_db -> DROP DATABASE IF EXISTS PTCOMA .)
    UPDATE          reduce using rule 111 (drop_db -> DROP DATABASE IF EXISTS PTCOMA .)
    SELECT          reduce using rule 111 (drop_db -> DROP DATABASE IF EXISTS PTCOMA .)
    $end            reduce using rule 111 (drop_db -> DROP DATABASE IF EXISTS PTCOMA .)


state 131

    (153) s_delete -> DELETE FROM ID WHERE ID . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 200


state 132

    (142) lista_id -> ID .

    PARDER          reduce using rule 142 (lista_id -> ID .)
    COMA            reduce using rule 142 (lista_id -> ID .)


state 133

    (154) s_insert -> INSERT INTO ID PARIZQ lista_id . PARDER VALUES lista_values PTCOMA
    (141) lista_id -> lista_id . COMA ID

    PARDER          shift and go to state 201
    COMA            shift and go to state 202


state 134

    (165) lista_asig -> ID IGUAL . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    valores                        shift and go to state 203

state 135

    (162) s_update -> UPDATE ID SET lista_asig PTCOMA .

    CREATE          reduce using rule 162 (s_update -> UPDATE ID SET lista_asig PTCOMA .)
    SHOW            reduce using rule 162 (s_update -> UPDATE ID SET lista_asig PTCOMA .)
    ALTER           reduce using rule 162 (s_update -> UPDATE ID SET lista_asig PTCOMA .)
    DROP            reduce using rule 162 (s_update -> UPDATE ID SET lista_asig PTCOMA .)
    DELETE          reduce using rule 162 (s_update -> UPDATE ID SET lista_asig PTCOMA .)
    INSERT          reduce using rule 162 (s_update -> UPDATE ID SET lista_asig PTCOMA .)
    UPDATE          reduce using rule 162 (s_update -> UPDATE ID SET lista_asig PTCOMA .)
    SELECT          reduce using rule 162 (s_update -> UPDATE ID SET lista_asig PTCOMA .)
    $end            reduce using rule 162 (s_update -> UPDATE ID SET lista_asig PTCOMA .)


state 136

    (163) s_update -> UPDATE ID SET lista_asig WHERE . ID IGUAL expresion PTCOMA

    ID              shift and go to state 207


state 137

    (164) lista_asig -> lista_asig COMA . ID IGUAL valores

    ID              shift and go to state 208


state 138

    (25) s_select -> SELECT list_cols FROM list_from list_joins . list_conditions list_order PTCOMA
    (31) list_joins -> list_joins . join_type JOIN ID join_conditions
    (43) list_conditions -> . WHERE sel_cond
    (44) list_conditions -> . empty
    (34) join_type -> . INNER
    (35) join_type -> . LEFT
    (36) join_type -> . RIGHT
    (37) join_type -> . FULL
    (38) join_type -> . OUTER
    (39) join_type -> . empty
    (57) empty -> .

    WHERE           shift and go to state 211
    INNER           shift and go to state 142
    LEFT            shift and go to state 143
    RIGHT           shift and go to state 144
    FULL            shift and go to state 145
    OUTER           shift and go to state 146
    ORDER           reduce using rule 57 (empty -> .)
    PTCOMA          reduce using rule 57 (empty -> .)
    JOIN            reduce using rule 57 (empty -> .)

    list_conditions                shift and go to state 209
    join_type                      shift and go to state 210
    empty                          shift and go to state 212

state 139

    (29) list_from -> list_from COMA . ID

    ID              shift and go to state 213


state 140

    (32) list_joins -> join_type . JOIN ID join_conditions

    JOIN            shift and go to state 214


state 141

    (33) list_joins -> empty .
    (39) join_type -> empty .

  ! reduce/reduce conflict for JOIN resolved using rule 33 (list_joins -> empty .)
    WHERE           reduce using rule 33 (list_joins -> empty .)
    INNER           reduce using rule 33 (list_joins -> empty .)
    LEFT            reduce using rule 33 (list_joins -> empty .)
    RIGHT           reduce using rule 33 (list_joins -> empty .)
    FULL            reduce using rule 33 (list_joins -> empty .)
    OUTER           reduce using rule 33 (list_joins -> empty .)
    ORDER           reduce using rule 33 (list_joins -> empty .)
    PTCOMA          reduce using rule 33 (list_joins -> empty .)
    JOIN            reduce using rule 33 (list_joins -> empty .)

  ! JOIN            [ reduce using rule 39 (join_type -> empty .) ]


state 142

    (34) join_type -> INNER .

    JOIN            reduce using rule 34 (join_type -> INNER .)


state 143

    (35) join_type -> LEFT .

    JOIN            reduce using rule 35 (join_type -> LEFT .)


state 144

    (36) join_type -> RIGHT .

    JOIN            reduce using rule 36 (join_type -> RIGHT .)


state 145

    (37) join_type -> FULL .

    JOIN            reduce using rule 37 (join_type -> FULL .)


state 146

    (38) join_type -> OUTER .

    JOIN            reduce using rule 38 (join_type -> OUTER .)


state 147

    (58) create_type -> CREATE TYPE ID AS c_type PTCOMA .

    CREATE          reduce using rule 58 (create_type -> CREATE TYPE ID AS c_type PTCOMA .)
    SHOW            reduce using rule 58 (create_type -> CREATE TYPE ID AS c_type PTCOMA .)
    ALTER           reduce using rule 58 (create_type -> CREATE TYPE ID AS c_type PTCOMA .)
    DROP            reduce using rule 58 (create_type -> CREATE TYPE ID AS c_type PTCOMA .)
    DELETE          reduce using rule 58 (create_type -> CREATE TYPE ID AS c_type PTCOMA .)
    INSERT          reduce using rule 58 (create_type -> CREATE TYPE ID AS c_type PTCOMA .)
    UPDATE          reduce using rule 58 (create_type -> CREATE TYPE ID AS c_type PTCOMA .)
    SELECT          reduce using rule 58 (create_type -> CREATE TYPE ID AS c_type PTCOMA .)
    $end            reduce using rule 58 (create_type -> CREATE TYPE ID AS c_type PTCOMA .)


state 148

    (59) c_type -> ENUM PARIZQ . lista
    (61) lista -> . id_cadena lista1
    (66) id_cadena -> . ID data_type
    (67) id_cadena -> . CADENA

    ID              shift and go to state 151
    CADENA          shift and go to state 152

    lista                          shift and go to state 215
    id_cadena                      shift and go to state 150

state 149

    (60) c_type -> PARIZQ lista .

    PTCOMA          reduce using rule 60 (c_type -> PARIZQ lista .)


state 150

    (61) lista -> id_cadena . lista1
    (62) lista1 -> . lista1 COMA id_cadena
    (63) lista1 -> . lista1 PARDER
    (64) lista1 -> . COMA id_cadena
    (65) lista1 -> . PARDER

    COMA            shift and go to state 217
    PARDER          shift and go to state 218

    lista1                         shift and go to state 216

state 151

    (66) id_cadena -> ID . data_type
    (68) data_type -> . ENTERO
    (69) data_type -> . TEXT
    (70) data_type -> . SMALLINT
    (71) data_type -> . BEGINT
    (72) data_type -> . DECIMAL
    (73) data_type -> . REAL
    (74) data_type -> . DOUBLE PRECISION
    (75) data_type -> . MONEY
    (76) data_type -> . CHARACTER VARYING PARIZQ ENTERO PARDER
    (77) data_type -> . VARCHAR PARIZQ ENTERO PARDER
    (78) data_type -> . CHARACTER PARIZQ ENTERO PARDER
    (79) data_type -> . CHAR PARIZQ ENTERO PARDER
    (80) data_type -> . TIMESTAMP
    (81) data_type -> . TIMESTAMP time_zone
    (82) data_type -> . DATA
    (83) data_type -> . TIME
    (84) data_type -> . TIME time_zone
    (85) data_type -> . INTERVAL

    ENTERO          shift and go to state 154
    TEXT            shift and go to state 155
    SMALLINT        shift and go to state 156
    BEGINT          shift and go to state 157
    DECIMAL         shift and go to state 158
    REAL            shift and go to state 159
    DOUBLE          shift and go to state 160
    MONEY           shift and go to state 161
    CHARACTER       shift and go to state 162
    VARCHAR         shift and go to state 163
    CHAR            shift and go to state 164
    TIMESTAMP       shift and go to state 165
    DATA            shift and go to state 166
    TIME            shift and go to state 167
    INTERVAL        shift and go to state 168

    data_type                      shift and go to state 219

state 152

    (67) id_cadena -> CADENA .

    COMA            reduce using rule 67 (id_cadena -> CADENA .)
    PARDER          reduce using rule 67 (id_cadena -> CADENA .)
    PTCOMA          reduce using rule 67 (id_cadena -> CADENA .)


state 153

    (117) colum_list -> ID data_type .
    (118) colum_list -> ID data_type . const
    (123) const -> . const DEFAULT val
    (124) const -> . const NOT NULL
    (125) const -> . const NULL
    (126) const -> . const CONSTRAINT ID UNIQUE
    (127) const -> . const UNIQUE
    (128) const -> . const CONSTRAINT ID CHECK PARIZQ PARDER
    (129) const -> . const CHECK PARIZQ PARDER
    (130) const -> . const PRIMARY KEY
    (131) const -> . const REFERENCES ID
    (132) const -> . DEFAULT val
    (133) const -> . NOT NULL
    (134) const -> . NULL
    (135) const -> . CONSTRAINT ID UNIQUE
    (136) const -> . UNIQUE
    (137) const -> . CONSTRAINT ID CHECK PARIZQ PARDER
    (138) const -> . CHECK PARIZQ PARDER
    (139) const -> . PRIMARY KEY
    (140) const -> . REFERENCES ID

    COMA            reduce using rule 117 (colum_list -> ID data_type .)
    PARDER          reduce using rule 117 (colum_list -> ID data_type .)
    DEFAULT         shift and go to state 119
    NOT             shift and go to state 120
    NULL            shift and go to state 121
    CONSTRAINT      shift and go to state 122
    UNIQUE          shift and go to state 123
    CHECK           shift and go to state 124
    PRIMARY         shift and go to state 221
    REFERENCES      shift and go to state 126

    const                          shift and go to state 220

state 154

    (68) data_type -> ENTERO .

    DEFAULT         reduce using rule 68 (data_type -> ENTERO .)
    NOT             reduce using rule 68 (data_type -> ENTERO .)
    NULL            reduce using rule 68 (data_type -> ENTERO .)
    CONSTRAINT      reduce using rule 68 (data_type -> ENTERO .)
    UNIQUE          reduce using rule 68 (data_type -> ENTERO .)
    CHECK           reduce using rule 68 (data_type -> ENTERO .)
    PRIMARY         reduce using rule 68 (data_type -> ENTERO .)
    REFERENCES      reduce using rule 68 (data_type -> ENTERO .)
    COMA            reduce using rule 68 (data_type -> ENTERO .)
    PARDER          reduce using rule 68 (data_type -> ENTERO .)
    PTCOMA          reduce using rule 68 (data_type -> ENTERO .)
    CREATE          reduce using rule 68 (data_type -> ENTERO .)
    SHOW            reduce using rule 68 (data_type -> ENTERO .)
    ALTER           reduce using rule 68 (data_type -> ENTERO .)
    DROP            reduce using rule 68 (data_type -> ENTERO .)
    DELETE          reduce using rule 68 (data_type -> ENTERO .)
    INSERT          reduce using rule 68 (data_type -> ENTERO .)
    UPDATE          reduce using rule 68 (data_type -> ENTERO .)
    SELECT          reduce using rule 68 (data_type -> ENTERO .)
    $end            reduce using rule 68 (data_type -> ENTERO .)
    AND             reduce using rule 68 (data_type -> ENTERO .)
    ORDER           reduce using rule 68 (data_type -> ENTERO .)
    WHERE           reduce using rule 68 (data_type -> ENTERO .)
    INNER           reduce using rule 68 (data_type -> ENTERO .)
    LEFT            reduce using rule 68 (data_type -> ENTERO .)
    RIGHT           reduce using rule 68 (data_type -> ENTERO .)
    FULL            reduce using rule 68 (data_type -> ENTERO .)
    OUTER           reduce using rule 68 (data_type -> ENTERO .)
    JOIN            reduce using rule 68 (data_type -> ENTERO .)


state 155

    (69) data_type -> TEXT .

    DEFAULT         reduce using rule 69 (data_type -> TEXT .)
    NOT             reduce using rule 69 (data_type -> TEXT .)
    NULL            reduce using rule 69 (data_type -> TEXT .)
    CONSTRAINT      reduce using rule 69 (data_type -> TEXT .)
    UNIQUE          reduce using rule 69 (data_type -> TEXT .)
    CHECK           reduce using rule 69 (data_type -> TEXT .)
    PRIMARY         reduce using rule 69 (data_type -> TEXT .)
    REFERENCES      reduce using rule 69 (data_type -> TEXT .)
    COMA            reduce using rule 69 (data_type -> TEXT .)
    PARDER          reduce using rule 69 (data_type -> TEXT .)
    PTCOMA          reduce using rule 69 (data_type -> TEXT .)
    CREATE          reduce using rule 69 (data_type -> TEXT .)
    SHOW            reduce using rule 69 (data_type -> TEXT .)
    ALTER           reduce using rule 69 (data_type -> TEXT .)
    DROP            reduce using rule 69 (data_type -> TEXT .)
    DELETE          reduce using rule 69 (data_type -> TEXT .)
    INSERT          reduce using rule 69 (data_type -> TEXT .)
    UPDATE          reduce using rule 69 (data_type -> TEXT .)
    SELECT          reduce using rule 69 (data_type -> TEXT .)
    $end            reduce using rule 69 (data_type -> TEXT .)
    AND             reduce using rule 69 (data_type -> TEXT .)
    ORDER           reduce using rule 69 (data_type -> TEXT .)
    WHERE           reduce using rule 69 (data_type -> TEXT .)
    INNER           reduce using rule 69 (data_type -> TEXT .)
    LEFT            reduce using rule 69 (data_type -> TEXT .)
    RIGHT           reduce using rule 69 (data_type -> TEXT .)
    FULL            reduce using rule 69 (data_type -> TEXT .)
    OUTER           reduce using rule 69 (data_type -> TEXT .)
    JOIN            reduce using rule 69 (data_type -> TEXT .)


state 156

    (70) data_type -> SMALLINT .

    DEFAULT         reduce using rule 70 (data_type -> SMALLINT .)
    NOT             reduce using rule 70 (data_type -> SMALLINT .)
    NULL            reduce using rule 70 (data_type -> SMALLINT .)
    CONSTRAINT      reduce using rule 70 (data_type -> SMALLINT .)
    UNIQUE          reduce using rule 70 (data_type -> SMALLINT .)
    CHECK           reduce using rule 70 (data_type -> SMALLINT .)
    PRIMARY         reduce using rule 70 (data_type -> SMALLINT .)
    REFERENCES      reduce using rule 70 (data_type -> SMALLINT .)
    COMA            reduce using rule 70 (data_type -> SMALLINT .)
    PARDER          reduce using rule 70 (data_type -> SMALLINT .)
    PTCOMA          reduce using rule 70 (data_type -> SMALLINT .)
    CREATE          reduce using rule 70 (data_type -> SMALLINT .)
    SHOW            reduce using rule 70 (data_type -> SMALLINT .)
    ALTER           reduce using rule 70 (data_type -> SMALLINT .)
    DROP            reduce using rule 70 (data_type -> SMALLINT .)
    DELETE          reduce using rule 70 (data_type -> SMALLINT .)
    INSERT          reduce using rule 70 (data_type -> SMALLINT .)
    UPDATE          reduce using rule 70 (data_type -> SMALLINT .)
    SELECT          reduce using rule 70 (data_type -> SMALLINT .)
    $end            reduce using rule 70 (data_type -> SMALLINT .)
    AND             reduce using rule 70 (data_type -> SMALLINT .)
    ORDER           reduce using rule 70 (data_type -> SMALLINT .)
    WHERE           reduce using rule 70 (data_type -> SMALLINT .)
    INNER           reduce using rule 70 (data_type -> SMALLINT .)
    LEFT            reduce using rule 70 (data_type -> SMALLINT .)
    RIGHT           reduce using rule 70 (data_type -> SMALLINT .)
    FULL            reduce using rule 70 (data_type -> SMALLINT .)
    OUTER           reduce using rule 70 (data_type -> SMALLINT .)
    JOIN            reduce using rule 70 (data_type -> SMALLINT .)


state 157

    (71) data_type -> BEGINT .

    DEFAULT         reduce using rule 71 (data_type -> BEGINT .)
    NOT             reduce using rule 71 (data_type -> BEGINT .)
    NULL            reduce using rule 71 (data_type -> BEGINT .)
    CONSTRAINT      reduce using rule 71 (data_type -> BEGINT .)
    UNIQUE          reduce using rule 71 (data_type -> BEGINT .)
    CHECK           reduce using rule 71 (data_type -> BEGINT .)
    PRIMARY         reduce using rule 71 (data_type -> BEGINT .)
    REFERENCES      reduce using rule 71 (data_type -> BEGINT .)
    COMA            reduce using rule 71 (data_type -> BEGINT .)
    PARDER          reduce using rule 71 (data_type -> BEGINT .)
    PTCOMA          reduce using rule 71 (data_type -> BEGINT .)
    CREATE          reduce using rule 71 (data_type -> BEGINT .)
    SHOW            reduce using rule 71 (data_type -> BEGINT .)
    ALTER           reduce using rule 71 (data_type -> BEGINT .)
    DROP            reduce using rule 71 (data_type -> BEGINT .)
    DELETE          reduce using rule 71 (data_type -> BEGINT .)
    INSERT          reduce using rule 71 (data_type -> BEGINT .)
    UPDATE          reduce using rule 71 (data_type -> BEGINT .)
    SELECT          reduce using rule 71 (data_type -> BEGINT .)
    $end            reduce using rule 71 (data_type -> BEGINT .)
    AND             reduce using rule 71 (data_type -> BEGINT .)
    ORDER           reduce using rule 71 (data_type -> BEGINT .)
    WHERE           reduce using rule 71 (data_type -> BEGINT .)
    INNER           reduce using rule 71 (data_type -> BEGINT .)
    LEFT            reduce using rule 71 (data_type -> BEGINT .)
    RIGHT           reduce using rule 71 (data_type -> BEGINT .)
    FULL            reduce using rule 71 (data_type -> BEGINT .)
    OUTER           reduce using rule 71 (data_type -> BEGINT .)
    JOIN            reduce using rule 71 (data_type -> BEGINT .)


state 158

    (72) data_type -> DECIMAL .

    DEFAULT         reduce using rule 72 (data_type -> DECIMAL .)
    NOT             reduce using rule 72 (data_type -> DECIMAL .)
    NULL            reduce using rule 72 (data_type -> DECIMAL .)
    CONSTRAINT      reduce using rule 72 (data_type -> DECIMAL .)
    UNIQUE          reduce using rule 72 (data_type -> DECIMAL .)
    CHECK           reduce using rule 72 (data_type -> DECIMAL .)
    PRIMARY         reduce using rule 72 (data_type -> DECIMAL .)
    REFERENCES      reduce using rule 72 (data_type -> DECIMAL .)
    COMA            reduce using rule 72 (data_type -> DECIMAL .)
    PARDER          reduce using rule 72 (data_type -> DECIMAL .)
    PTCOMA          reduce using rule 72 (data_type -> DECIMAL .)
    CREATE          reduce using rule 72 (data_type -> DECIMAL .)
    SHOW            reduce using rule 72 (data_type -> DECIMAL .)
    ALTER           reduce using rule 72 (data_type -> DECIMAL .)
    DROP            reduce using rule 72 (data_type -> DECIMAL .)
    DELETE          reduce using rule 72 (data_type -> DECIMAL .)
    INSERT          reduce using rule 72 (data_type -> DECIMAL .)
    UPDATE          reduce using rule 72 (data_type -> DECIMAL .)
    SELECT          reduce using rule 72 (data_type -> DECIMAL .)
    $end            reduce using rule 72 (data_type -> DECIMAL .)
    AND             reduce using rule 72 (data_type -> DECIMAL .)
    ORDER           reduce using rule 72 (data_type -> DECIMAL .)
    WHERE           reduce using rule 72 (data_type -> DECIMAL .)
    INNER           reduce using rule 72 (data_type -> DECIMAL .)
    LEFT            reduce using rule 72 (data_type -> DECIMAL .)
    RIGHT           reduce using rule 72 (data_type -> DECIMAL .)
    FULL            reduce using rule 72 (data_type -> DECIMAL .)
    OUTER           reduce using rule 72 (data_type -> DECIMAL .)
    JOIN            reduce using rule 72 (data_type -> DECIMAL .)


state 159

    (73) data_type -> REAL .

    DEFAULT         reduce using rule 73 (data_type -> REAL .)
    NOT             reduce using rule 73 (data_type -> REAL .)
    NULL            reduce using rule 73 (data_type -> REAL .)
    CONSTRAINT      reduce using rule 73 (data_type -> REAL .)
    UNIQUE          reduce using rule 73 (data_type -> REAL .)
    CHECK           reduce using rule 73 (data_type -> REAL .)
    PRIMARY         reduce using rule 73 (data_type -> REAL .)
    REFERENCES      reduce using rule 73 (data_type -> REAL .)
    COMA            reduce using rule 73 (data_type -> REAL .)
    PARDER          reduce using rule 73 (data_type -> REAL .)
    PTCOMA          reduce using rule 73 (data_type -> REAL .)
    CREATE          reduce using rule 73 (data_type -> REAL .)
    SHOW            reduce using rule 73 (data_type -> REAL .)
    ALTER           reduce using rule 73 (data_type -> REAL .)
    DROP            reduce using rule 73 (data_type -> REAL .)
    DELETE          reduce using rule 73 (data_type -> REAL .)
    INSERT          reduce using rule 73 (data_type -> REAL .)
    UPDATE          reduce using rule 73 (data_type -> REAL .)
    SELECT          reduce using rule 73 (data_type -> REAL .)
    $end            reduce using rule 73 (data_type -> REAL .)
    AND             reduce using rule 73 (data_type -> REAL .)
    ORDER           reduce using rule 73 (data_type -> REAL .)
    WHERE           reduce using rule 73 (data_type -> REAL .)
    INNER           reduce using rule 73 (data_type -> REAL .)
    LEFT            reduce using rule 73 (data_type -> REAL .)
    RIGHT           reduce using rule 73 (data_type -> REAL .)
    FULL            reduce using rule 73 (data_type -> REAL .)
    OUTER           reduce using rule 73 (data_type -> REAL .)
    JOIN            reduce using rule 73 (data_type -> REAL .)


state 160

    (74) data_type -> DOUBLE . PRECISION

    PRECISION       shift and go to state 222


state 161

    (75) data_type -> MONEY .

    DEFAULT         reduce using rule 75 (data_type -> MONEY .)
    NOT             reduce using rule 75 (data_type -> MONEY .)
    NULL            reduce using rule 75 (data_type -> MONEY .)
    CONSTRAINT      reduce using rule 75 (data_type -> MONEY .)
    UNIQUE          reduce using rule 75 (data_type -> MONEY .)
    CHECK           reduce using rule 75 (data_type -> MONEY .)
    PRIMARY         reduce using rule 75 (data_type -> MONEY .)
    REFERENCES      reduce using rule 75 (data_type -> MONEY .)
    COMA            reduce using rule 75 (data_type -> MONEY .)
    PARDER          reduce using rule 75 (data_type -> MONEY .)
    PTCOMA          reduce using rule 75 (data_type -> MONEY .)
    CREATE          reduce using rule 75 (data_type -> MONEY .)
    SHOW            reduce using rule 75 (data_type -> MONEY .)
    ALTER           reduce using rule 75 (data_type -> MONEY .)
    DROP            reduce using rule 75 (data_type -> MONEY .)
    DELETE          reduce using rule 75 (data_type -> MONEY .)
    INSERT          reduce using rule 75 (data_type -> MONEY .)
    UPDATE          reduce using rule 75 (data_type -> MONEY .)
    SELECT          reduce using rule 75 (data_type -> MONEY .)
    $end            reduce using rule 75 (data_type -> MONEY .)
    AND             reduce using rule 75 (data_type -> MONEY .)
    ORDER           reduce using rule 75 (data_type -> MONEY .)
    WHERE           reduce using rule 75 (data_type -> MONEY .)
    INNER           reduce using rule 75 (data_type -> MONEY .)
    LEFT            reduce using rule 75 (data_type -> MONEY .)
    RIGHT           reduce using rule 75 (data_type -> MONEY .)
    FULL            reduce using rule 75 (data_type -> MONEY .)
    OUTER           reduce using rule 75 (data_type -> MONEY .)
    JOIN            reduce using rule 75 (data_type -> MONEY .)


state 162

    (76) data_type -> CHARACTER . VARYING PARIZQ ENTERO PARDER
    (78) data_type -> CHARACTER . PARIZQ ENTERO PARDER

    VARYING         shift and go to state 223
    PARIZQ          shift and go to state 224


state 163

    (77) data_type -> VARCHAR . PARIZQ ENTERO PARDER

    PARIZQ          shift and go to state 225


state 164

    (79) data_type -> CHAR . PARIZQ ENTERO PARDER

    PARIZQ          shift and go to state 226


state 165

    (80) data_type -> TIMESTAMP .
    (81) data_type -> TIMESTAMP . time_zone
    (86) time_zone -> . WITH TIME ZONE
    (87) time_zone -> . WITHOUT TIME ZONE

    DEFAULT         reduce using rule 80 (data_type -> TIMESTAMP .)
    NOT             reduce using rule 80 (data_type -> TIMESTAMP .)
    NULL            reduce using rule 80 (data_type -> TIMESTAMP .)
    CONSTRAINT      reduce using rule 80 (data_type -> TIMESTAMP .)
    UNIQUE          reduce using rule 80 (data_type -> TIMESTAMP .)
    CHECK           reduce using rule 80 (data_type -> TIMESTAMP .)
    PRIMARY         reduce using rule 80 (data_type -> TIMESTAMP .)
    REFERENCES      reduce using rule 80 (data_type -> TIMESTAMP .)
    COMA            reduce using rule 80 (data_type -> TIMESTAMP .)
    PARDER          reduce using rule 80 (data_type -> TIMESTAMP .)
    PTCOMA          reduce using rule 80 (data_type -> TIMESTAMP .)
    CREATE          reduce using rule 80 (data_type -> TIMESTAMP .)
    SHOW            reduce using rule 80 (data_type -> TIMESTAMP .)
    ALTER           reduce using rule 80 (data_type -> TIMESTAMP .)
    DROP            reduce using rule 80 (data_type -> TIMESTAMP .)
    DELETE          reduce using rule 80 (data_type -> TIMESTAMP .)
    INSERT          reduce using rule 80 (data_type -> TIMESTAMP .)
    UPDATE          reduce using rule 80 (data_type -> TIMESTAMP .)
    SELECT          reduce using rule 80 (data_type -> TIMESTAMP .)
    $end            reduce using rule 80 (data_type -> TIMESTAMP .)
    AND             reduce using rule 80 (data_type -> TIMESTAMP .)
    ORDER           reduce using rule 80 (data_type -> TIMESTAMP .)
    WHERE           reduce using rule 80 (data_type -> TIMESTAMP .)
    INNER           reduce using rule 80 (data_type -> TIMESTAMP .)
    LEFT            reduce using rule 80 (data_type -> TIMESTAMP .)
    RIGHT           reduce using rule 80 (data_type -> TIMESTAMP .)
    FULL            reduce using rule 80 (data_type -> TIMESTAMP .)
    OUTER           reduce using rule 80 (data_type -> TIMESTAMP .)
    JOIN            reduce using rule 80 (data_type -> TIMESTAMP .)
    WITH            shift and go to state 228
    WITHOUT         shift and go to state 229

    time_zone                      shift and go to state 227

state 166

    (82) data_type -> DATA .

    DEFAULT         reduce using rule 82 (data_type -> DATA .)
    NOT             reduce using rule 82 (data_type -> DATA .)
    NULL            reduce using rule 82 (data_type -> DATA .)
    CONSTRAINT      reduce using rule 82 (data_type -> DATA .)
    UNIQUE          reduce using rule 82 (data_type -> DATA .)
    CHECK           reduce using rule 82 (data_type -> DATA .)
    PRIMARY         reduce using rule 82 (data_type -> DATA .)
    REFERENCES      reduce using rule 82 (data_type -> DATA .)
    COMA            reduce using rule 82 (data_type -> DATA .)
    PARDER          reduce using rule 82 (data_type -> DATA .)
    PTCOMA          reduce using rule 82 (data_type -> DATA .)
    CREATE          reduce using rule 82 (data_type -> DATA .)
    SHOW            reduce using rule 82 (data_type -> DATA .)
    ALTER           reduce using rule 82 (data_type -> DATA .)
    DROP            reduce using rule 82 (data_type -> DATA .)
    DELETE          reduce using rule 82 (data_type -> DATA .)
    INSERT          reduce using rule 82 (data_type -> DATA .)
    UPDATE          reduce using rule 82 (data_type -> DATA .)
    SELECT          reduce using rule 82 (data_type -> DATA .)
    $end            reduce using rule 82 (data_type -> DATA .)
    AND             reduce using rule 82 (data_type -> DATA .)
    ORDER           reduce using rule 82 (data_type -> DATA .)
    WHERE           reduce using rule 82 (data_type -> DATA .)
    INNER           reduce using rule 82 (data_type -> DATA .)
    LEFT            reduce using rule 82 (data_type -> DATA .)
    RIGHT           reduce using rule 82 (data_type -> DATA .)
    FULL            reduce using rule 82 (data_type -> DATA .)
    OUTER           reduce using rule 82 (data_type -> DATA .)
    JOIN            reduce using rule 82 (data_type -> DATA .)


state 167

    (83) data_type -> TIME .
    (84) data_type -> TIME . time_zone
    (86) time_zone -> . WITH TIME ZONE
    (87) time_zone -> . WITHOUT TIME ZONE

    DEFAULT         reduce using rule 83 (data_type -> TIME .)
    NOT             reduce using rule 83 (data_type -> TIME .)
    NULL            reduce using rule 83 (data_type -> TIME .)
    CONSTRAINT      reduce using rule 83 (data_type -> TIME .)
    UNIQUE          reduce using rule 83 (data_type -> TIME .)
    CHECK           reduce using rule 83 (data_type -> TIME .)
    PRIMARY         reduce using rule 83 (data_type -> TIME .)
    REFERENCES      reduce using rule 83 (data_type -> TIME .)
    COMA            reduce using rule 83 (data_type -> TIME .)
    PARDER          reduce using rule 83 (data_type -> TIME .)
    PTCOMA          reduce using rule 83 (data_type -> TIME .)
    CREATE          reduce using rule 83 (data_type -> TIME .)
    SHOW            reduce using rule 83 (data_type -> TIME .)
    ALTER           reduce using rule 83 (data_type -> TIME .)
    DROP            reduce using rule 83 (data_type -> TIME .)
    DELETE          reduce using rule 83 (data_type -> TIME .)
    INSERT          reduce using rule 83 (data_type -> TIME .)
    UPDATE          reduce using rule 83 (data_type -> TIME .)
    SELECT          reduce using rule 83 (data_type -> TIME .)
    $end            reduce using rule 83 (data_type -> TIME .)
    AND             reduce using rule 83 (data_type -> TIME .)
    ORDER           reduce using rule 83 (data_type -> TIME .)
    WHERE           reduce using rule 83 (data_type -> TIME .)
    INNER           reduce using rule 83 (data_type -> TIME .)
    LEFT            reduce using rule 83 (data_type -> TIME .)
    RIGHT           reduce using rule 83 (data_type -> TIME .)
    FULL            reduce using rule 83 (data_type -> TIME .)
    OUTER           reduce using rule 83 (data_type -> TIME .)
    JOIN            reduce using rule 83 (data_type -> TIME .)
    WITH            shift and go to state 228
    WITHOUT         shift and go to state 229

    time_zone                      shift and go to state 230

state 168

    (85) data_type -> INTERVAL .

    DEFAULT         reduce using rule 85 (data_type -> INTERVAL .)
    NOT             reduce using rule 85 (data_type -> INTERVAL .)
    NULL            reduce using rule 85 (data_type -> INTERVAL .)
    CONSTRAINT      reduce using rule 85 (data_type -> INTERVAL .)
    UNIQUE          reduce using rule 85 (data_type -> INTERVAL .)
    CHECK           reduce using rule 85 (data_type -> INTERVAL .)
    PRIMARY         reduce using rule 85 (data_type -> INTERVAL .)
    REFERENCES      reduce using rule 85 (data_type -> INTERVAL .)
    COMA            reduce using rule 85 (data_type -> INTERVAL .)
    PARDER          reduce using rule 85 (data_type -> INTERVAL .)
    PTCOMA          reduce using rule 85 (data_type -> INTERVAL .)
    CREATE          reduce using rule 85 (data_type -> INTERVAL .)
    SHOW            reduce using rule 85 (data_type -> INTERVAL .)
    ALTER           reduce using rule 85 (data_type -> INTERVAL .)
    DROP            reduce using rule 85 (data_type -> INTERVAL .)
    DELETE          reduce using rule 85 (data_type -> INTERVAL .)
    INSERT          reduce using rule 85 (data_type -> INTERVAL .)
    UPDATE          reduce using rule 85 (data_type -> INTERVAL .)
    SELECT          reduce using rule 85 (data_type -> INTERVAL .)
    $end            reduce using rule 85 (data_type -> INTERVAL .)
    AND             reduce using rule 85 (data_type -> INTERVAL .)
    ORDER           reduce using rule 85 (data_type -> INTERVAL .)
    WHERE           reduce using rule 85 (data_type -> INTERVAL .)
    INNER           reduce using rule 85 (data_type -> INTERVAL .)
    LEFT            reduce using rule 85 (data_type -> INTERVAL .)
    RIGHT           reduce using rule 85 (data_type -> INTERVAL .)
    FULL            reduce using rule 85 (data_type -> INTERVAL .)
    OUTER           reduce using rule 85 (data_type -> INTERVAL .)
    JOIN            reduce using rule 85 (data_type -> INTERVAL .)


state 169

    (112) create_table -> CREATE TABLE ID PARIZQ values PARDER . PTCOMA

    PTCOMA          shift and go to state 231


state 170

    (114) values -> colum_list COMA . const_keys
    (115) colum_list -> colum_list COMA . ID data_type
    (116) colum_list -> colum_list COMA . ID data_type const
    (119) const_keys -> . const_keys COMA PRIMARY KEY PARIZQ lista_id PARDER
    (120) const_keys -> . const_keys COMA FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER
    (121) const_keys -> . PRIMARY KEY PARIZQ lista_id PARDER
    (122) const_keys -> . FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER

    ID              shift and go to state 233
    PRIMARY         shift and go to state 234
    FOREIGN         shift and go to state 127

    const_keys                     shift and go to state 232

state 171

    (91) c_db1 -> IF NOT EXISTS ID . owner_mode
    (93) owner_mode -> . owner_mode OWNER igual_id
    (94) owner_mode -> . owner_mode MODE igual_id
    (95) owner_mode -> . owner_mode PTCOMA
    (96) owner_mode -> . OWNER igual_id
    (97) owner_mode -> . MODE igual_id
    (98) owner_mode -> . PTCOMA

    OWNER           shift and go to state 74
    MODE            shift and go to state 75
    PTCOMA          shift and go to state 76

    owner_mode                     shift and go to state 235

state 172

    (93) owner_mode -> owner_mode OWNER igual_id .

    OWNER           reduce using rule 93 (owner_mode -> owner_mode OWNER igual_id .)
    MODE            reduce using rule 93 (owner_mode -> owner_mode OWNER igual_id .)
    PTCOMA          reduce using rule 93 (owner_mode -> owner_mode OWNER igual_id .)
    CREATE          reduce using rule 93 (owner_mode -> owner_mode OWNER igual_id .)
    SHOW            reduce using rule 93 (owner_mode -> owner_mode OWNER igual_id .)
    ALTER           reduce using rule 93 (owner_mode -> owner_mode OWNER igual_id .)
    DROP            reduce using rule 93 (owner_mode -> owner_mode OWNER igual_id .)
    DELETE          reduce using rule 93 (owner_mode -> owner_mode OWNER igual_id .)
    INSERT          reduce using rule 93 (owner_mode -> owner_mode OWNER igual_id .)
    UPDATE          reduce using rule 93 (owner_mode -> owner_mode OWNER igual_id .)
    SELECT          reduce using rule 93 (owner_mode -> owner_mode OWNER igual_id .)
    $end            reduce using rule 93 (owner_mode -> owner_mode OWNER igual_id .)


state 173

    (94) owner_mode -> owner_mode MODE igual_id .

    OWNER           reduce using rule 94 (owner_mode -> owner_mode MODE igual_id .)
    MODE            reduce using rule 94 (owner_mode -> owner_mode MODE igual_id .)
    PTCOMA          reduce using rule 94 (owner_mode -> owner_mode MODE igual_id .)
    CREATE          reduce using rule 94 (owner_mode -> owner_mode MODE igual_id .)
    SHOW            reduce using rule 94 (owner_mode -> owner_mode MODE igual_id .)
    ALTER           reduce using rule 94 (owner_mode -> owner_mode MODE igual_id .)
    DROP            reduce using rule 94 (owner_mode -> owner_mode MODE igual_id .)
    DELETE          reduce using rule 94 (owner_mode -> owner_mode MODE igual_id .)
    INSERT          reduce using rule 94 (owner_mode -> owner_mode MODE igual_id .)
    UPDATE          reduce using rule 94 (owner_mode -> owner_mode MODE igual_id .)
    SELECT          reduce using rule 94 (owner_mode -> owner_mode MODE igual_id .)
    $end            reduce using rule 94 (owner_mode -> owner_mode MODE igual_id .)


state 174

    (99) igual_id -> IGUAL ID .

    OWNER           reduce using rule 99 (igual_id -> IGUAL ID .)
    MODE            reduce using rule 99 (igual_id -> IGUAL ID .)
    PTCOMA          reduce using rule 99 (igual_id -> IGUAL ID .)
    CREATE          reduce using rule 99 (igual_id -> IGUAL ID .)
    SHOW            reduce using rule 99 (igual_id -> IGUAL ID .)
    ALTER           reduce using rule 99 (igual_id -> IGUAL ID .)
    DROP            reduce using rule 99 (igual_id -> IGUAL ID .)
    DELETE          reduce using rule 99 (igual_id -> IGUAL ID .)
    INSERT          reduce using rule 99 (igual_id -> IGUAL ID .)
    UPDATE          reduce using rule 99 (igual_id -> IGUAL ID .)
    SELECT          reduce using rule 99 (igual_id -> IGUAL ID .)
    $end            reduce using rule 99 (igual_id -> IGUAL ID .)


state 175

    (105) al_db -> RENAME TO ID .

    PTCOMA          reduce using rule 105 (al_db -> RENAME TO ID .)


state 176

    (106) al_db -> OWNER TO owner_db .

    PTCOMA          reduce using rule 106 (al_db -> OWNER TO owner_db .)


state 177

    (107) owner_db -> ID .

    PTCOMA          reduce using rule 107 (owner_db -> ID .)


state 178

    (108) owner_db -> CURRENT_USER .

    PTCOMA          reduce using rule 108 (owner_db -> CURRENT_USER .)


state 179

    (109) owner_db -> SESSION_USER .

    PTCOMA          reduce using rule 109 (owner_db -> SESSION_USER .)


state 180

    (147) acciones -> ALTER COLUMN ID . TYPE data_type

    TYPE            shift and go to state 236


state 181

    (123) const -> const DEFAULT . val
    (143) val -> . ENTERO

    ENTERO          shift and go to state 191

    val                            shift and go to state 237

state 182

    (124) const -> const NOT . NULL

    NULL            shift and go to state 238


state 183

    (125) const -> const NULL .

    DEFAULT         reduce using rule 125 (const -> const NULL .)
    NOT             reduce using rule 125 (const -> const NULL .)
    NULL            reduce using rule 125 (const -> const NULL .)
    CONSTRAINT      reduce using rule 125 (const -> const NULL .)
    UNIQUE          reduce using rule 125 (const -> const NULL .)
    CHECK           reduce using rule 125 (const -> const NULL .)
    PRIMARY         reduce using rule 125 (const -> const NULL .)
    REFERENCES      reduce using rule 125 (const -> const NULL .)
    CREATE          reduce using rule 125 (const -> const NULL .)
    SHOW            reduce using rule 125 (const -> const NULL .)
    ALTER           reduce using rule 125 (const -> const NULL .)
    DROP            reduce using rule 125 (const -> const NULL .)
    DELETE          reduce using rule 125 (const -> const NULL .)
    INSERT          reduce using rule 125 (const -> const NULL .)
    UPDATE          reduce using rule 125 (const -> const NULL .)
    SELECT          reduce using rule 125 (const -> const NULL .)
    $end            reduce using rule 125 (const -> const NULL .)
    COMA            reduce using rule 125 (const -> const NULL .)
    PARDER          reduce using rule 125 (const -> const NULL .)


state 184

    (126) const -> const CONSTRAINT . ID UNIQUE
    (128) const -> const CONSTRAINT . ID CHECK PARIZQ PARDER

    ID              shift and go to state 239


state 185

    (127) const -> const UNIQUE .

    DEFAULT         reduce using rule 127 (const -> const UNIQUE .)
    NOT             reduce using rule 127 (const -> const UNIQUE .)
    NULL            reduce using rule 127 (const -> const UNIQUE .)
    CONSTRAINT      reduce using rule 127 (const -> const UNIQUE .)
    UNIQUE          reduce using rule 127 (const -> const UNIQUE .)
    CHECK           reduce using rule 127 (const -> const UNIQUE .)
    PRIMARY         reduce using rule 127 (const -> const UNIQUE .)
    REFERENCES      reduce using rule 127 (const -> const UNIQUE .)
    CREATE          reduce using rule 127 (const -> const UNIQUE .)
    SHOW            reduce using rule 127 (const -> const UNIQUE .)
    ALTER           reduce using rule 127 (const -> const UNIQUE .)
    DROP            reduce using rule 127 (const -> const UNIQUE .)
    DELETE          reduce using rule 127 (const -> const UNIQUE .)
    INSERT          reduce using rule 127 (const -> const UNIQUE .)
    UPDATE          reduce using rule 127 (const -> const UNIQUE .)
    SELECT          reduce using rule 127 (const -> const UNIQUE .)
    $end            reduce using rule 127 (const -> const UNIQUE .)
    COMA            reduce using rule 127 (const -> const UNIQUE .)
    PARDER          reduce using rule 127 (const -> const UNIQUE .)


state 186

    (129) const -> const CHECK . PARIZQ PARDER

    PARIZQ          shift and go to state 240


state 187

    (130) const -> const PRIMARY . KEY

    KEY             shift and go to state 241


state 188

    (131) const -> const REFERENCES . ID

    ID              shift and go to state 242


state 189

    (119) const_keys -> const_keys COMA . PRIMARY KEY PARIZQ lista_id PARDER
    (120) const_keys -> const_keys COMA . FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER

    PRIMARY         shift and go to state 243
    FOREIGN         shift and go to state 244


state 190

    (132) const -> DEFAULT val .

    DEFAULT         reduce using rule 132 (const -> DEFAULT val .)
    NOT             reduce using rule 132 (const -> DEFAULT val .)
    NULL            reduce using rule 132 (const -> DEFAULT val .)
    CONSTRAINT      reduce using rule 132 (const -> DEFAULT val .)
    UNIQUE          reduce using rule 132 (const -> DEFAULT val .)
    CHECK           reduce using rule 132 (const -> DEFAULT val .)
    PRIMARY         reduce using rule 132 (const -> DEFAULT val .)
    REFERENCES      reduce using rule 132 (const -> DEFAULT val .)
    CREATE          reduce using rule 132 (const -> DEFAULT val .)
    SHOW            reduce using rule 132 (const -> DEFAULT val .)
    ALTER           reduce using rule 132 (const -> DEFAULT val .)
    DROP            reduce using rule 132 (const -> DEFAULT val .)
    DELETE          reduce using rule 132 (const -> DEFAULT val .)
    INSERT          reduce using rule 132 (const -> DEFAULT val .)
    UPDATE          reduce using rule 132 (const -> DEFAULT val .)
    SELECT          reduce using rule 132 (const -> DEFAULT val .)
    $end            reduce using rule 132 (const -> DEFAULT val .)
    COMA            reduce using rule 132 (const -> DEFAULT val .)
    PARDER          reduce using rule 132 (const -> DEFAULT val .)


state 191

    (143) val -> ENTERO .

    DEFAULT         reduce using rule 143 (val -> ENTERO .)
    NOT             reduce using rule 143 (val -> ENTERO .)
    NULL            reduce using rule 143 (val -> ENTERO .)
    CONSTRAINT      reduce using rule 143 (val -> ENTERO .)
    UNIQUE          reduce using rule 143 (val -> ENTERO .)
    CHECK           reduce using rule 143 (val -> ENTERO .)
    PRIMARY         reduce using rule 143 (val -> ENTERO .)
    REFERENCES      reduce using rule 143 (val -> ENTERO .)
    CREATE          reduce using rule 143 (val -> ENTERO .)
    SHOW            reduce using rule 143 (val -> ENTERO .)
    ALTER           reduce using rule 143 (val -> ENTERO .)
    DROP            reduce using rule 143 (val -> ENTERO .)
    DELETE          reduce using rule 143 (val -> ENTERO .)
    INSERT          reduce using rule 143 (val -> ENTERO .)
    UPDATE          reduce using rule 143 (val -> ENTERO .)
    SELECT          reduce using rule 143 (val -> ENTERO .)
    $end            reduce using rule 143 (val -> ENTERO .)
    COMA            reduce using rule 143 (val -> ENTERO .)
    PARDER          reduce using rule 143 (val -> ENTERO .)


state 192

    (133) const -> NOT NULL .

    DEFAULT         reduce using rule 133 (const -> NOT NULL .)
    NOT             reduce using rule 133 (const -> NOT NULL .)
    NULL            reduce using rule 133 (const -> NOT NULL .)
    CONSTRAINT      reduce using rule 133 (const -> NOT NULL .)
    UNIQUE          reduce using rule 133 (const -> NOT NULL .)
    CHECK           reduce using rule 133 (const -> NOT NULL .)
    PRIMARY         reduce using rule 133 (const -> NOT NULL .)
    REFERENCES      reduce using rule 133 (const -> NOT NULL .)
    CREATE          reduce using rule 133 (const -> NOT NULL .)
    SHOW            reduce using rule 133 (const -> NOT NULL .)
    ALTER           reduce using rule 133 (const -> NOT NULL .)
    DROP            reduce using rule 133 (const -> NOT NULL .)
    DELETE          reduce using rule 133 (const -> NOT NULL .)
    INSERT          reduce using rule 133 (const -> NOT NULL .)
    UPDATE          reduce using rule 133 (const -> NOT NULL .)
    SELECT          reduce using rule 133 (const -> NOT NULL .)
    $end            reduce using rule 133 (const -> NOT NULL .)
    COMA            reduce using rule 133 (const -> NOT NULL .)
    PARDER          reduce using rule 133 (const -> NOT NULL .)


state 193

    (135) const -> CONSTRAINT ID . UNIQUE
    (137) const -> CONSTRAINT ID . CHECK PARIZQ PARDER

    UNIQUE          shift and go to state 245
    CHECK           shift and go to state 246


state 194

    (138) const -> CHECK PARIZQ . PARDER

    PARDER          shift and go to state 247


state 195

    (139) const -> PRIMARY KEY .
    (121) const_keys -> PRIMARY KEY . PARIZQ lista_id PARDER

    DEFAULT         reduce using rule 139 (const -> PRIMARY KEY .)
    NOT             reduce using rule 139 (const -> PRIMARY KEY .)
    NULL            reduce using rule 139 (const -> PRIMARY KEY .)
    CONSTRAINT      reduce using rule 139 (const -> PRIMARY KEY .)
    UNIQUE          reduce using rule 139 (const -> PRIMARY KEY .)
    CHECK           reduce using rule 139 (const -> PRIMARY KEY .)
    PRIMARY         reduce using rule 139 (const -> PRIMARY KEY .)
    REFERENCES      reduce using rule 139 (const -> PRIMARY KEY .)
    CREATE          reduce using rule 139 (const -> PRIMARY KEY .)
    SHOW            reduce using rule 139 (const -> PRIMARY KEY .)
    ALTER           reduce using rule 139 (const -> PRIMARY KEY .)
    DROP            reduce using rule 139 (const -> PRIMARY KEY .)
    DELETE          reduce using rule 139 (const -> PRIMARY KEY .)
    INSERT          reduce using rule 139 (const -> PRIMARY KEY .)
    UPDATE          reduce using rule 139 (const -> PRIMARY KEY .)
    SELECT          reduce using rule 139 (const -> PRIMARY KEY .)
    $end            reduce using rule 139 (const -> PRIMARY KEY .)
    PARIZQ          shift and go to state 248


state 196

    (140) const -> REFERENCES ID .

    DEFAULT         reduce using rule 140 (const -> REFERENCES ID .)
    NOT             reduce using rule 140 (const -> REFERENCES ID .)
    NULL            reduce using rule 140 (const -> REFERENCES ID .)
    CONSTRAINT      reduce using rule 140 (const -> REFERENCES ID .)
    UNIQUE          reduce using rule 140 (const -> REFERENCES ID .)
    CHECK           reduce using rule 140 (const -> REFERENCES ID .)
    PRIMARY         reduce using rule 140 (const -> REFERENCES ID .)
    REFERENCES      reduce using rule 140 (const -> REFERENCES ID .)
    CREATE          reduce using rule 140 (const -> REFERENCES ID .)
    SHOW            reduce using rule 140 (const -> REFERENCES ID .)
    ALTER           reduce using rule 140 (const -> REFERENCES ID .)
    DROP            reduce using rule 140 (const -> REFERENCES ID .)
    DELETE          reduce using rule 140 (const -> REFERENCES ID .)
    INSERT          reduce using rule 140 (const -> REFERENCES ID .)
    UPDATE          reduce using rule 140 (const -> REFERENCES ID .)
    SELECT          reduce using rule 140 (const -> REFERENCES ID .)
    $end            reduce using rule 140 (const -> REFERENCES ID .)
    COMA            reduce using rule 140 (const -> REFERENCES ID .)
    PARDER          reduce using rule 140 (const -> REFERENCES ID .)


state 197

    (122) const_keys -> FOREIGN KEY . PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER

    PARIZQ          shift and go to state 249


state 198

    (148) acciones -> DROP CONSTRAINT ID .

    CREATE          reduce using rule 148 (acciones -> DROP CONSTRAINT ID .)
    SHOW            reduce using rule 148 (acciones -> DROP CONSTRAINT ID .)
    ALTER           reduce using rule 148 (acciones -> DROP CONSTRAINT ID .)
    DROP            reduce using rule 148 (acciones -> DROP CONSTRAINT ID .)
    DELETE          reduce using rule 148 (acciones -> DROP CONSTRAINT ID .)
    INSERT          reduce using rule 148 (acciones -> DROP CONSTRAINT ID .)
    UPDATE          reduce using rule 148 (acciones -> DROP CONSTRAINT ID .)
    SELECT          reduce using rule 148 (acciones -> DROP CONSTRAINT ID .)
    $end            reduce using rule 148 (acciones -> DROP CONSTRAINT ID .)


state 199

    (149) acciones -> RENAME COLUMN ID . TO ID

    TO              shift and go to state 250


state 200

    (153) s_delete -> DELETE FROM ID WHERE ID IGUAL . expresion PTCOMA
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 251
    valores                        shift and go to state 262

state 201

    (154) s_insert -> INSERT INTO ID PARIZQ lista_id PARDER . VALUES lista_values PTCOMA

    VALUES          shift and go to state 263


state 202

    (141) lista_id -> lista_id COMA . ID

    ID              shift and go to state 264


state 203

    (165) lista_asig -> ID IGUAL valores .

    PTCOMA          reduce using rule 165 (lista_asig -> ID IGUAL valores .)
    WHERE           reduce using rule 165 (lista_asig -> ID IGUAL valores .)
    COMA            reduce using rule 165 (lista_asig -> ID IGUAL valores .)


state 204

    (159) valores -> CADENA .

    PTCOMA          reduce using rule 159 (valores -> CADENA .)
    WHERE           reduce using rule 159 (valores -> CADENA .)
    COMA            reduce using rule 159 (valores -> CADENA .)
    OR              reduce using rule 159 (valores -> CADENA .)
    AND             reduce using rule 159 (valores -> CADENA .)
    MAYOR           reduce using rule 159 (valores -> CADENA .)
    MENOR           reduce using rule 159 (valores -> CADENA .)
    MAYIG           reduce using rule 159 (valores -> CADENA .)
    MENIG           reduce using rule 159 (valores -> CADENA .)
    IGUAQ           reduce using rule 159 (valores -> CADENA .)
    DIFEQ           reduce using rule 159 (valores -> CADENA .)
    POTEN           reduce using rule 159 (valores -> CADENA .)
    MULTI           reduce using rule 159 (valores -> CADENA .)
    DIVIS           reduce using rule 159 (valores -> CADENA .)
    SUMAS           reduce using rule 159 (valores -> CADENA .)
    MENOS           reduce using rule 159 (valores -> CADENA .)
    PARDER          reduce using rule 159 (valores -> CADENA .)


state 205

    (160) valores -> ENTERO .

    PTCOMA          reduce using rule 160 (valores -> ENTERO .)
    WHERE           reduce using rule 160 (valores -> ENTERO .)
    COMA            reduce using rule 160 (valores -> ENTERO .)
    OR              reduce using rule 160 (valores -> ENTERO .)
    AND             reduce using rule 160 (valores -> ENTERO .)
    MAYOR           reduce using rule 160 (valores -> ENTERO .)
    MENOR           reduce using rule 160 (valores -> ENTERO .)
    MAYIG           reduce using rule 160 (valores -> ENTERO .)
    MENIG           reduce using rule 160 (valores -> ENTERO .)
    IGUAQ           reduce using rule 160 (valores -> ENTERO .)
    DIFEQ           reduce using rule 160 (valores -> ENTERO .)
    POTEN           reduce using rule 160 (valores -> ENTERO .)
    MULTI           reduce using rule 160 (valores -> ENTERO .)
    DIVIS           reduce using rule 160 (valores -> ENTERO .)
    SUMAS           reduce using rule 160 (valores -> ENTERO .)
    MENOS           reduce using rule 160 (valores -> ENTERO .)
    PARDER          reduce using rule 160 (valores -> ENTERO .)


state 206

    (161) valores -> DECIMA .

    PTCOMA          reduce using rule 161 (valores -> DECIMA .)
    WHERE           reduce using rule 161 (valores -> DECIMA .)
    COMA            reduce using rule 161 (valores -> DECIMA .)
    OR              reduce using rule 161 (valores -> DECIMA .)
    AND             reduce using rule 161 (valores -> DECIMA .)
    MAYOR           reduce using rule 161 (valores -> DECIMA .)
    MENOR           reduce using rule 161 (valores -> DECIMA .)
    MAYIG           reduce using rule 161 (valores -> DECIMA .)
    MENIG           reduce using rule 161 (valores -> DECIMA .)
    IGUAQ           reduce using rule 161 (valores -> DECIMA .)
    DIFEQ           reduce using rule 161 (valores -> DECIMA .)
    POTEN           reduce using rule 161 (valores -> DECIMA .)
    MULTI           reduce using rule 161 (valores -> DECIMA .)
    DIVIS           reduce using rule 161 (valores -> DECIMA .)
    SUMAS           reduce using rule 161 (valores -> DECIMA .)
    MENOS           reduce using rule 161 (valores -> DECIMA .)
    PARDER          reduce using rule 161 (valores -> DECIMA .)


state 207

    (163) s_update -> UPDATE ID SET lista_asig WHERE ID . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 265


state 208

    (164) lista_asig -> lista_asig COMA ID . IGUAL valores

    IGUAL           shift and go to state 266


state 209

    (25) s_select -> SELECT list_cols FROM list_from list_joins list_conditions . list_order PTCOMA
    (48) list_order -> . ORDER BY ID ASC
    (49) list_order -> . ORDER BY ID DESC
    (50) list_order -> . empty
    (57) empty -> .

    ORDER           shift and go to state 268
    PTCOMA          reduce using rule 57 (empty -> .)

    list_order                     shift and go to state 267
    empty                          shift and go to state 269

state 210

    (31) list_joins -> list_joins join_type . JOIN ID join_conditions

    JOIN            shift and go to state 270


state 211

    (43) list_conditions -> WHERE . sel_cond
    (45) sel_cond -> . sel_cond AND
    (46) sel_cond -> . ID sel_comp ID
    (47) sel_cond -> . ID sel_comp data_type

    ID              shift and go to state 272

    sel_cond                       shift and go to state 271

state 212

    (44) list_conditions -> empty .
    (39) join_type -> empty .

    ORDER           reduce using rule 44 (list_conditions -> empty .)
    PTCOMA          reduce using rule 44 (list_conditions -> empty .)
    JOIN            reduce using rule 39 (join_type -> empty .)


state 213

    (29) list_from -> list_from COMA ID .

    COMA            reduce using rule 29 (list_from -> list_from COMA ID .)
    INNER           reduce using rule 29 (list_from -> list_from COMA ID .)
    LEFT            reduce using rule 29 (list_from -> list_from COMA ID .)
    RIGHT           reduce using rule 29 (list_from -> list_from COMA ID .)
    FULL            reduce using rule 29 (list_from -> list_from COMA ID .)
    OUTER           reduce using rule 29 (list_from -> list_from COMA ID .)
    WHERE           reduce using rule 29 (list_from -> list_from COMA ID .)
    ORDER           reduce using rule 29 (list_from -> list_from COMA ID .)
    PTCOMA          reduce using rule 29 (list_from -> list_from COMA ID .)
    JOIN            reduce using rule 29 (list_from -> list_from COMA ID .)


state 214

    (32) list_joins -> join_type JOIN . ID join_conditions

    ID              shift and go to state 273


state 215

    (59) c_type -> ENUM PARIZQ lista .

    PTCOMA          reduce using rule 59 (c_type -> ENUM PARIZQ lista .)


state 216

    (61) lista -> id_cadena lista1 .
    (62) lista1 -> lista1 . COMA id_cadena
    (63) lista1 -> lista1 . PARDER

    PTCOMA          reduce using rule 61 (lista -> id_cadena lista1 .)
    COMA            shift and go to state 274
    PARDER          shift and go to state 275


state 217

    (64) lista1 -> COMA . id_cadena
    (66) id_cadena -> . ID data_type
    (67) id_cadena -> . CADENA

    ID              shift and go to state 151
    CADENA          shift and go to state 152

    id_cadena                      shift and go to state 276

state 218

    (65) lista1 -> PARDER .

    COMA            reduce using rule 65 (lista1 -> PARDER .)
    PARDER          reduce using rule 65 (lista1 -> PARDER .)
    PTCOMA          reduce using rule 65 (lista1 -> PARDER .)


state 219

    (66) id_cadena -> ID data_type .

    COMA            reduce using rule 66 (id_cadena -> ID data_type .)
    PARDER          reduce using rule 66 (id_cadena -> ID data_type .)
    PTCOMA          reduce using rule 66 (id_cadena -> ID data_type .)


state 220

    (118) colum_list -> ID data_type const .
    (123) const -> const . DEFAULT val
    (124) const -> const . NOT NULL
    (125) const -> const . NULL
    (126) const -> const . CONSTRAINT ID UNIQUE
    (127) const -> const . UNIQUE
    (128) const -> const . CONSTRAINT ID CHECK PARIZQ PARDER
    (129) const -> const . CHECK PARIZQ PARDER
    (130) const -> const . PRIMARY KEY
    (131) const -> const . REFERENCES ID

    COMA            reduce using rule 118 (colum_list -> ID data_type const .)
    PARDER          reduce using rule 118 (colum_list -> ID data_type const .)
    DEFAULT         shift and go to state 181
    NOT             shift and go to state 182
    NULL            shift and go to state 183
    CONSTRAINT      shift and go to state 184
    UNIQUE          shift and go to state 185
    CHECK           shift and go to state 186
    PRIMARY         shift and go to state 187
    REFERENCES      shift and go to state 188


state 221

    (139) const -> PRIMARY . KEY

    KEY             shift and go to state 277


state 222

    (74) data_type -> DOUBLE PRECISION .

    DEFAULT         reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    NOT             reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    NULL            reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    CONSTRAINT      reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    UNIQUE          reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    CHECK           reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    PRIMARY         reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    REFERENCES      reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    COMA            reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    PARDER          reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    PTCOMA          reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    CREATE          reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    SHOW            reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    ALTER           reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    DROP            reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    DELETE          reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    INSERT          reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    UPDATE          reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    SELECT          reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    $end            reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    AND             reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    ORDER           reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    WHERE           reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    INNER           reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    LEFT            reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    RIGHT           reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    FULL            reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    OUTER           reduce using rule 74 (data_type -> DOUBLE PRECISION .)
    JOIN            reduce using rule 74 (data_type -> DOUBLE PRECISION .)


state 223

    (76) data_type -> CHARACTER VARYING . PARIZQ ENTERO PARDER

    PARIZQ          shift and go to state 278


state 224

    (78) data_type -> CHARACTER PARIZQ . ENTERO PARDER

    ENTERO          shift and go to state 279


state 225

    (77) data_type -> VARCHAR PARIZQ . ENTERO PARDER

    ENTERO          shift and go to state 280


state 226

    (79) data_type -> CHAR PARIZQ . ENTERO PARDER

    ENTERO          shift and go to state 281


state 227

    (81) data_type -> TIMESTAMP time_zone .

    DEFAULT         reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    NOT             reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    NULL            reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    CONSTRAINT      reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    UNIQUE          reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    CHECK           reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    PRIMARY         reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    REFERENCES      reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    COMA            reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    PARDER          reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    PTCOMA          reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    CREATE          reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    SHOW            reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    ALTER           reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    DROP            reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    DELETE          reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    INSERT          reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    UPDATE          reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    SELECT          reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    $end            reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    AND             reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    ORDER           reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    WHERE           reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    INNER           reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    LEFT            reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    RIGHT           reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    FULL            reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    OUTER           reduce using rule 81 (data_type -> TIMESTAMP time_zone .)
    JOIN            reduce using rule 81 (data_type -> TIMESTAMP time_zone .)


state 228

    (86) time_zone -> WITH . TIME ZONE

    TIME            shift and go to state 282


state 229

    (87) time_zone -> WITHOUT . TIME ZONE

    TIME            shift and go to state 283


state 230

    (84) data_type -> TIME time_zone .

    DEFAULT         reduce using rule 84 (data_type -> TIME time_zone .)
    NOT             reduce using rule 84 (data_type -> TIME time_zone .)
    NULL            reduce using rule 84 (data_type -> TIME time_zone .)
    CONSTRAINT      reduce using rule 84 (data_type -> TIME time_zone .)
    UNIQUE          reduce using rule 84 (data_type -> TIME time_zone .)
    CHECK           reduce using rule 84 (data_type -> TIME time_zone .)
    PRIMARY         reduce using rule 84 (data_type -> TIME time_zone .)
    REFERENCES      reduce using rule 84 (data_type -> TIME time_zone .)
    COMA            reduce using rule 84 (data_type -> TIME time_zone .)
    PARDER          reduce using rule 84 (data_type -> TIME time_zone .)
    PTCOMA          reduce using rule 84 (data_type -> TIME time_zone .)
    CREATE          reduce using rule 84 (data_type -> TIME time_zone .)
    SHOW            reduce using rule 84 (data_type -> TIME time_zone .)
    ALTER           reduce using rule 84 (data_type -> TIME time_zone .)
    DROP            reduce using rule 84 (data_type -> TIME time_zone .)
    DELETE          reduce using rule 84 (data_type -> TIME time_zone .)
    INSERT          reduce using rule 84 (data_type -> TIME time_zone .)
    UPDATE          reduce using rule 84 (data_type -> TIME time_zone .)
    SELECT          reduce using rule 84 (data_type -> TIME time_zone .)
    $end            reduce using rule 84 (data_type -> TIME time_zone .)
    AND             reduce using rule 84 (data_type -> TIME time_zone .)
    ORDER           reduce using rule 84 (data_type -> TIME time_zone .)
    WHERE           reduce using rule 84 (data_type -> TIME time_zone .)
    INNER           reduce using rule 84 (data_type -> TIME time_zone .)
    LEFT            reduce using rule 84 (data_type -> TIME time_zone .)
    RIGHT           reduce using rule 84 (data_type -> TIME time_zone .)
    FULL            reduce using rule 84 (data_type -> TIME time_zone .)
    OUTER           reduce using rule 84 (data_type -> TIME time_zone .)
    JOIN            reduce using rule 84 (data_type -> TIME time_zone .)


state 231

    (112) create_table -> CREATE TABLE ID PARIZQ values PARDER PTCOMA .

    CREATE          reduce using rule 112 (create_table -> CREATE TABLE ID PARIZQ values PARDER PTCOMA .)
    SHOW            reduce using rule 112 (create_table -> CREATE TABLE ID PARIZQ values PARDER PTCOMA .)
    ALTER           reduce using rule 112 (create_table -> CREATE TABLE ID PARIZQ values PARDER PTCOMA .)
    DROP            reduce using rule 112 (create_table -> CREATE TABLE ID PARIZQ values PARDER PTCOMA .)
    DELETE          reduce using rule 112 (create_table -> CREATE TABLE ID PARIZQ values PARDER PTCOMA .)
    INSERT          reduce using rule 112 (create_table -> CREATE TABLE ID PARIZQ values PARDER PTCOMA .)
    UPDATE          reduce using rule 112 (create_table -> CREATE TABLE ID PARIZQ values PARDER PTCOMA .)
    SELECT          reduce using rule 112 (create_table -> CREATE TABLE ID PARIZQ values PARDER PTCOMA .)
    $end            reduce using rule 112 (create_table -> CREATE TABLE ID PARIZQ values PARDER PTCOMA .)


state 232

    (114) values -> colum_list COMA const_keys .
    (119) const_keys -> const_keys . COMA PRIMARY KEY PARIZQ lista_id PARDER
    (120) const_keys -> const_keys . COMA FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER

    PARDER          reduce using rule 114 (values -> colum_list COMA const_keys .)
    COMA            shift and go to state 189


state 233

    (115) colum_list -> colum_list COMA ID . data_type
    (116) colum_list -> colum_list COMA ID . data_type const
    (68) data_type -> . ENTERO
    (69) data_type -> . TEXT
    (70) data_type -> . SMALLINT
    (71) data_type -> . BEGINT
    (72) data_type -> . DECIMAL
    (73) data_type -> . REAL
    (74) data_type -> . DOUBLE PRECISION
    (75) data_type -> . MONEY
    (76) data_type -> . CHARACTER VARYING PARIZQ ENTERO PARDER
    (77) data_type -> . VARCHAR PARIZQ ENTERO PARDER
    (78) data_type -> . CHARACTER PARIZQ ENTERO PARDER
    (79) data_type -> . CHAR PARIZQ ENTERO PARDER
    (80) data_type -> . TIMESTAMP
    (81) data_type -> . TIMESTAMP time_zone
    (82) data_type -> . DATA
    (83) data_type -> . TIME
    (84) data_type -> . TIME time_zone
    (85) data_type -> . INTERVAL

    ENTERO          shift and go to state 154
    TEXT            shift and go to state 155
    SMALLINT        shift and go to state 156
    BEGINT          shift and go to state 157
    DECIMAL         shift and go to state 158
    REAL            shift and go to state 159
    DOUBLE          shift and go to state 160
    MONEY           shift and go to state 161
    CHARACTER       shift and go to state 162
    VARCHAR         shift and go to state 163
    CHAR            shift and go to state 164
    TIMESTAMP       shift and go to state 165
    DATA            shift and go to state 166
    TIME            shift and go to state 167
    INTERVAL        shift and go to state 168

    data_type                      shift and go to state 284

state 234

    (121) const_keys -> PRIMARY . KEY PARIZQ lista_id PARDER

    KEY             shift and go to state 285


state 235

    (91) c_db1 -> IF NOT EXISTS ID owner_mode .
    (93) owner_mode -> owner_mode . OWNER igual_id
    (94) owner_mode -> owner_mode . MODE igual_id
    (95) owner_mode -> owner_mode . PTCOMA

    CREATE          reduce using rule 91 (c_db1 -> IF NOT EXISTS ID owner_mode .)
    SHOW            reduce using rule 91 (c_db1 -> IF NOT EXISTS ID owner_mode .)
    ALTER           reduce using rule 91 (c_db1 -> IF NOT EXISTS ID owner_mode .)
    DROP            reduce using rule 91 (c_db1 -> IF NOT EXISTS ID owner_mode .)
    DELETE          reduce using rule 91 (c_db1 -> IF NOT EXISTS ID owner_mode .)
    INSERT          reduce using rule 91 (c_db1 -> IF NOT EXISTS ID owner_mode .)
    UPDATE          reduce using rule 91 (c_db1 -> IF NOT EXISTS ID owner_mode .)
    SELECT          reduce using rule 91 (c_db1 -> IF NOT EXISTS ID owner_mode .)
    $end            reduce using rule 91 (c_db1 -> IF NOT EXISTS ID owner_mode .)
    OWNER           shift and go to state 104
    MODE            shift and go to state 105
    PTCOMA          shift and go to state 106


state 236

    (147) acciones -> ALTER COLUMN ID TYPE . data_type
    (68) data_type -> . ENTERO
    (69) data_type -> . TEXT
    (70) data_type -> . SMALLINT
    (71) data_type -> . BEGINT
    (72) data_type -> . DECIMAL
    (73) data_type -> . REAL
    (74) data_type -> . DOUBLE PRECISION
    (75) data_type -> . MONEY
    (76) data_type -> . CHARACTER VARYING PARIZQ ENTERO PARDER
    (77) data_type -> . VARCHAR PARIZQ ENTERO PARDER
    (78) data_type -> . CHARACTER PARIZQ ENTERO PARDER
    (79) data_type -> . CHAR PARIZQ ENTERO PARDER
    (80) data_type -> . TIMESTAMP
    (81) data_type -> . TIMESTAMP time_zone
    (82) data_type -> . DATA
    (83) data_type -> . TIME
    (84) data_type -> . TIME time_zone
    (85) data_type -> . INTERVAL

    ENTERO          shift and go to state 154
    TEXT            shift and go to state 155
    SMALLINT        shift and go to state 156
    BEGINT          shift and go to state 157
    DECIMAL         shift and go to state 158
    REAL            shift and go to state 159
    DOUBLE          shift and go to state 160
    MONEY           shift and go to state 161
    CHARACTER       shift and go to state 162
    VARCHAR         shift and go to state 163
    CHAR            shift and go to state 164
    TIMESTAMP       shift and go to state 165
    DATA            shift and go to state 166
    TIME            shift and go to state 167
    INTERVAL        shift and go to state 168

    data_type                      shift and go to state 286

state 237

    (123) const -> const DEFAULT val .

    DEFAULT         reduce using rule 123 (const -> const DEFAULT val .)
    NOT             reduce using rule 123 (const -> const DEFAULT val .)
    NULL            reduce using rule 123 (const -> const DEFAULT val .)
    CONSTRAINT      reduce using rule 123 (const -> const DEFAULT val .)
    UNIQUE          reduce using rule 123 (const -> const DEFAULT val .)
    CHECK           reduce using rule 123 (const -> const DEFAULT val .)
    PRIMARY         reduce using rule 123 (const -> const DEFAULT val .)
    REFERENCES      reduce using rule 123 (const -> const DEFAULT val .)
    CREATE          reduce using rule 123 (const -> const DEFAULT val .)
    SHOW            reduce using rule 123 (const -> const DEFAULT val .)
    ALTER           reduce using rule 123 (const -> const DEFAULT val .)
    DROP            reduce using rule 123 (const -> const DEFAULT val .)
    DELETE          reduce using rule 123 (const -> const DEFAULT val .)
    INSERT          reduce using rule 123 (const -> const DEFAULT val .)
    UPDATE          reduce using rule 123 (const -> const DEFAULT val .)
    SELECT          reduce using rule 123 (const -> const DEFAULT val .)
    $end            reduce using rule 123 (const -> const DEFAULT val .)
    COMA            reduce using rule 123 (const -> const DEFAULT val .)
    PARDER          reduce using rule 123 (const -> const DEFAULT val .)


state 238

    (124) const -> const NOT NULL .

    DEFAULT         reduce using rule 124 (const -> const NOT NULL .)
    NOT             reduce using rule 124 (const -> const NOT NULL .)
    NULL            reduce using rule 124 (const -> const NOT NULL .)
    CONSTRAINT      reduce using rule 124 (const -> const NOT NULL .)
    UNIQUE          reduce using rule 124 (const -> const NOT NULL .)
    CHECK           reduce using rule 124 (const -> const NOT NULL .)
    PRIMARY         reduce using rule 124 (const -> const NOT NULL .)
    REFERENCES      reduce using rule 124 (const -> const NOT NULL .)
    CREATE          reduce using rule 124 (const -> const NOT NULL .)
    SHOW            reduce using rule 124 (const -> const NOT NULL .)
    ALTER           reduce using rule 124 (const -> const NOT NULL .)
    DROP            reduce using rule 124 (const -> const NOT NULL .)
    DELETE          reduce using rule 124 (const -> const NOT NULL .)
    INSERT          reduce using rule 124 (const -> const NOT NULL .)
    UPDATE          reduce using rule 124 (const -> const NOT NULL .)
    SELECT          reduce using rule 124 (const -> const NOT NULL .)
    $end            reduce using rule 124 (const -> const NOT NULL .)
    COMA            reduce using rule 124 (const -> const NOT NULL .)
    PARDER          reduce using rule 124 (const -> const NOT NULL .)


state 239

    (126) const -> const CONSTRAINT ID . UNIQUE
    (128) const -> const CONSTRAINT ID . CHECK PARIZQ PARDER

    UNIQUE          shift and go to state 287
    CHECK           shift and go to state 288


state 240

    (129) const -> const CHECK PARIZQ . PARDER

    PARDER          shift and go to state 289


state 241

    (130) const -> const PRIMARY KEY .

    DEFAULT         reduce using rule 130 (const -> const PRIMARY KEY .)
    NOT             reduce using rule 130 (const -> const PRIMARY KEY .)
    NULL            reduce using rule 130 (const -> const PRIMARY KEY .)
    CONSTRAINT      reduce using rule 130 (const -> const PRIMARY KEY .)
    UNIQUE          reduce using rule 130 (const -> const PRIMARY KEY .)
    CHECK           reduce using rule 130 (const -> const PRIMARY KEY .)
    PRIMARY         reduce using rule 130 (const -> const PRIMARY KEY .)
    REFERENCES      reduce using rule 130 (const -> const PRIMARY KEY .)
    CREATE          reduce using rule 130 (const -> const PRIMARY KEY .)
    SHOW            reduce using rule 130 (const -> const PRIMARY KEY .)
    ALTER           reduce using rule 130 (const -> const PRIMARY KEY .)
    DROP            reduce using rule 130 (const -> const PRIMARY KEY .)
    DELETE          reduce using rule 130 (const -> const PRIMARY KEY .)
    INSERT          reduce using rule 130 (const -> const PRIMARY KEY .)
    UPDATE          reduce using rule 130 (const -> const PRIMARY KEY .)
    SELECT          reduce using rule 130 (const -> const PRIMARY KEY .)
    $end            reduce using rule 130 (const -> const PRIMARY KEY .)
    COMA            reduce using rule 130 (const -> const PRIMARY KEY .)
    PARDER          reduce using rule 130 (const -> const PRIMARY KEY .)


state 242

    (131) const -> const REFERENCES ID .

    DEFAULT         reduce using rule 131 (const -> const REFERENCES ID .)
    NOT             reduce using rule 131 (const -> const REFERENCES ID .)
    NULL            reduce using rule 131 (const -> const REFERENCES ID .)
    CONSTRAINT      reduce using rule 131 (const -> const REFERENCES ID .)
    UNIQUE          reduce using rule 131 (const -> const REFERENCES ID .)
    CHECK           reduce using rule 131 (const -> const REFERENCES ID .)
    PRIMARY         reduce using rule 131 (const -> const REFERENCES ID .)
    REFERENCES      reduce using rule 131 (const -> const REFERENCES ID .)
    CREATE          reduce using rule 131 (const -> const REFERENCES ID .)
    SHOW            reduce using rule 131 (const -> const REFERENCES ID .)
    ALTER           reduce using rule 131 (const -> const REFERENCES ID .)
    DROP            reduce using rule 131 (const -> const REFERENCES ID .)
    DELETE          reduce using rule 131 (const -> const REFERENCES ID .)
    INSERT          reduce using rule 131 (const -> const REFERENCES ID .)
    UPDATE          reduce using rule 131 (const -> const REFERENCES ID .)
    SELECT          reduce using rule 131 (const -> const REFERENCES ID .)
    $end            reduce using rule 131 (const -> const REFERENCES ID .)
    COMA            reduce using rule 131 (const -> const REFERENCES ID .)
    PARDER          reduce using rule 131 (const -> const REFERENCES ID .)


state 243

    (119) const_keys -> const_keys COMA PRIMARY . KEY PARIZQ lista_id PARDER

    KEY             shift and go to state 290


state 244

    (120) const_keys -> const_keys COMA FOREIGN . KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER

    KEY             shift and go to state 291


state 245

    (135) const -> CONSTRAINT ID UNIQUE .

    DEFAULT         reduce using rule 135 (const -> CONSTRAINT ID UNIQUE .)
    NOT             reduce using rule 135 (const -> CONSTRAINT ID UNIQUE .)
    NULL            reduce using rule 135 (const -> CONSTRAINT ID UNIQUE .)
    CONSTRAINT      reduce using rule 135 (const -> CONSTRAINT ID UNIQUE .)
    UNIQUE          reduce using rule 135 (const -> CONSTRAINT ID UNIQUE .)
    CHECK           reduce using rule 135 (const -> CONSTRAINT ID UNIQUE .)
    PRIMARY         reduce using rule 135 (const -> CONSTRAINT ID UNIQUE .)
    REFERENCES      reduce using rule 135 (const -> CONSTRAINT ID UNIQUE .)
    CREATE          reduce using rule 135 (const -> CONSTRAINT ID UNIQUE .)
    SHOW            reduce using rule 135 (const -> CONSTRAINT ID UNIQUE .)
    ALTER           reduce using rule 135 (const -> CONSTRAINT ID UNIQUE .)
    DROP            reduce using rule 135 (const -> CONSTRAINT ID UNIQUE .)
    DELETE          reduce using rule 135 (const -> CONSTRAINT ID UNIQUE .)
    INSERT          reduce using rule 135 (const -> CONSTRAINT ID UNIQUE .)
    UPDATE          reduce using rule 135 (const -> CONSTRAINT ID UNIQUE .)
    SELECT          reduce using rule 135 (const -> CONSTRAINT ID UNIQUE .)
    $end            reduce using rule 135 (const -> CONSTRAINT ID UNIQUE .)
    COMA            reduce using rule 135 (const -> CONSTRAINT ID UNIQUE .)
    PARDER          reduce using rule 135 (const -> CONSTRAINT ID UNIQUE .)


state 246

    (137) const -> CONSTRAINT ID CHECK . PARIZQ PARDER

    PARIZQ          shift and go to state 292


state 247

    (138) const -> CHECK PARIZQ PARDER .

    DEFAULT         reduce using rule 138 (const -> CHECK PARIZQ PARDER .)
    NOT             reduce using rule 138 (const -> CHECK PARIZQ PARDER .)
    NULL            reduce using rule 138 (const -> CHECK PARIZQ PARDER .)
    CONSTRAINT      reduce using rule 138 (const -> CHECK PARIZQ PARDER .)
    UNIQUE          reduce using rule 138 (const -> CHECK PARIZQ PARDER .)
    CHECK           reduce using rule 138 (const -> CHECK PARIZQ PARDER .)
    PRIMARY         reduce using rule 138 (const -> CHECK PARIZQ PARDER .)
    REFERENCES      reduce using rule 138 (const -> CHECK PARIZQ PARDER .)
    CREATE          reduce using rule 138 (const -> CHECK PARIZQ PARDER .)
    SHOW            reduce using rule 138 (const -> CHECK PARIZQ PARDER .)
    ALTER           reduce using rule 138 (const -> CHECK PARIZQ PARDER .)
    DROP            reduce using rule 138 (const -> CHECK PARIZQ PARDER .)
    DELETE          reduce using rule 138 (const -> CHECK PARIZQ PARDER .)
    INSERT          reduce using rule 138 (const -> CHECK PARIZQ PARDER .)
    UPDATE          reduce using rule 138 (const -> CHECK PARIZQ PARDER .)
    SELECT          reduce using rule 138 (const -> CHECK PARIZQ PARDER .)
    $end            reduce using rule 138 (const -> CHECK PARIZQ PARDER .)
    COMA            reduce using rule 138 (const -> CHECK PARIZQ PARDER .)
    PARDER          reduce using rule 138 (const -> CHECK PARIZQ PARDER .)


state 248

    (121) const_keys -> PRIMARY KEY PARIZQ . lista_id PARDER
    (141) lista_id -> . lista_id COMA ID
    (142) lista_id -> . ID

    ID              shift and go to state 132

    lista_id                       shift and go to state 293

state 249

    (122) const_keys -> FOREIGN KEY PARIZQ . PARDER REFERENCES PARIZQ lista_id PARDER

    PARDER          shift and go to state 294


state 250

    (149) acciones -> RENAME COLUMN ID TO . ID

    ID              shift and go to state 295


state 251

    (153) s_delete -> DELETE FROM ID WHERE ID IGUAL expresion . PTCOMA
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PTCOMA          shift and go to state 296
    OR              shift and go to state 297
    AND             shift and go to state 298
    MAYOR           shift and go to state 299
    MENOR           shift and go to state 300
    MAYIG           shift and go to state 301
    MENIG           shift and go to state 302
    IGUAQ           shift and go to state 303
    DIFEQ           shift and go to state 304
    POTEN           shift and go to state 305
    MULTI           shift and go to state 306
    DIVIS           shift and go to state 307
    SUMAS           shift and go to state 308
    MENOS           shift and go to state 309


state 252

    (166) expresion -> NOT . expresion
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 310
    valores                        shift and go to state 262

state 253

    (175) expresion -> MENOS . expresion
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 311
    valores                        shift and go to state 262

state 254

    (176) expresion -> SUMAS . expresion
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 312
    valores                        shift and go to state 262

state 255

    (182) expresion -> PARIZQ . expresion PARDER
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 313
    valores                        shift and go to state 262

state 256

    (183) expresion -> SUM . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 314


state 257

    (184) expresion -> AVG . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 315


state 258

    (185) expresion -> MAX . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 316


state 259

    (186) expresion -> PI .

    PTCOMA          reduce using rule 186 (expresion -> PI .)
    OR              reduce using rule 186 (expresion -> PI .)
    AND             reduce using rule 186 (expresion -> PI .)
    MAYOR           reduce using rule 186 (expresion -> PI .)
    MENOR           reduce using rule 186 (expresion -> PI .)
    MAYIG           reduce using rule 186 (expresion -> PI .)
    MENIG           reduce using rule 186 (expresion -> PI .)
    IGUAQ           reduce using rule 186 (expresion -> PI .)
    DIFEQ           reduce using rule 186 (expresion -> PI .)
    POTEN           reduce using rule 186 (expresion -> PI .)
    MULTI           reduce using rule 186 (expresion -> PI .)
    DIVIS           reduce using rule 186 (expresion -> PI .)
    SUMAS           reduce using rule 186 (expresion -> PI .)
    MENOS           reduce using rule 186 (expresion -> PI .)
    PARDER          reduce using rule 186 (expresion -> PI .)


state 260

    (187) expresion -> POWER . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 317


state 261

    (188) expresion -> SQRT . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 318


state 262

    (189) expresion -> valores .

    PTCOMA          reduce using rule 189 (expresion -> valores .)
    OR              reduce using rule 189 (expresion -> valores .)
    AND             reduce using rule 189 (expresion -> valores .)
    MAYOR           reduce using rule 189 (expresion -> valores .)
    MENOR           reduce using rule 189 (expresion -> valores .)
    MAYIG           reduce using rule 189 (expresion -> valores .)
    MENIG           reduce using rule 189 (expresion -> valores .)
    IGUAQ           reduce using rule 189 (expresion -> valores .)
    DIFEQ           reduce using rule 189 (expresion -> valores .)
    POTEN           reduce using rule 189 (expresion -> valores .)
    MULTI           reduce using rule 189 (expresion -> valores .)
    DIVIS           reduce using rule 189 (expresion -> valores .)
    SUMAS           reduce using rule 189 (expresion -> valores .)
    MENOS           reduce using rule 189 (expresion -> valores .)
    PARDER          reduce using rule 189 (expresion -> valores .)


state 263

    (154) s_insert -> INSERT INTO ID PARIZQ lista_id PARDER VALUES . lista_values PTCOMA
    (155) lista_values -> . lista_values COMA PARIZQ lista_valores PARDER
    (156) lista_values -> . PARIZQ lista_valores PARDER

    PARIZQ          shift and go to state 319

    lista_values                   shift and go to state 320

state 264

    (141) lista_id -> lista_id COMA ID .

    PARDER          reduce using rule 141 (lista_id -> lista_id COMA ID .)
    COMA            reduce using rule 141 (lista_id -> lista_id COMA ID .)


state 265

    (163) s_update -> UPDATE ID SET lista_asig WHERE ID IGUAL . expresion PTCOMA
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 321
    valores                        shift and go to state 262

state 266

    (164) lista_asig -> lista_asig COMA ID IGUAL . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    valores                        shift and go to state 322

state 267

    (25) s_select -> SELECT list_cols FROM list_from list_joins list_conditions list_order . PTCOMA

    PTCOMA          shift and go to state 323


state 268

    (48) list_order -> ORDER . BY ID ASC
    (49) list_order -> ORDER . BY ID DESC

    BY              shift and go to state 324


state 269

    (50) list_order -> empty .

    PTCOMA          reduce using rule 50 (list_order -> empty .)


state 270

    (31) list_joins -> list_joins join_type JOIN . ID join_conditions

    ID              shift and go to state 325


state 271

    (43) list_conditions -> WHERE sel_cond .
    (45) sel_cond -> sel_cond . AND

    ORDER           reduce using rule 43 (list_conditions -> WHERE sel_cond .)
    PTCOMA          reduce using rule 43 (list_conditions -> WHERE sel_cond .)
    AND             shift and go to state 326


state 272

    (46) sel_cond -> ID . sel_comp ID
    (47) sel_cond -> ID . sel_comp data_type
    (51) sel_comp -> . IGUAL
    (52) sel_comp -> . MAYIG
    (53) sel_comp -> . MENIG
    (54) sel_comp -> . DIFEQ
    (55) sel_comp -> . MAYOR
    (56) sel_comp -> . MENOR

    IGUAL           shift and go to state 328
    MAYIG           shift and go to state 329
    MENIG           shift and go to state 330
    DIFEQ           shift and go to state 331
    MAYOR           shift and go to state 332
    MENOR           shift and go to state 333

    sel_comp                       shift and go to state 327

state 273

    (32) list_joins -> join_type JOIN ID . join_conditions
    (40) join_conditions -> . ON ID sel_comp ID
    (41) join_conditions -> . ON ID sel_comp data_type
    (42) join_conditions -> . empty
    (57) empty -> .

    ON              shift and go to state 335
    WHERE           reduce using rule 57 (empty -> .)
    INNER           reduce using rule 57 (empty -> .)
    LEFT            reduce using rule 57 (empty -> .)
    RIGHT           reduce using rule 57 (empty -> .)
    FULL            reduce using rule 57 (empty -> .)
    OUTER           reduce using rule 57 (empty -> .)
    ORDER           reduce using rule 57 (empty -> .)
    PTCOMA          reduce using rule 57 (empty -> .)
    JOIN            reduce using rule 57 (empty -> .)

    join_conditions                shift and go to state 334
    empty                          shift and go to state 336

state 274

    (62) lista1 -> lista1 COMA . id_cadena
    (66) id_cadena -> . ID data_type
    (67) id_cadena -> . CADENA

    ID              shift and go to state 151
    CADENA          shift and go to state 152

    id_cadena                      shift and go to state 337

state 275

    (63) lista1 -> lista1 PARDER .

    COMA            reduce using rule 63 (lista1 -> lista1 PARDER .)
    PARDER          reduce using rule 63 (lista1 -> lista1 PARDER .)
    PTCOMA          reduce using rule 63 (lista1 -> lista1 PARDER .)


state 276

    (64) lista1 -> COMA id_cadena .

    COMA            reduce using rule 64 (lista1 -> COMA id_cadena .)
    PARDER          reduce using rule 64 (lista1 -> COMA id_cadena .)
    PTCOMA          reduce using rule 64 (lista1 -> COMA id_cadena .)


state 277

    (139) const -> PRIMARY KEY .

    DEFAULT         reduce using rule 139 (const -> PRIMARY KEY .)
    NOT             reduce using rule 139 (const -> PRIMARY KEY .)
    NULL            reduce using rule 139 (const -> PRIMARY KEY .)
    CONSTRAINT      reduce using rule 139 (const -> PRIMARY KEY .)
    UNIQUE          reduce using rule 139 (const -> PRIMARY KEY .)
    CHECK           reduce using rule 139 (const -> PRIMARY KEY .)
    PRIMARY         reduce using rule 139 (const -> PRIMARY KEY .)
    REFERENCES      reduce using rule 139 (const -> PRIMARY KEY .)
    COMA            reduce using rule 139 (const -> PRIMARY KEY .)
    PARDER          reduce using rule 139 (const -> PRIMARY KEY .)


state 278

    (76) data_type -> CHARACTER VARYING PARIZQ . ENTERO PARDER

    ENTERO          shift and go to state 338


state 279

    (78) data_type -> CHARACTER PARIZQ ENTERO . PARDER

    PARDER          shift and go to state 339


state 280

    (77) data_type -> VARCHAR PARIZQ ENTERO . PARDER

    PARDER          shift and go to state 340


state 281

    (79) data_type -> CHAR PARIZQ ENTERO . PARDER

    PARDER          shift and go to state 341


state 282

    (86) time_zone -> WITH TIME . ZONE

    ZONE            shift and go to state 342


state 283

    (87) time_zone -> WITHOUT TIME . ZONE

    ZONE            shift and go to state 343


state 284

    (115) colum_list -> colum_list COMA ID data_type .
    (116) colum_list -> colum_list COMA ID data_type . const
    (123) const -> . const DEFAULT val
    (124) const -> . const NOT NULL
    (125) const -> . const NULL
    (126) const -> . const CONSTRAINT ID UNIQUE
    (127) const -> . const UNIQUE
    (128) const -> . const CONSTRAINT ID CHECK PARIZQ PARDER
    (129) const -> . const CHECK PARIZQ PARDER
    (130) const -> . const PRIMARY KEY
    (131) const -> . const REFERENCES ID
    (132) const -> . DEFAULT val
    (133) const -> . NOT NULL
    (134) const -> . NULL
    (135) const -> . CONSTRAINT ID UNIQUE
    (136) const -> . UNIQUE
    (137) const -> . CONSTRAINT ID CHECK PARIZQ PARDER
    (138) const -> . CHECK PARIZQ PARDER
    (139) const -> . PRIMARY KEY
    (140) const -> . REFERENCES ID

    COMA            reduce using rule 115 (colum_list -> colum_list COMA ID data_type .)
    PARDER          reduce using rule 115 (colum_list -> colum_list COMA ID data_type .)
    DEFAULT         shift and go to state 119
    NOT             shift and go to state 120
    NULL            shift and go to state 121
    CONSTRAINT      shift and go to state 122
    UNIQUE          shift and go to state 123
    CHECK           shift and go to state 124
    PRIMARY         shift and go to state 221
    REFERENCES      shift and go to state 126

    const                          shift and go to state 344

state 285

    (121) const_keys -> PRIMARY KEY . PARIZQ lista_id PARDER

    PARIZQ          shift and go to state 248


state 286

    (147) acciones -> ALTER COLUMN ID TYPE data_type .

    CREATE          reduce using rule 147 (acciones -> ALTER COLUMN ID TYPE data_type .)
    SHOW            reduce using rule 147 (acciones -> ALTER COLUMN ID TYPE data_type .)
    ALTER           reduce using rule 147 (acciones -> ALTER COLUMN ID TYPE data_type .)
    DROP            reduce using rule 147 (acciones -> ALTER COLUMN ID TYPE data_type .)
    DELETE          reduce using rule 147 (acciones -> ALTER COLUMN ID TYPE data_type .)
    INSERT          reduce using rule 147 (acciones -> ALTER COLUMN ID TYPE data_type .)
    UPDATE          reduce using rule 147 (acciones -> ALTER COLUMN ID TYPE data_type .)
    SELECT          reduce using rule 147 (acciones -> ALTER COLUMN ID TYPE data_type .)
    $end            reduce using rule 147 (acciones -> ALTER COLUMN ID TYPE data_type .)


state 287

    (126) const -> const CONSTRAINT ID UNIQUE .

    DEFAULT         reduce using rule 126 (const -> const CONSTRAINT ID UNIQUE .)
    NOT             reduce using rule 126 (const -> const CONSTRAINT ID UNIQUE .)
    NULL            reduce using rule 126 (const -> const CONSTRAINT ID UNIQUE .)
    CONSTRAINT      reduce using rule 126 (const -> const CONSTRAINT ID UNIQUE .)
    UNIQUE          reduce using rule 126 (const -> const CONSTRAINT ID UNIQUE .)
    CHECK           reduce using rule 126 (const -> const CONSTRAINT ID UNIQUE .)
    PRIMARY         reduce using rule 126 (const -> const CONSTRAINT ID UNIQUE .)
    REFERENCES      reduce using rule 126 (const -> const CONSTRAINT ID UNIQUE .)
    CREATE          reduce using rule 126 (const -> const CONSTRAINT ID UNIQUE .)
    SHOW            reduce using rule 126 (const -> const CONSTRAINT ID UNIQUE .)
    ALTER           reduce using rule 126 (const -> const CONSTRAINT ID UNIQUE .)
    DROP            reduce using rule 126 (const -> const CONSTRAINT ID UNIQUE .)
    DELETE          reduce using rule 126 (const -> const CONSTRAINT ID UNIQUE .)
    INSERT          reduce using rule 126 (const -> const CONSTRAINT ID UNIQUE .)
    UPDATE          reduce using rule 126 (const -> const CONSTRAINT ID UNIQUE .)
    SELECT          reduce using rule 126 (const -> const CONSTRAINT ID UNIQUE .)
    $end            reduce using rule 126 (const -> const CONSTRAINT ID UNIQUE .)
    COMA            reduce using rule 126 (const -> const CONSTRAINT ID UNIQUE .)
    PARDER          reduce using rule 126 (const -> const CONSTRAINT ID UNIQUE .)


state 288

    (128) const -> const CONSTRAINT ID CHECK . PARIZQ PARDER

    PARIZQ          shift and go to state 345


state 289

    (129) const -> const CHECK PARIZQ PARDER .

    DEFAULT         reduce using rule 129 (const -> const CHECK PARIZQ PARDER .)
    NOT             reduce using rule 129 (const -> const CHECK PARIZQ PARDER .)
    NULL            reduce using rule 129 (const -> const CHECK PARIZQ PARDER .)
    CONSTRAINT      reduce using rule 129 (const -> const CHECK PARIZQ PARDER .)
    UNIQUE          reduce using rule 129 (const -> const CHECK PARIZQ PARDER .)
    CHECK           reduce using rule 129 (const -> const CHECK PARIZQ PARDER .)
    PRIMARY         reduce using rule 129 (const -> const CHECK PARIZQ PARDER .)
    REFERENCES      reduce using rule 129 (const -> const CHECK PARIZQ PARDER .)
    CREATE          reduce using rule 129 (const -> const CHECK PARIZQ PARDER .)
    SHOW            reduce using rule 129 (const -> const CHECK PARIZQ PARDER .)
    ALTER           reduce using rule 129 (const -> const CHECK PARIZQ PARDER .)
    DROP            reduce using rule 129 (const -> const CHECK PARIZQ PARDER .)
    DELETE          reduce using rule 129 (const -> const CHECK PARIZQ PARDER .)
    INSERT          reduce using rule 129 (const -> const CHECK PARIZQ PARDER .)
    UPDATE          reduce using rule 129 (const -> const CHECK PARIZQ PARDER .)
    SELECT          reduce using rule 129 (const -> const CHECK PARIZQ PARDER .)
    $end            reduce using rule 129 (const -> const CHECK PARIZQ PARDER .)
    COMA            reduce using rule 129 (const -> const CHECK PARIZQ PARDER .)
    PARDER          reduce using rule 129 (const -> const CHECK PARIZQ PARDER .)


state 290

    (119) const_keys -> const_keys COMA PRIMARY KEY . PARIZQ lista_id PARDER

    PARIZQ          shift and go to state 346


state 291

    (120) const_keys -> const_keys COMA FOREIGN KEY . PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER

    PARIZQ          shift and go to state 347


state 292

    (137) const -> CONSTRAINT ID CHECK PARIZQ . PARDER

    PARDER          shift and go to state 348


state 293

    (121) const_keys -> PRIMARY KEY PARIZQ lista_id . PARDER
    (141) lista_id -> lista_id . COMA ID

    PARDER          shift and go to state 349
    COMA            shift and go to state 202


state 294

    (122) const_keys -> FOREIGN KEY PARIZQ PARDER . REFERENCES PARIZQ lista_id PARDER

    REFERENCES      shift and go to state 350


state 295

    (149) acciones -> RENAME COLUMN ID TO ID .

    CREATE          reduce using rule 149 (acciones -> RENAME COLUMN ID TO ID .)
    SHOW            reduce using rule 149 (acciones -> RENAME COLUMN ID TO ID .)
    ALTER           reduce using rule 149 (acciones -> RENAME COLUMN ID TO ID .)
    DROP            reduce using rule 149 (acciones -> RENAME COLUMN ID TO ID .)
    DELETE          reduce using rule 149 (acciones -> RENAME COLUMN ID TO ID .)
    INSERT          reduce using rule 149 (acciones -> RENAME COLUMN ID TO ID .)
    UPDATE          reduce using rule 149 (acciones -> RENAME COLUMN ID TO ID .)
    SELECT          reduce using rule 149 (acciones -> RENAME COLUMN ID TO ID .)
    $end            reduce using rule 149 (acciones -> RENAME COLUMN ID TO ID .)


state 296

    (153) s_delete -> DELETE FROM ID WHERE ID IGUAL expresion PTCOMA .

    CREATE          reduce using rule 153 (s_delete -> DELETE FROM ID WHERE ID IGUAL expresion PTCOMA .)
    SHOW            reduce using rule 153 (s_delete -> DELETE FROM ID WHERE ID IGUAL expresion PTCOMA .)
    ALTER           reduce using rule 153 (s_delete -> DELETE FROM ID WHERE ID IGUAL expresion PTCOMA .)
    DROP            reduce using rule 153 (s_delete -> DELETE FROM ID WHERE ID IGUAL expresion PTCOMA .)
    DELETE          reduce using rule 153 (s_delete -> DELETE FROM ID WHERE ID IGUAL expresion PTCOMA .)
    INSERT          reduce using rule 153 (s_delete -> DELETE FROM ID WHERE ID IGUAL expresion PTCOMA .)
    UPDATE          reduce using rule 153 (s_delete -> DELETE FROM ID WHERE ID IGUAL expresion PTCOMA .)
    SELECT          reduce using rule 153 (s_delete -> DELETE FROM ID WHERE ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 153 (s_delete -> DELETE FROM ID WHERE ID IGUAL expresion PTCOMA .)


state 297

    (167) expresion -> expresion OR . expresion
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 351
    valores                        shift and go to state 262

state 298

    (168) expresion -> expresion AND . expresion
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 352
    valores                        shift and go to state 262

state 299

    (169) expresion -> expresion MAYOR . expresion
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 353
    valores                        shift and go to state 262

state 300

    (170) expresion -> expresion MENOR . expresion
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 354
    valores                        shift and go to state 262

state 301

    (171) expresion -> expresion MAYIG . expresion
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 355
    valores                        shift and go to state 262

state 302

    (172) expresion -> expresion MENIG . expresion
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 356
    valores                        shift and go to state 262

state 303

    (173) expresion -> expresion IGUAQ . expresion
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 357
    valores                        shift and go to state 262

state 304

    (174) expresion -> expresion DIFEQ . expresion
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 358
    valores                        shift and go to state 262

state 305

    (177) expresion -> expresion POTEN . expresion
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 359
    valores                        shift and go to state 262

state 306

    (178) expresion -> expresion MULTI . expresion
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 360
    valores                        shift and go to state 262

state 307

    (179) expresion -> expresion DIVIS . expresion
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 361
    valores                        shift and go to state 262

state 308

    (180) expresion -> expresion SUMAS . expresion
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 362
    valores                        shift and go to state 262

state 309

    (181) expresion -> expresion MENOS . expresion
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 363
    valores                        shift and go to state 262

state 310

    (166) expresion -> NOT expresion .
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PTCOMA          reduce using rule 166 (expresion -> NOT expresion .)
    MAYOR           reduce using rule 166 (expresion -> NOT expresion .)
    MENOR           reduce using rule 166 (expresion -> NOT expresion .)
    MAYIG           reduce using rule 166 (expresion -> NOT expresion .)
    MENIG           reduce using rule 166 (expresion -> NOT expresion .)
    IGUAQ           reduce using rule 166 (expresion -> NOT expresion .)
    DIFEQ           reduce using rule 166 (expresion -> NOT expresion .)
    POTEN           reduce using rule 166 (expresion -> NOT expresion .)
    MULTI           reduce using rule 166 (expresion -> NOT expresion .)
    DIVIS           reduce using rule 166 (expresion -> NOT expresion .)
    SUMAS           reduce using rule 166 (expresion -> NOT expresion .)
    MENOS           reduce using rule 166 (expresion -> NOT expresion .)
    PARDER          reduce using rule 166 (expresion -> NOT expresion .)
    OR              shift and go to state 297
    AND             shift and go to state 298

  ! OR              [ reduce using rule 166 (expresion -> NOT expresion .) ]
  ! AND             [ reduce using rule 166 (expresion -> NOT expresion .) ]
  ! MAYOR           [ shift and go to state 299 ]
  ! MENOR           [ shift and go to state 300 ]
  ! MAYIG           [ shift and go to state 301 ]
  ! MENIG           [ shift and go to state 302 ]
  ! IGUAQ           [ shift and go to state 303 ]
  ! DIFEQ           [ shift and go to state 304 ]
  ! POTEN           [ shift and go to state 305 ]
  ! MULTI           [ shift and go to state 306 ]
  ! DIVIS           [ shift and go to state 307 ]
  ! SUMAS           [ shift and go to state 308 ]
  ! MENOS           [ shift and go to state 309 ]


state 311

    (175) expresion -> MENOS expresion .
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PTCOMA          reduce using rule 175 (expresion -> MENOS expresion .)
    POTEN           reduce using rule 175 (expresion -> MENOS expresion .)
    MULTI           reduce using rule 175 (expresion -> MENOS expresion .)
    DIVIS           reduce using rule 175 (expresion -> MENOS expresion .)
    SUMAS           reduce using rule 175 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 175 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 175 (expresion -> MENOS expresion .)
    OR              shift and go to state 297
    AND             shift and go to state 298
    MAYOR           shift and go to state 299
    MENOR           shift and go to state 300
    MAYIG           shift and go to state 301
    MENIG           shift and go to state 302
    IGUAQ           shift and go to state 303
    DIFEQ           shift and go to state 304

  ! OR              [ reduce using rule 175 (expresion -> MENOS expresion .) ]
  ! AND             [ reduce using rule 175 (expresion -> MENOS expresion .) ]
  ! MAYOR           [ reduce using rule 175 (expresion -> MENOS expresion .) ]
  ! MENOR           [ reduce using rule 175 (expresion -> MENOS expresion .) ]
  ! MAYIG           [ reduce using rule 175 (expresion -> MENOS expresion .) ]
  ! MENIG           [ reduce using rule 175 (expresion -> MENOS expresion .) ]
  ! IGUAQ           [ reduce using rule 175 (expresion -> MENOS expresion .) ]
  ! DIFEQ           [ reduce using rule 175 (expresion -> MENOS expresion .) ]
  ! POTEN           [ shift and go to state 305 ]
  ! MULTI           [ shift and go to state 306 ]
  ! DIVIS           [ shift and go to state 307 ]
  ! SUMAS           [ shift and go to state 308 ]
  ! MENOS           [ shift and go to state 309 ]


state 312

    (176) expresion -> SUMAS expresion .
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PTCOMA          reduce using rule 176 (expresion -> SUMAS expresion .)
    POTEN           reduce using rule 176 (expresion -> SUMAS expresion .)
    MULTI           reduce using rule 176 (expresion -> SUMAS expresion .)
    DIVIS           reduce using rule 176 (expresion -> SUMAS expresion .)
    SUMAS           reduce using rule 176 (expresion -> SUMAS expresion .)
    MENOS           reduce using rule 176 (expresion -> SUMAS expresion .)
    PARDER          reduce using rule 176 (expresion -> SUMAS expresion .)
    OR              shift and go to state 297
    AND             shift and go to state 298
    MAYOR           shift and go to state 299
    MENOR           shift and go to state 300
    MAYIG           shift and go to state 301
    MENIG           shift and go to state 302
    IGUAQ           shift and go to state 303
    DIFEQ           shift and go to state 304

  ! OR              [ reduce using rule 176 (expresion -> SUMAS expresion .) ]
  ! AND             [ reduce using rule 176 (expresion -> SUMAS expresion .) ]
  ! MAYOR           [ reduce using rule 176 (expresion -> SUMAS expresion .) ]
  ! MENOR           [ reduce using rule 176 (expresion -> SUMAS expresion .) ]
  ! MAYIG           [ reduce using rule 176 (expresion -> SUMAS expresion .) ]
  ! MENIG           [ reduce using rule 176 (expresion -> SUMAS expresion .) ]
  ! IGUAQ           [ reduce using rule 176 (expresion -> SUMAS expresion .) ]
  ! DIFEQ           [ reduce using rule 176 (expresion -> SUMAS expresion .) ]
  ! POTEN           [ shift and go to state 305 ]
  ! MULTI           [ shift and go to state 306 ]
  ! DIVIS           [ shift and go to state 307 ]
  ! SUMAS           [ shift and go to state 308 ]
  ! MENOS           [ shift and go to state 309 ]


state 313

    (182) expresion -> PARIZQ expresion . PARDER
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PARDER          shift and go to state 364
    OR              shift and go to state 297
    AND             shift and go to state 298
    MAYOR           shift and go to state 299
    MENOR           shift and go to state 300
    MAYIG           shift and go to state 301
    MENIG           shift and go to state 302
    IGUAQ           shift and go to state 303
    DIFEQ           shift and go to state 304
    POTEN           shift and go to state 305
    MULTI           shift and go to state 306
    DIVIS           shift and go to state 307
    SUMAS           shift and go to state 308
    MENOS           shift and go to state 309


state 314

    (183) expresion -> SUM PARIZQ . expresion PARDER
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 365
    valores                        shift and go to state 262

state 315

    (184) expresion -> AVG PARIZQ . expresion PARDER
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 366
    valores                        shift and go to state 262

state 316

    (185) expresion -> MAX PARIZQ . expresion PARDER
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 367
    valores                        shift and go to state 262

state 317

    (187) expresion -> POWER PARIZQ . expresion PARDER
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 368
    valores                        shift and go to state 262

state 318

    (188) expresion -> SQRT PARIZQ . expresion PARDER
    (166) expresion -> . NOT expresion
    (167) expresion -> . expresion OR expresion
    (168) expresion -> . expresion AND expresion
    (169) expresion -> . expresion MAYOR expresion
    (170) expresion -> . expresion MENOR expresion
    (171) expresion -> . expresion MAYIG expresion
    (172) expresion -> . expresion MENIG expresion
    (173) expresion -> . expresion IGUAQ expresion
    (174) expresion -> . expresion DIFEQ expresion
    (175) expresion -> . MENOS expresion
    (176) expresion -> . SUMAS expresion
    (177) expresion -> . expresion POTEN expresion
    (178) expresion -> . expresion MULTI expresion
    (179) expresion -> . expresion DIVIS expresion
    (180) expresion -> . expresion SUMAS expresion
    (181) expresion -> . expresion MENOS expresion
    (182) expresion -> . PARIZQ expresion PARDER
    (183) expresion -> . SUM PARIZQ expresion PARDER
    (184) expresion -> . AVG PARIZQ expresion PARDER
    (185) expresion -> . MAX PARIZQ expresion PARDER
    (186) expresion -> . PI
    (187) expresion -> . POWER PARIZQ expresion PARDER
    (188) expresion -> . SQRT PARIZQ expresion PARDER
    (189) expresion -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    NOT             shift and go to state 252
    MENOS           shift and go to state 253
    SUMAS           shift and go to state 254
    PARIZQ          shift and go to state 255
    SUM             shift and go to state 256
    AVG             shift and go to state 257
    MAX             shift and go to state 258
    PI              shift and go to state 259
    POWER           shift and go to state 260
    SQRT            shift and go to state 261
    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    expresion                      shift and go to state 369
    valores                        shift and go to state 262

state 319

    (156) lista_values -> PARIZQ . lista_valores PARDER
    (157) lista_valores -> . lista_valores COMA valores
    (158) lista_valores -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    lista_valores                  shift and go to state 370
    valores                        shift and go to state 371

state 320

    (154) s_insert -> INSERT INTO ID PARIZQ lista_id PARDER VALUES lista_values . PTCOMA
    (155) lista_values -> lista_values . COMA PARIZQ lista_valores PARDER

    PTCOMA          shift and go to state 372
    COMA            shift and go to state 373


state 321

    (163) s_update -> UPDATE ID SET lista_asig WHERE ID IGUAL expresion . PTCOMA
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PTCOMA          shift and go to state 374
    OR              shift and go to state 297
    AND             shift and go to state 298
    MAYOR           shift and go to state 299
    MENOR           shift and go to state 300
    MAYIG           shift and go to state 301
    MENIG           shift and go to state 302
    IGUAQ           shift and go to state 303
    DIFEQ           shift and go to state 304
    POTEN           shift and go to state 305
    MULTI           shift and go to state 306
    DIVIS           shift and go to state 307
    SUMAS           shift and go to state 308
    MENOS           shift and go to state 309


state 322

    (164) lista_asig -> lista_asig COMA ID IGUAL valores .

    PTCOMA          reduce using rule 164 (lista_asig -> lista_asig COMA ID IGUAL valores .)
    WHERE           reduce using rule 164 (lista_asig -> lista_asig COMA ID IGUAL valores .)
    COMA            reduce using rule 164 (lista_asig -> lista_asig COMA ID IGUAL valores .)


state 323

    (25) s_select -> SELECT list_cols FROM list_from list_joins list_conditions list_order PTCOMA .

    CREATE          reduce using rule 25 (s_select -> SELECT list_cols FROM list_from list_joins list_conditions list_order PTCOMA .)
    SHOW            reduce using rule 25 (s_select -> SELECT list_cols FROM list_from list_joins list_conditions list_order PTCOMA .)
    ALTER           reduce using rule 25 (s_select -> SELECT list_cols FROM list_from list_joins list_conditions list_order PTCOMA .)
    DROP            reduce using rule 25 (s_select -> SELECT list_cols FROM list_from list_joins list_conditions list_order PTCOMA .)
    DELETE          reduce using rule 25 (s_select -> SELECT list_cols FROM list_from list_joins list_conditions list_order PTCOMA .)
    INSERT          reduce using rule 25 (s_select -> SELECT list_cols FROM list_from list_joins list_conditions list_order PTCOMA .)
    UPDATE          reduce using rule 25 (s_select -> SELECT list_cols FROM list_from list_joins list_conditions list_order PTCOMA .)
    SELECT          reduce using rule 25 (s_select -> SELECT list_cols FROM list_from list_joins list_conditions list_order PTCOMA .)
    $end            reduce using rule 25 (s_select -> SELECT list_cols FROM list_from list_joins list_conditions list_order PTCOMA .)


state 324

    (48) list_order -> ORDER BY . ID ASC
    (49) list_order -> ORDER BY . ID DESC

    ID              shift and go to state 375


state 325

    (31) list_joins -> list_joins join_type JOIN ID . join_conditions
    (40) join_conditions -> . ON ID sel_comp ID
    (41) join_conditions -> . ON ID sel_comp data_type
    (42) join_conditions -> . empty
    (57) empty -> .

    ON              shift and go to state 335
    WHERE           reduce using rule 57 (empty -> .)
    INNER           reduce using rule 57 (empty -> .)
    LEFT            reduce using rule 57 (empty -> .)
    RIGHT           reduce using rule 57 (empty -> .)
    FULL            reduce using rule 57 (empty -> .)
    OUTER           reduce using rule 57 (empty -> .)
    ORDER           reduce using rule 57 (empty -> .)
    PTCOMA          reduce using rule 57 (empty -> .)
    JOIN            reduce using rule 57 (empty -> .)

    join_conditions                shift and go to state 376
    empty                          shift and go to state 336

state 326

    (45) sel_cond -> sel_cond AND .

    AND             reduce using rule 45 (sel_cond -> sel_cond AND .)
    ORDER           reduce using rule 45 (sel_cond -> sel_cond AND .)
    PTCOMA          reduce using rule 45 (sel_cond -> sel_cond AND .)


state 327

    (46) sel_cond -> ID sel_comp . ID
    (47) sel_cond -> ID sel_comp . data_type
    (68) data_type -> . ENTERO
    (69) data_type -> . TEXT
    (70) data_type -> . SMALLINT
    (71) data_type -> . BEGINT
    (72) data_type -> . DECIMAL
    (73) data_type -> . REAL
    (74) data_type -> . DOUBLE PRECISION
    (75) data_type -> . MONEY
    (76) data_type -> . CHARACTER VARYING PARIZQ ENTERO PARDER
    (77) data_type -> . VARCHAR PARIZQ ENTERO PARDER
    (78) data_type -> . CHARACTER PARIZQ ENTERO PARDER
    (79) data_type -> . CHAR PARIZQ ENTERO PARDER
    (80) data_type -> . TIMESTAMP
    (81) data_type -> . TIMESTAMP time_zone
    (82) data_type -> . DATA
    (83) data_type -> . TIME
    (84) data_type -> . TIME time_zone
    (85) data_type -> . INTERVAL

    ID              shift and go to state 377
    ENTERO          shift and go to state 154
    TEXT            shift and go to state 155
    SMALLINT        shift and go to state 156
    BEGINT          shift and go to state 157
    DECIMAL         shift and go to state 158
    REAL            shift and go to state 159
    DOUBLE          shift and go to state 160
    MONEY           shift and go to state 161
    CHARACTER       shift and go to state 162
    VARCHAR         shift and go to state 163
    CHAR            shift and go to state 164
    TIMESTAMP       shift and go to state 165
    DATA            shift and go to state 166
    TIME            shift and go to state 167
    INTERVAL        shift and go to state 168

    data_type                      shift and go to state 378

state 328

    (51) sel_comp -> IGUAL .

    ID              reduce using rule 51 (sel_comp -> IGUAL .)
    ENTERO          reduce using rule 51 (sel_comp -> IGUAL .)
    TEXT            reduce using rule 51 (sel_comp -> IGUAL .)
    SMALLINT        reduce using rule 51 (sel_comp -> IGUAL .)
    BEGINT          reduce using rule 51 (sel_comp -> IGUAL .)
    DECIMAL         reduce using rule 51 (sel_comp -> IGUAL .)
    REAL            reduce using rule 51 (sel_comp -> IGUAL .)
    DOUBLE          reduce using rule 51 (sel_comp -> IGUAL .)
    MONEY           reduce using rule 51 (sel_comp -> IGUAL .)
    CHARACTER       reduce using rule 51 (sel_comp -> IGUAL .)
    VARCHAR         reduce using rule 51 (sel_comp -> IGUAL .)
    CHAR            reduce using rule 51 (sel_comp -> IGUAL .)
    TIMESTAMP       reduce using rule 51 (sel_comp -> IGUAL .)
    DATA            reduce using rule 51 (sel_comp -> IGUAL .)
    TIME            reduce using rule 51 (sel_comp -> IGUAL .)
    INTERVAL        reduce using rule 51 (sel_comp -> IGUAL .)


state 329

    (52) sel_comp -> MAYIG .

    ID              reduce using rule 52 (sel_comp -> MAYIG .)
    ENTERO          reduce using rule 52 (sel_comp -> MAYIG .)
    TEXT            reduce using rule 52 (sel_comp -> MAYIG .)
    SMALLINT        reduce using rule 52 (sel_comp -> MAYIG .)
    BEGINT          reduce using rule 52 (sel_comp -> MAYIG .)
    DECIMAL         reduce using rule 52 (sel_comp -> MAYIG .)
    REAL            reduce using rule 52 (sel_comp -> MAYIG .)
    DOUBLE          reduce using rule 52 (sel_comp -> MAYIG .)
    MONEY           reduce using rule 52 (sel_comp -> MAYIG .)
    CHARACTER       reduce using rule 52 (sel_comp -> MAYIG .)
    VARCHAR         reduce using rule 52 (sel_comp -> MAYIG .)
    CHAR            reduce using rule 52 (sel_comp -> MAYIG .)
    TIMESTAMP       reduce using rule 52 (sel_comp -> MAYIG .)
    DATA            reduce using rule 52 (sel_comp -> MAYIG .)
    TIME            reduce using rule 52 (sel_comp -> MAYIG .)
    INTERVAL        reduce using rule 52 (sel_comp -> MAYIG .)


state 330

    (53) sel_comp -> MENIG .

    ID              reduce using rule 53 (sel_comp -> MENIG .)
    ENTERO          reduce using rule 53 (sel_comp -> MENIG .)
    TEXT            reduce using rule 53 (sel_comp -> MENIG .)
    SMALLINT        reduce using rule 53 (sel_comp -> MENIG .)
    BEGINT          reduce using rule 53 (sel_comp -> MENIG .)
    DECIMAL         reduce using rule 53 (sel_comp -> MENIG .)
    REAL            reduce using rule 53 (sel_comp -> MENIG .)
    DOUBLE          reduce using rule 53 (sel_comp -> MENIG .)
    MONEY           reduce using rule 53 (sel_comp -> MENIG .)
    CHARACTER       reduce using rule 53 (sel_comp -> MENIG .)
    VARCHAR         reduce using rule 53 (sel_comp -> MENIG .)
    CHAR            reduce using rule 53 (sel_comp -> MENIG .)
    TIMESTAMP       reduce using rule 53 (sel_comp -> MENIG .)
    DATA            reduce using rule 53 (sel_comp -> MENIG .)
    TIME            reduce using rule 53 (sel_comp -> MENIG .)
    INTERVAL        reduce using rule 53 (sel_comp -> MENIG .)


state 331

    (54) sel_comp -> DIFEQ .

    ID              reduce using rule 54 (sel_comp -> DIFEQ .)
    ENTERO          reduce using rule 54 (sel_comp -> DIFEQ .)
    TEXT            reduce using rule 54 (sel_comp -> DIFEQ .)
    SMALLINT        reduce using rule 54 (sel_comp -> DIFEQ .)
    BEGINT          reduce using rule 54 (sel_comp -> DIFEQ .)
    DECIMAL         reduce using rule 54 (sel_comp -> DIFEQ .)
    REAL            reduce using rule 54 (sel_comp -> DIFEQ .)
    DOUBLE          reduce using rule 54 (sel_comp -> DIFEQ .)
    MONEY           reduce using rule 54 (sel_comp -> DIFEQ .)
    CHARACTER       reduce using rule 54 (sel_comp -> DIFEQ .)
    VARCHAR         reduce using rule 54 (sel_comp -> DIFEQ .)
    CHAR            reduce using rule 54 (sel_comp -> DIFEQ .)
    TIMESTAMP       reduce using rule 54 (sel_comp -> DIFEQ .)
    DATA            reduce using rule 54 (sel_comp -> DIFEQ .)
    TIME            reduce using rule 54 (sel_comp -> DIFEQ .)
    INTERVAL        reduce using rule 54 (sel_comp -> DIFEQ .)


state 332

    (55) sel_comp -> MAYOR .

    ID              reduce using rule 55 (sel_comp -> MAYOR .)
    ENTERO          reduce using rule 55 (sel_comp -> MAYOR .)
    TEXT            reduce using rule 55 (sel_comp -> MAYOR .)
    SMALLINT        reduce using rule 55 (sel_comp -> MAYOR .)
    BEGINT          reduce using rule 55 (sel_comp -> MAYOR .)
    DECIMAL         reduce using rule 55 (sel_comp -> MAYOR .)
    REAL            reduce using rule 55 (sel_comp -> MAYOR .)
    DOUBLE          reduce using rule 55 (sel_comp -> MAYOR .)
    MONEY           reduce using rule 55 (sel_comp -> MAYOR .)
    CHARACTER       reduce using rule 55 (sel_comp -> MAYOR .)
    VARCHAR         reduce using rule 55 (sel_comp -> MAYOR .)
    CHAR            reduce using rule 55 (sel_comp -> MAYOR .)
    TIMESTAMP       reduce using rule 55 (sel_comp -> MAYOR .)
    DATA            reduce using rule 55 (sel_comp -> MAYOR .)
    TIME            reduce using rule 55 (sel_comp -> MAYOR .)
    INTERVAL        reduce using rule 55 (sel_comp -> MAYOR .)


state 333

    (56) sel_comp -> MENOR .

    ID              reduce using rule 56 (sel_comp -> MENOR .)
    ENTERO          reduce using rule 56 (sel_comp -> MENOR .)
    TEXT            reduce using rule 56 (sel_comp -> MENOR .)
    SMALLINT        reduce using rule 56 (sel_comp -> MENOR .)
    BEGINT          reduce using rule 56 (sel_comp -> MENOR .)
    DECIMAL         reduce using rule 56 (sel_comp -> MENOR .)
    REAL            reduce using rule 56 (sel_comp -> MENOR .)
    DOUBLE          reduce using rule 56 (sel_comp -> MENOR .)
    MONEY           reduce using rule 56 (sel_comp -> MENOR .)
    CHARACTER       reduce using rule 56 (sel_comp -> MENOR .)
    VARCHAR         reduce using rule 56 (sel_comp -> MENOR .)
    CHAR            reduce using rule 56 (sel_comp -> MENOR .)
    TIMESTAMP       reduce using rule 56 (sel_comp -> MENOR .)
    DATA            reduce using rule 56 (sel_comp -> MENOR .)
    TIME            reduce using rule 56 (sel_comp -> MENOR .)
    INTERVAL        reduce using rule 56 (sel_comp -> MENOR .)


state 334

    (32) list_joins -> join_type JOIN ID join_conditions .

    WHERE           reduce using rule 32 (list_joins -> join_type JOIN ID join_conditions .)
    INNER           reduce using rule 32 (list_joins -> join_type JOIN ID join_conditions .)
    LEFT            reduce using rule 32 (list_joins -> join_type JOIN ID join_conditions .)
    RIGHT           reduce using rule 32 (list_joins -> join_type JOIN ID join_conditions .)
    FULL            reduce using rule 32 (list_joins -> join_type JOIN ID join_conditions .)
    OUTER           reduce using rule 32 (list_joins -> join_type JOIN ID join_conditions .)
    ORDER           reduce using rule 32 (list_joins -> join_type JOIN ID join_conditions .)
    PTCOMA          reduce using rule 32 (list_joins -> join_type JOIN ID join_conditions .)
    JOIN            reduce using rule 32 (list_joins -> join_type JOIN ID join_conditions .)


state 335

    (40) join_conditions -> ON . ID sel_comp ID
    (41) join_conditions -> ON . ID sel_comp data_type

    ID              shift and go to state 379


state 336

    (42) join_conditions -> empty .

    WHERE           reduce using rule 42 (join_conditions -> empty .)
    INNER           reduce using rule 42 (join_conditions -> empty .)
    LEFT            reduce using rule 42 (join_conditions -> empty .)
    RIGHT           reduce using rule 42 (join_conditions -> empty .)
    FULL            reduce using rule 42 (join_conditions -> empty .)
    OUTER           reduce using rule 42 (join_conditions -> empty .)
    ORDER           reduce using rule 42 (join_conditions -> empty .)
    PTCOMA          reduce using rule 42 (join_conditions -> empty .)
    JOIN            reduce using rule 42 (join_conditions -> empty .)


state 337

    (62) lista1 -> lista1 COMA id_cadena .

    COMA            reduce using rule 62 (lista1 -> lista1 COMA id_cadena .)
    PARDER          reduce using rule 62 (lista1 -> lista1 COMA id_cadena .)
    PTCOMA          reduce using rule 62 (lista1 -> lista1 COMA id_cadena .)


state 338

    (76) data_type -> CHARACTER VARYING PARIZQ ENTERO . PARDER

    PARDER          shift and go to state 380


state 339

    (78) data_type -> CHARACTER PARIZQ ENTERO PARDER .

    DEFAULT         reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    NOT             reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    NULL            reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    CONSTRAINT      reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    UNIQUE          reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    CHECK           reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    PRIMARY         reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    REFERENCES      reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    COMA            reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    PARDER          reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    PTCOMA          reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    CREATE          reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    SHOW            reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    ALTER           reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    DROP            reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    DELETE          reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    INSERT          reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    UPDATE          reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    SELECT          reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    $end            reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    AND             reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    ORDER           reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    WHERE           reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    INNER           reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    LEFT            reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    RIGHT           reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    FULL            reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    OUTER           reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)
    JOIN            reduce using rule 78 (data_type -> CHARACTER PARIZQ ENTERO PARDER .)


state 340

    (77) data_type -> VARCHAR PARIZQ ENTERO PARDER .

    DEFAULT         reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    NOT             reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    NULL            reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    CONSTRAINT      reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    UNIQUE          reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    CHECK           reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    PRIMARY         reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    REFERENCES      reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    COMA            reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    PARDER          reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    PTCOMA          reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    CREATE          reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    SHOW            reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    ALTER           reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    DROP            reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    DELETE          reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    INSERT          reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    UPDATE          reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    SELECT          reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    $end            reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    AND             reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    ORDER           reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    WHERE           reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    INNER           reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    LEFT            reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    RIGHT           reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    FULL            reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    OUTER           reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)
    JOIN            reduce using rule 77 (data_type -> VARCHAR PARIZQ ENTERO PARDER .)


state 341

    (79) data_type -> CHAR PARIZQ ENTERO PARDER .

    DEFAULT         reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    NOT             reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    NULL            reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    CONSTRAINT      reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    UNIQUE          reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    CHECK           reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    PRIMARY         reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    REFERENCES      reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    COMA            reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    PARDER          reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    PTCOMA          reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    CREATE          reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    SHOW            reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    ALTER           reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    DROP            reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    DELETE          reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    INSERT          reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    UPDATE          reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    SELECT          reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    $end            reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    AND             reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    ORDER           reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    WHERE           reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    INNER           reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    LEFT            reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    RIGHT           reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    FULL            reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    OUTER           reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)
    JOIN            reduce using rule 79 (data_type -> CHAR PARIZQ ENTERO PARDER .)


state 342

    (86) time_zone -> WITH TIME ZONE .

    DEFAULT         reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    NOT             reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    NULL            reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    CONSTRAINT      reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    UNIQUE          reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    CHECK           reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    PRIMARY         reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    REFERENCES      reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    COMA            reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    PARDER          reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    PTCOMA          reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    CREATE          reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    SHOW            reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    ALTER           reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    DROP            reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    DELETE          reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    INSERT          reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    UPDATE          reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    SELECT          reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    $end            reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    AND             reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    ORDER           reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    WHERE           reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    INNER           reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    LEFT            reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    RIGHT           reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    FULL            reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    OUTER           reduce using rule 86 (time_zone -> WITH TIME ZONE .)
    JOIN            reduce using rule 86 (time_zone -> WITH TIME ZONE .)


state 343

    (87) time_zone -> WITHOUT TIME ZONE .

    DEFAULT         reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    NOT             reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    NULL            reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    CONSTRAINT      reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    UNIQUE          reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    CHECK           reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    PRIMARY         reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    REFERENCES      reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    COMA            reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    PARDER          reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    PTCOMA          reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    CREATE          reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    SHOW            reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    ALTER           reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    DROP            reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    DELETE          reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    INSERT          reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    UPDATE          reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    SELECT          reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    $end            reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    AND             reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    ORDER           reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    WHERE           reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    INNER           reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    LEFT            reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    RIGHT           reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    FULL            reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    OUTER           reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)
    JOIN            reduce using rule 87 (time_zone -> WITHOUT TIME ZONE .)


state 344

    (116) colum_list -> colum_list COMA ID data_type const .
    (123) const -> const . DEFAULT val
    (124) const -> const . NOT NULL
    (125) const -> const . NULL
    (126) const -> const . CONSTRAINT ID UNIQUE
    (127) const -> const . UNIQUE
    (128) const -> const . CONSTRAINT ID CHECK PARIZQ PARDER
    (129) const -> const . CHECK PARIZQ PARDER
    (130) const -> const . PRIMARY KEY
    (131) const -> const . REFERENCES ID

    COMA            reduce using rule 116 (colum_list -> colum_list COMA ID data_type const .)
    PARDER          reduce using rule 116 (colum_list -> colum_list COMA ID data_type const .)
    DEFAULT         shift and go to state 181
    NOT             shift and go to state 182
    NULL            shift and go to state 183
    CONSTRAINT      shift and go to state 184
    UNIQUE          shift and go to state 185
    CHECK           shift and go to state 186
    PRIMARY         shift and go to state 187
    REFERENCES      shift and go to state 188


state 345

    (128) const -> const CONSTRAINT ID CHECK PARIZQ . PARDER

    PARDER          shift and go to state 381


state 346

    (119) const_keys -> const_keys COMA PRIMARY KEY PARIZQ . lista_id PARDER
    (141) lista_id -> . lista_id COMA ID
    (142) lista_id -> . ID

    ID              shift and go to state 132

    lista_id                       shift and go to state 382

state 347

    (120) const_keys -> const_keys COMA FOREIGN KEY PARIZQ . PARDER REFERENCES PARIZQ lista_id PARDER

    PARDER          shift and go to state 383


state 348

    (137) const -> CONSTRAINT ID CHECK PARIZQ PARDER .

    DEFAULT         reduce using rule 137 (const -> CONSTRAINT ID CHECK PARIZQ PARDER .)
    NOT             reduce using rule 137 (const -> CONSTRAINT ID CHECK PARIZQ PARDER .)
    NULL            reduce using rule 137 (const -> CONSTRAINT ID CHECK PARIZQ PARDER .)
    CONSTRAINT      reduce using rule 137 (const -> CONSTRAINT ID CHECK PARIZQ PARDER .)
    UNIQUE          reduce using rule 137 (const -> CONSTRAINT ID CHECK PARIZQ PARDER .)
    CHECK           reduce using rule 137 (const -> CONSTRAINT ID CHECK PARIZQ PARDER .)
    PRIMARY         reduce using rule 137 (const -> CONSTRAINT ID CHECK PARIZQ PARDER .)
    REFERENCES      reduce using rule 137 (const -> CONSTRAINT ID CHECK PARIZQ PARDER .)
    CREATE          reduce using rule 137 (const -> CONSTRAINT ID CHECK PARIZQ PARDER .)
    SHOW            reduce using rule 137 (const -> CONSTRAINT ID CHECK PARIZQ PARDER .)
    ALTER           reduce using rule 137 (const -> CONSTRAINT ID CHECK PARIZQ PARDER .)
    DROP            reduce using rule 137 (const -> CONSTRAINT ID CHECK PARIZQ PARDER .)
    DELETE          reduce using rule 137 (const -> CONSTRAINT ID CHECK PARIZQ PARDER .)
    INSERT          reduce using rule 137 (const -> CONSTRAINT ID CHECK PARIZQ PARDER .)
    UPDATE          reduce using rule 137 (const -> CONSTRAINT ID CHECK PARIZQ PARDER .)
    SELECT          reduce using rule 137 (const -> CONSTRAINT ID CHECK PARIZQ PARDER .)
    $end            reduce using rule 137 (const -> CONSTRAINT ID CHECK PARIZQ PARDER .)
    COMA            reduce using rule 137 (const -> CONSTRAINT ID CHECK PARIZQ PARDER .)
    PARDER          reduce using rule 137 (const -> CONSTRAINT ID CHECK PARIZQ PARDER .)


state 349

    (121) const_keys -> PRIMARY KEY PARIZQ lista_id PARDER .

    COMA            reduce using rule 121 (const_keys -> PRIMARY KEY PARIZQ lista_id PARDER .)
    CREATE          reduce using rule 121 (const_keys -> PRIMARY KEY PARIZQ lista_id PARDER .)
    SHOW            reduce using rule 121 (const_keys -> PRIMARY KEY PARIZQ lista_id PARDER .)
    ALTER           reduce using rule 121 (const_keys -> PRIMARY KEY PARIZQ lista_id PARDER .)
    DROP            reduce using rule 121 (const_keys -> PRIMARY KEY PARIZQ lista_id PARDER .)
    DELETE          reduce using rule 121 (const_keys -> PRIMARY KEY PARIZQ lista_id PARDER .)
    INSERT          reduce using rule 121 (const_keys -> PRIMARY KEY PARIZQ lista_id PARDER .)
    UPDATE          reduce using rule 121 (const_keys -> PRIMARY KEY PARIZQ lista_id PARDER .)
    SELECT          reduce using rule 121 (const_keys -> PRIMARY KEY PARIZQ lista_id PARDER .)
    $end            reduce using rule 121 (const_keys -> PRIMARY KEY PARIZQ lista_id PARDER .)
    PARDER          reduce using rule 121 (const_keys -> PRIMARY KEY PARIZQ lista_id PARDER .)


state 350

    (122) const_keys -> FOREIGN KEY PARIZQ PARDER REFERENCES . PARIZQ lista_id PARDER

    PARIZQ          shift and go to state 384


state 351

    (167) expresion -> expresion OR expresion .
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PTCOMA          reduce using rule 167 (expresion -> expresion OR expresion .)
    OR              reduce using rule 167 (expresion -> expresion OR expresion .)
    AND             reduce using rule 167 (expresion -> expresion OR expresion .)
    MAYOR           reduce using rule 167 (expresion -> expresion OR expresion .)
    MENOR           reduce using rule 167 (expresion -> expresion OR expresion .)
    MAYIG           reduce using rule 167 (expresion -> expresion OR expresion .)
    MENIG           reduce using rule 167 (expresion -> expresion OR expresion .)
    IGUAQ           reduce using rule 167 (expresion -> expresion OR expresion .)
    DIFEQ           reduce using rule 167 (expresion -> expresion OR expresion .)
    POTEN           reduce using rule 167 (expresion -> expresion OR expresion .)
    MULTI           reduce using rule 167 (expresion -> expresion OR expresion .)
    DIVIS           reduce using rule 167 (expresion -> expresion OR expresion .)
    SUMAS           reduce using rule 167 (expresion -> expresion OR expresion .)
    MENOS           reduce using rule 167 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 167 (expresion -> expresion OR expresion .)

  ! OR              [ shift and go to state 297 ]
  ! AND             [ shift and go to state 298 ]
  ! MAYOR           [ shift and go to state 299 ]
  ! MENOR           [ shift and go to state 300 ]
  ! MAYIG           [ shift and go to state 301 ]
  ! MENIG           [ shift and go to state 302 ]
  ! IGUAQ           [ shift and go to state 303 ]
  ! DIFEQ           [ shift and go to state 304 ]
  ! POTEN           [ shift and go to state 305 ]
  ! MULTI           [ shift and go to state 306 ]
  ! DIVIS           [ shift and go to state 307 ]
  ! SUMAS           [ shift and go to state 308 ]
  ! MENOS           [ shift and go to state 309 ]


state 352

    (168) expresion -> expresion AND expresion .
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PTCOMA          reduce using rule 168 (expresion -> expresion AND expresion .)
    AND             reduce using rule 168 (expresion -> expresion AND expresion .)
    MAYOR           reduce using rule 168 (expresion -> expresion AND expresion .)
    MENOR           reduce using rule 168 (expresion -> expresion AND expresion .)
    MAYIG           reduce using rule 168 (expresion -> expresion AND expresion .)
    MENIG           reduce using rule 168 (expresion -> expresion AND expresion .)
    IGUAQ           reduce using rule 168 (expresion -> expresion AND expresion .)
    DIFEQ           reduce using rule 168 (expresion -> expresion AND expresion .)
    POTEN           reduce using rule 168 (expresion -> expresion AND expresion .)
    MULTI           reduce using rule 168 (expresion -> expresion AND expresion .)
    DIVIS           reduce using rule 168 (expresion -> expresion AND expresion .)
    SUMAS           reduce using rule 168 (expresion -> expresion AND expresion .)
    MENOS           reduce using rule 168 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 168 (expresion -> expresion AND expresion .)
    OR              shift and go to state 297

  ! OR              [ reduce using rule 168 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 298 ]
  ! MAYOR           [ shift and go to state 299 ]
  ! MENOR           [ shift and go to state 300 ]
  ! MAYIG           [ shift and go to state 301 ]
  ! MENIG           [ shift and go to state 302 ]
  ! IGUAQ           [ shift and go to state 303 ]
  ! DIFEQ           [ shift and go to state 304 ]
  ! POTEN           [ shift and go to state 305 ]
  ! MULTI           [ shift and go to state 306 ]
  ! DIVIS           [ shift and go to state 307 ]
  ! SUMAS           [ shift and go to state 308 ]
  ! MENOS           [ shift and go to state 309 ]


state 353

    (169) expresion -> expresion MAYOR expresion .
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PTCOMA          reduce using rule 169 (expresion -> expresion MAYOR expresion .)
    MAYOR           reduce using rule 169 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 169 (expresion -> expresion MAYOR expresion .)
    MAYIG           reduce using rule 169 (expresion -> expresion MAYOR expresion .)
    MENIG           reduce using rule 169 (expresion -> expresion MAYOR expresion .)
    IGUAQ           reduce using rule 169 (expresion -> expresion MAYOR expresion .)
    DIFEQ           reduce using rule 169 (expresion -> expresion MAYOR expresion .)
    POTEN           reduce using rule 169 (expresion -> expresion MAYOR expresion .)
    MULTI           reduce using rule 169 (expresion -> expresion MAYOR expresion .)
    DIVIS           reduce using rule 169 (expresion -> expresion MAYOR expresion .)
    SUMAS           reduce using rule 169 (expresion -> expresion MAYOR expresion .)
    MENOS           reduce using rule 169 (expresion -> expresion MAYOR expresion .)
    PARDER          reduce using rule 169 (expresion -> expresion MAYOR expresion .)
    OR              shift and go to state 297
    AND             shift and go to state 298

  ! OR              [ reduce using rule 169 (expresion -> expresion MAYOR expresion .) ]
  ! AND             [ reduce using rule 169 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ shift and go to state 299 ]
  ! MENOR           [ shift and go to state 300 ]
  ! MAYIG           [ shift and go to state 301 ]
  ! MENIG           [ shift and go to state 302 ]
  ! IGUAQ           [ shift and go to state 303 ]
  ! DIFEQ           [ shift and go to state 304 ]
  ! POTEN           [ shift and go to state 305 ]
  ! MULTI           [ shift and go to state 306 ]
  ! DIVIS           [ shift and go to state 307 ]
  ! SUMAS           [ shift and go to state 308 ]
  ! MENOS           [ shift and go to state 309 ]


state 354

    (170) expresion -> expresion MENOR expresion .
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PTCOMA          reduce using rule 170 (expresion -> expresion MENOR expresion .)
    MAYOR           reduce using rule 170 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 170 (expresion -> expresion MENOR expresion .)
    MAYIG           reduce using rule 170 (expresion -> expresion MENOR expresion .)
    MENIG           reduce using rule 170 (expresion -> expresion MENOR expresion .)
    IGUAQ           reduce using rule 170 (expresion -> expresion MENOR expresion .)
    DIFEQ           reduce using rule 170 (expresion -> expresion MENOR expresion .)
    POTEN           reduce using rule 170 (expresion -> expresion MENOR expresion .)
    MULTI           reduce using rule 170 (expresion -> expresion MENOR expresion .)
    DIVIS           reduce using rule 170 (expresion -> expresion MENOR expresion .)
    SUMAS           reduce using rule 170 (expresion -> expresion MENOR expresion .)
    MENOS           reduce using rule 170 (expresion -> expresion MENOR expresion .)
    PARDER          reduce using rule 170 (expresion -> expresion MENOR expresion .)
    OR              shift and go to state 297
    AND             shift and go to state 298

  ! OR              [ reduce using rule 170 (expresion -> expresion MENOR expresion .) ]
  ! AND             [ reduce using rule 170 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ shift and go to state 299 ]
  ! MENOR           [ shift and go to state 300 ]
  ! MAYIG           [ shift and go to state 301 ]
  ! MENIG           [ shift and go to state 302 ]
  ! IGUAQ           [ shift and go to state 303 ]
  ! DIFEQ           [ shift and go to state 304 ]
  ! POTEN           [ shift and go to state 305 ]
  ! MULTI           [ shift and go to state 306 ]
  ! DIVIS           [ shift and go to state 307 ]
  ! SUMAS           [ shift and go to state 308 ]
  ! MENOS           [ shift and go to state 309 ]


state 355

    (171) expresion -> expresion MAYIG expresion .
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PTCOMA          reduce using rule 171 (expresion -> expresion MAYIG expresion .)
    MAYOR           reduce using rule 171 (expresion -> expresion MAYIG expresion .)
    MENOR           reduce using rule 171 (expresion -> expresion MAYIG expresion .)
    MAYIG           reduce using rule 171 (expresion -> expresion MAYIG expresion .)
    MENIG           reduce using rule 171 (expresion -> expresion MAYIG expresion .)
    IGUAQ           reduce using rule 171 (expresion -> expresion MAYIG expresion .)
    DIFEQ           reduce using rule 171 (expresion -> expresion MAYIG expresion .)
    POTEN           reduce using rule 171 (expresion -> expresion MAYIG expresion .)
    MULTI           reduce using rule 171 (expresion -> expresion MAYIG expresion .)
    DIVIS           reduce using rule 171 (expresion -> expresion MAYIG expresion .)
    SUMAS           reduce using rule 171 (expresion -> expresion MAYIG expresion .)
    MENOS           reduce using rule 171 (expresion -> expresion MAYIG expresion .)
    PARDER          reduce using rule 171 (expresion -> expresion MAYIG expresion .)
    OR              shift and go to state 297
    AND             shift and go to state 298

  ! OR              [ reduce using rule 171 (expresion -> expresion MAYIG expresion .) ]
  ! AND             [ reduce using rule 171 (expresion -> expresion MAYIG expresion .) ]
  ! MAYOR           [ shift and go to state 299 ]
  ! MENOR           [ shift and go to state 300 ]
  ! MAYIG           [ shift and go to state 301 ]
  ! MENIG           [ shift and go to state 302 ]
  ! IGUAQ           [ shift and go to state 303 ]
  ! DIFEQ           [ shift and go to state 304 ]
  ! POTEN           [ shift and go to state 305 ]
  ! MULTI           [ shift and go to state 306 ]
  ! DIVIS           [ shift and go to state 307 ]
  ! SUMAS           [ shift and go to state 308 ]
  ! MENOS           [ shift and go to state 309 ]


state 356

    (172) expresion -> expresion MENIG expresion .
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PTCOMA          reduce using rule 172 (expresion -> expresion MENIG expresion .)
    MAYOR           reduce using rule 172 (expresion -> expresion MENIG expresion .)
    MENOR           reduce using rule 172 (expresion -> expresion MENIG expresion .)
    MAYIG           reduce using rule 172 (expresion -> expresion MENIG expresion .)
    MENIG           reduce using rule 172 (expresion -> expresion MENIG expresion .)
    IGUAQ           reduce using rule 172 (expresion -> expresion MENIG expresion .)
    DIFEQ           reduce using rule 172 (expresion -> expresion MENIG expresion .)
    POTEN           reduce using rule 172 (expresion -> expresion MENIG expresion .)
    MULTI           reduce using rule 172 (expresion -> expresion MENIG expresion .)
    DIVIS           reduce using rule 172 (expresion -> expresion MENIG expresion .)
    SUMAS           reduce using rule 172 (expresion -> expresion MENIG expresion .)
    MENOS           reduce using rule 172 (expresion -> expresion MENIG expresion .)
    PARDER          reduce using rule 172 (expresion -> expresion MENIG expresion .)
    OR              shift and go to state 297
    AND             shift and go to state 298

  ! OR              [ reduce using rule 172 (expresion -> expresion MENIG expresion .) ]
  ! AND             [ reduce using rule 172 (expresion -> expresion MENIG expresion .) ]
  ! MAYOR           [ shift and go to state 299 ]
  ! MENOR           [ shift and go to state 300 ]
  ! MAYIG           [ shift and go to state 301 ]
  ! MENIG           [ shift and go to state 302 ]
  ! IGUAQ           [ shift and go to state 303 ]
  ! DIFEQ           [ shift and go to state 304 ]
  ! POTEN           [ shift and go to state 305 ]
  ! MULTI           [ shift and go to state 306 ]
  ! DIVIS           [ shift and go to state 307 ]
  ! SUMAS           [ shift and go to state 308 ]
  ! MENOS           [ shift and go to state 309 ]


state 357

    (173) expresion -> expresion IGUAQ expresion .
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PTCOMA          reduce using rule 173 (expresion -> expresion IGUAQ expresion .)
    MAYOR           reduce using rule 173 (expresion -> expresion IGUAQ expresion .)
    MENOR           reduce using rule 173 (expresion -> expresion IGUAQ expresion .)
    MAYIG           reduce using rule 173 (expresion -> expresion IGUAQ expresion .)
    MENIG           reduce using rule 173 (expresion -> expresion IGUAQ expresion .)
    IGUAQ           reduce using rule 173 (expresion -> expresion IGUAQ expresion .)
    DIFEQ           reduce using rule 173 (expresion -> expresion IGUAQ expresion .)
    POTEN           reduce using rule 173 (expresion -> expresion IGUAQ expresion .)
    MULTI           reduce using rule 173 (expresion -> expresion IGUAQ expresion .)
    DIVIS           reduce using rule 173 (expresion -> expresion IGUAQ expresion .)
    SUMAS           reduce using rule 173 (expresion -> expresion IGUAQ expresion .)
    MENOS           reduce using rule 173 (expresion -> expresion IGUAQ expresion .)
    PARDER          reduce using rule 173 (expresion -> expresion IGUAQ expresion .)
    OR              shift and go to state 297
    AND             shift and go to state 298

  ! OR              [ reduce using rule 173 (expresion -> expresion IGUAQ expresion .) ]
  ! AND             [ reduce using rule 173 (expresion -> expresion IGUAQ expresion .) ]
  ! MAYOR           [ shift and go to state 299 ]
  ! MENOR           [ shift and go to state 300 ]
  ! MAYIG           [ shift and go to state 301 ]
  ! MENIG           [ shift and go to state 302 ]
  ! IGUAQ           [ shift and go to state 303 ]
  ! DIFEQ           [ shift and go to state 304 ]
  ! POTEN           [ shift and go to state 305 ]
  ! MULTI           [ shift and go to state 306 ]
  ! DIVIS           [ shift and go to state 307 ]
  ! SUMAS           [ shift and go to state 308 ]
  ! MENOS           [ shift and go to state 309 ]


state 358

    (174) expresion -> expresion DIFEQ expresion .
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PTCOMA          reduce using rule 174 (expresion -> expresion DIFEQ expresion .)
    MAYOR           reduce using rule 174 (expresion -> expresion DIFEQ expresion .)
    MENOR           reduce using rule 174 (expresion -> expresion DIFEQ expresion .)
    MAYIG           reduce using rule 174 (expresion -> expresion DIFEQ expresion .)
    MENIG           reduce using rule 174 (expresion -> expresion DIFEQ expresion .)
    IGUAQ           reduce using rule 174 (expresion -> expresion DIFEQ expresion .)
    DIFEQ           reduce using rule 174 (expresion -> expresion DIFEQ expresion .)
    POTEN           reduce using rule 174 (expresion -> expresion DIFEQ expresion .)
    MULTI           reduce using rule 174 (expresion -> expresion DIFEQ expresion .)
    DIVIS           reduce using rule 174 (expresion -> expresion DIFEQ expresion .)
    SUMAS           reduce using rule 174 (expresion -> expresion DIFEQ expresion .)
    MENOS           reduce using rule 174 (expresion -> expresion DIFEQ expresion .)
    PARDER          reduce using rule 174 (expresion -> expresion DIFEQ expresion .)
    OR              shift and go to state 297
    AND             shift and go to state 298

  ! OR              [ reduce using rule 174 (expresion -> expresion DIFEQ expresion .) ]
  ! AND             [ reduce using rule 174 (expresion -> expresion DIFEQ expresion .) ]
  ! MAYOR           [ shift and go to state 299 ]
  ! MENOR           [ shift and go to state 300 ]
  ! MAYIG           [ shift and go to state 301 ]
  ! MENIG           [ shift and go to state 302 ]
  ! IGUAQ           [ shift and go to state 303 ]
  ! DIFEQ           [ shift and go to state 304 ]
  ! POTEN           [ shift and go to state 305 ]
  ! MULTI           [ shift and go to state 306 ]
  ! DIVIS           [ shift and go to state 307 ]
  ! SUMAS           [ shift and go to state 308 ]
  ! MENOS           [ shift and go to state 309 ]


state 359

    (177) expresion -> expresion POTEN expresion .
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PTCOMA          reduce using rule 177 (expresion -> expresion POTEN expresion .)
    POTEN           reduce using rule 177 (expresion -> expresion POTEN expresion .)
    MULTI           reduce using rule 177 (expresion -> expresion POTEN expresion .)
    DIVIS           reduce using rule 177 (expresion -> expresion POTEN expresion .)
    SUMAS           reduce using rule 177 (expresion -> expresion POTEN expresion .)
    MENOS           reduce using rule 177 (expresion -> expresion POTEN expresion .)
    PARDER          reduce using rule 177 (expresion -> expresion POTEN expresion .)
    OR              shift and go to state 297
    AND             shift and go to state 298
    MAYOR           shift and go to state 299
    MENOR           shift and go to state 300
    MAYIG           shift and go to state 301
    MENIG           shift and go to state 302
    IGUAQ           shift and go to state 303
    DIFEQ           shift and go to state 304

  ! OR              [ reduce using rule 177 (expresion -> expresion POTEN expresion .) ]
  ! AND             [ reduce using rule 177 (expresion -> expresion POTEN expresion .) ]
  ! MAYOR           [ reduce using rule 177 (expresion -> expresion POTEN expresion .) ]
  ! MENOR           [ reduce using rule 177 (expresion -> expresion POTEN expresion .) ]
  ! MAYIG           [ reduce using rule 177 (expresion -> expresion POTEN expresion .) ]
  ! MENIG           [ reduce using rule 177 (expresion -> expresion POTEN expresion .) ]
  ! IGUAQ           [ reduce using rule 177 (expresion -> expresion POTEN expresion .) ]
  ! DIFEQ           [ reduce using rule 177 (expresion -> expresion POTEN expresion .) ]
  ! POTEN           [ shift and go to state 305 ]
  ! MULTI           [ shift and go to state 306 ]
  ! DIVIS           [ shift and go to state 307 ]
  ! SUMAS           [ shift and go to state 308 ]
  ! MENOS           [ shift and go to state 309 ]


state 360

    (178) expresion -> expresion MULTI expresion .
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PTCOMA          reduce using rule 178 (expresion -> expresion MULTI expresion .)
    MULTI           reduce using rule 178 (expresion -> expresion MULTI expresion .)
    DIVIS           reduce using rule 178 (expresion -> expresion MULTI expresion .)
    SUMAS           reduce using rule 178 (expresion -> expresion MULTI expresion .)
    MENOS           reduce using rule 178 (expresion -> expresion MULTI expresion .)
    PARDER          reduce using rule 178 (expresion -> expresion MULTI expresion .)
    OR              shift and go to state 297
    AND             shift and go to state 298
    MAYOR           shift and go to state 299
    MENOR           shift and go to state 300
    MAYIG           shift and go to state 301
    MENIG           shift and go to state 302
    IGUAQ           shift and go to state 303
    DIFEQ           shift and go to state 304
    POTEN           shift and go to state 305

  ! OR              [ reduce using rule 178 (expresion -> expresion MULTI expresion .) ]
  ! AND             [ reduce using rule 178 (expresion -> expresion MULTI expresion .) ]
  ! MAYOR           [ reduce using rule 178 (expresion -> expresion MULTI expresion .) ]
  ! MENOR           [ reduce using rule 178 (expresion -> expresion MULTI expresion .) ]
  ! MAYIG           [ reduce using rule 178 (expresion -> expresion MULTI expresion .) ]
  ! MENIG           [ reduce using rule 178 (expresion -> expresion MULTI expresion .) ]
  ! IGUAQ           [ reduce using rule 178 (expresion -> expresion MULTI expresion .) ]
  ! DIFEQ           [ reduce using rule 178 (expresion -> expresion MULTI expresion .) ]
  ! POTEN           [ reduce using rule 178 (expresion -> expresion MULTI expresion .) ]
  ! MULTI           [ shift and go to state 306 ]
  ! DIVIS           [ shift and go to state 307 ]
  ! SUMAS           [ shift and go to state 308 ]
  ! MENOS           [ shift and go to state 309 ]


state 361

    (179) expresion -> expresion DIVIS expresion .
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PTCOMA          reduce using rule 179 (expresion -> expresion DIVIS expresion .)
    MULTI           reduce using rule 179 (expresion -> expresion DIVIS expresion .)
    DIVIS           reduce using rule 179 (expresion -> expresion DIVIS expresion .)
    SUMAS           reduce using rule 179 (expresion -> expresion DIVIS expresion .)
    MENOS           reduce using rule 179 (expresion -> expresion DIVIS expresion .)
    PARDER          reduce using rule 179 (expresion -> expresion DIVIS expresion .)
    OR              shift and go to state 297
    AND             shift and go to state 298
    MAYOR           shift and go to state 299
    MENOR           shift and go to state 300
    MAYIG           shift and go to state 301
    MENIG           shift and go to state 302
    IGUAQ           shift and go to state 303
    DIFEQ           shift and go to state 304
    POTEN           shift and go to state 305

  ! OR              [ reduce using rule 179 (expresion -> expresion DIVIS expresion .) ]
  ! AND             [ reduce using rule 179 (expresion -> expresion DIVIS expresion .) ]
  ! MAYOR           [ reduce using rule 179 (expresion -> expresion DIVIS expresion .) ]
  ! MENOR           [ reduce using rule 179 (expresion -> expresion DIVIS expresion .) ]
  ! MAYIG           [ reduce using rule 179 (expresion -> expresion DIVIS expresion .) ]
  ! MENIG           [ reduce using rule 179 (expresion -> expresion DIVIS expresion .) ]
  ! IGUAQ           [ reduce using rule 179 (expresion -> expresion DIVIS expresion .) ]
  ! DIFEQ           [ reduce using rule 179 (expresion -> expresion DIVIS expresion .) ]
  ! POTEN           [ reduce using rule 179 (expresion -> expresion DIVIS expresion .) ]
  ! MULTI           [ shift and go to state 306 ]
  ! DIVIS           [ shift and go to state 307 ]
  ! SUMAS           [ shift and go to state 308 ]
  ! MENOS           [ shift and go to state 309 ]


state 362

    (180) expresion -> expresion SUMAS expresion .
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PTCOMA          reduce using rule 180 (expresion -> expresion SUMAS expresion .)
    SUMAS           reduce using rule 180 (expresion -> expresion SUMAS expresion .)
    MENOS           reduce using rule 180 (expresion -> expresion SUMAS expresion .)
    PARDER          reduce using rule 180 (expresion -> expresion SUMAS expresion .)
    OR              shift and go to state 297
    AND             shift and go to state 298
    MAYOR           shift and go to state 299
    MENOR           shift and go to state 300
    MAYIG           shift and go to state 301
    MENIG           shift and go to state 302
    IGUAQ           shift and go to state 303
    DIFEQ           shift and go to state 304
    POTEN           shift and go to state 305
    MULTI           shift and go to state 306
    DIVIS           shift and go to state 307

  ! OR              [ reduce using rule 180 (expresion -> expresion SUMAS expresion .) ]
  ! AND             [ reduce using rule 180 (expresion -> expresion SUMAS expresion .) ]
  ! MAYOR           [ reduce using rule 180 (expresion -> expresion SUMAS expresion .) ]
  ! MENOR           [ reduce using rule 180 (expresion -> expresion SUMAS expresion .) ]
  ! MAYIG           [ reduce using rule 180 (expresion -> expresion SUMAS expresion .) ]
  ! MENIG           [ reduce using rule 180 (expresion -> expresion SUMAS expresion .) ]
  ! IGUAQ           [ reduce using rule 180 (expresion -> expresion SUMAS expresion .) ]
  ! DIFEQ           [ reduce using rule 180 (expresion -> expresion SUMAS expresion .) ]
  ! POTEN           [ reduce using rule 180 (expresion -> expresion SUMAS expresion .) ]
  ! MULTI           [ reduce using rule 180 (expresion -> expresion SUMAS expresion .) ]
  ! DIVIS           [ reduce using rule 180 (expresion -> expresion SUMAS expresion .) ]
  ! SUMAS           [ shift and go to state 308 ]
  ! MENOS           [ shift and go to state 309 ]


state 363

    (181) expresion -> expresion MENOS expresion .
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PTCOMA          reduce using rule 181 (expresion -> expresion MENOS expresion .)
    SUMAS           reduce using rule 181 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 181 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 181 (expresion -> expresion MENOS expresion .)
    OR              shift and go to state 297
    AND             shift and go to state 298
    MAYOR           shift and go to state 299
    MENOR           shift and go to state 300
    MAYIG           shift and go to state 301
    MENIG           shift and go to state 302
    IGUAQ           shift and go to state 303
    DIFEQ           shift and go to state 304
    POTEN           shift and go to state 305
    MULTI           shift and go to state 306
    DIVIS           shift and go to state 307

  ! OR              [ reduce using rule 181 (expresion -> expresion MENOS expresion .) ]
  ! AND             [ reduce using rule 181 (expresion -> expresion MENOS expresion .) ]
  ! MAYOR           [ reduce using rule 181 (expresion -> expresion MENOS expresion .) ]
  ! MENOR           [ reduce using rule 181 (expresion -> expresion MENOS expresion .) ]
  ! MAYIG           [ reduce using rule 181 (expresion -> expresion MENOS expresion .) ]
  ! MENIG           [ reduce using rule 181 (expresion -> expresion MENOS expresion .) ]
  ! IGUAQ           [ reduce using rule 181 (expresion -> expresion MENOS expresion .) ]
  ! DIFEQ           [ reduce using rule 181 (expresion -> expresion MENOS expresion .) ]
  ! POTEN           [ reduce using rule 181 (expresion -> expresion MENOS expresion .) ]
  ! MULTI           [ reduce using rule 181 (expresion -> expresion MENOS expresion .) ]
  ! DIVIS           [ reduce using rule 181 (expresion -> expresion MENOS expresion .) ]
  ! SUMAS           [ shift and go to state 308 ]
  ! MENOS           [ shift and go to state 309 ]


state 364

    (182) expresion -> PARIZQ expresion PARDER .

    PTCOMA          reduce using rule 182 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 182 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 182 (expresion -> PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 182 (expresion -> PARIZQ expresion PARDER .)
    MENOR           reduce using rule 182 (expresion -> PARIZQ expresion PARDER .)
    MAYIG           reduce using rule 182 (expresion -> PARIZQ expresion PARDER .)
    MENIG           reduce using rule 182 (expresion -> PARIZQ expresion PARDER .)
    IGUAQ           reduce using rule 182 (expresion -> PARIZQ expresion PARDER .)
    DIFEQ           reduce using rule 182 (expresion -> PARIZQ expresion PARDER .)
    POTEN           reduce using rule 182 (expresion -> PARIZQ expresion PARDER .)
    MULTI           reduce using rule 182 (expresion -> PARIZQ expresion PARDER .)
    DIVIS           reduce using rule 182 (expresion -> PARIZQ expresion PARDER .)
    SUMAS           reduce using rule 182 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 182 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 182 (expresion -> PARIZQ expresion PARDER .)


state 365

    (183) expresion -> SUM PARIZQ expresion . PARDER
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PARDER          shift and go to state 385
    OR              shift and go to state 297
    AND             shift and go to state 298
    MAYOR           shift and go to state 299
    MENOR           shift and go to state 300
    MAYIG           shift and go to state 301
    MENIG           shift and go to state 302
    IGUAQ           shift and go to state 303
    DIFEQ           shift and go to state 304
    POTEN           shift and go to state 305
    MULTI           shift and go to state 306
    DIVIS           shift and go to state 307
    SUMAS           shift and go to state 308
    MENOS           shift and go to state 309


state 366

    (184) expresion -> AVG PARIZQ expresion . PARDER
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PARDER          shift and go to state 386
    OR              shift and go to state 297
    AND             shift and go to state 298
    MAYOR           shift and go to state 299
    MENOR           shift and go to state 300
    MAYIG           shift and go to state 301
    MENIG           shift and go to state 302
    IGUAQ           shift and go to state 303
    DIFEQ           shift and go to state 304
    POTEN           shift and go to state 305
    MULTI           shift and go to state 306
    DIVIS           shift and go to state 307
    SUMAS           shift and go to state 308
    MENOS           shift and go to state 309


state 367

    (185) expresion -> MAX PARIZQ expresion . PARDER
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PARDER          shift and go to state 387
    OR              shift and go to state 297
    AND             shift and go to state 298
    MAYOR           shift and go to state 299
    MENOR           shift and go to state 300
    MAYIG           shift and go to state 301
    MENIG           shift and go to state 302
    IGUAQ           shift and go to state 303
    DIFEQ           shift and go to state 304
    POTEN           shift and go to state 305
    MULTI           shift and go to state 306
    DIVIS           shift and go to state 307
    SUMAS           shift and go to state 308
    MENOS           shift and go to state 309


state 368

    (187) expresion -> POWER PARIZQ expresion . PARDER
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PARDER          shift and go to state 388
    OR              shift and go to state 297
    AND             shift and go to state 298
    MAYOR           shift and go to state 299
    MENOR           shift and go to state 300
    MAYIG           shift and go to state 301
    MENIG           shift and go to state 302
    IGUAQ           shift and go to state 303
    DIFEQ           shift and go to state 304
    POTEN           shift and go to state 305
    MULTI           shift and go to state 306
    DIVIS           shift and go to state 307
    SUMAS           shift and go to state 308
    MENOS           shift and go to state 309


state 369

    (188) expresion -> SQRT PARIZQ expresion . PARDER
    (167) expresion -> expresion . OR expresion
    (168) expresion -> expresion . AND expresion
    (169) expresion -> expresion . MAYOR expresion
    (170) expresion -> expresion . MENOR expresion
    (171) expresion -> expresion . MAYIG expresion
    (172) expresion -> expresion . MENIG expresion
    (173) expresion -> expresion . IGUAQ expresion
    (174) expresion -> expresion . DIFEQ expresion
    (177) expresion -> expresion . POTEN expresion
    (178) expresion -> expresion . MULTI expresion
    (179) expresion -> expresion . DIVIS expresion
    (180) expresion -> expresion . SUMAS expresion
    (181) expresion -> expresion . MENOS expresion

    PARDER          shift and go to state 389
    OR              shift and go to state 297
    AND             shift and go to state 298
    MAYOR           shift and go to state 299
    MENOR           shift and go to state 300
    MAYIG           shift and go to state 301
    MENIG           shift and go to state 302
    IGUAQ           shift and go to state 303
    DIFEQ           shift and go to state 304
    POTEN           shift and go to state 305
    MULTI           shift and go to state 306
    DIVIS           shift and go to state 307
    SUMAS           shift and go to state 308
    MENOS           shift and go to state 309


state 370

    (156) lista_values -> PARIZQ lista_valores . PARDER
    (157) lista_valores -> lista_valores . COMA valores

    PARDER          shift and go to state 390
    COMA            shift and go to state 391


state 371

    (158) lista_valores -> valores .

    PARDER          reduce using rule 158 (lista_valores -> valores .)
    COMA            reduce using rule 158 (lista_valores -> valores .)


state 372

    (154) s_insert -> INSERT INTO ID PARIZQ lista_id PARDER VALUES lista_values PTCOMA .

    CREATE          reduce using rule 154 (s_insert -> INSERT INTO ID PARIZQ lista_id PARDER VALUES lista_values PTCOMA .)
    SHOW            reduce using rule 154 (s_insert -> INSERT INTO ID PARIZQ lista_id PARDER VALUES lista_values PTCOMA .)
    ALTER           reduce using rule 154 (s_insert -> INSERT INTO ID PARIZQ lista_id PARDER VALUES lista_values PTCOMA .)
    DROP            reduce using rule 154 (s_insert -> INSERT INTO ID PARIZQ lista_id PARDER VALUES lista_values PTCOMA .)
    DELETE          reduce using rule 154 (s_insert -> INSERT INTO ID PARIZQ lista_id PARDER VALUES lista_values PTCOMA .)
    INSERT          reduce using rule 154 (s_insert -> INSERT INTO ID PARIZQ lista_id PARDER VALUES lista_values PTCOMA .)
    UPDATE          reduce using rule 154 (s_insert -> INSERT INTO ID PARIZQ lista_id PARDER VALUES lista_values PTCOMA .)
    SELECT          reduce using rule 154 (s_insert -> INSERT INTO ID PARIZQ lista_id PARDER VALUES lista_values PTCOMA .)
    $end            reduce using rule 154 (s_insert -> INSERT INTO ID PARIZQ lista_id PARDER VALUES lista_values PTCOMA .)


state 373

    (155) lista_values -> lista_values COMA . PARIZQ lista_valores PARDER

    PARIZQ          shift and go to state 392


state 374

    (163) s_update -> UPDATE ID SET lista_asig WHERE ID IGUAL expresion PTCOMA .

    CREATE          reduce using rule 163 (s_update -> UPDATE ID SET lista_asig WHERE ID IGUAL expresion PTCOMA .)
    SHOW            reduce using rule 163 (s_update -> UPDATE ID SET lista_asig WHERE ID IGUAL expresion PTCOMA .)
    ALTER           reduce using rule 163 (s_update -> UPDATE ID SET lista_asig WHERE ID IGUAL expresion PTCOMA .)
    DROP            reduce using rule 163 (s_update -> UPDATE ID SET lista_asig WHERE ID IGUAL expresion PTCOMA .)
    DELETE          reduce using rule 163 (s_update -> UPDATE ID SET lista_asig WHERE ID IGUAL expresion PTCOMA .)
    INSERT          reduce using rule 163 (s_update -> UPDATE ID SET lista_asig WHERE ID IGUAL expresion PTCOMA .)
    UPDATE          reduce using rule 163 (s_update -> UPDATE ID SET lista_asig WHERE ID IGUAL expresion PTCOMA .)
    SELECT          reduce using rule 163 (s_update -> UPDATE ID SET lista_asig WHERE ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 163 (s_update -> UPDATE ID SET lista_asig WHERE ID IGUAL expresion PTCOMA .)


state 375

    (48) list_order -> ORDER BY ID . ASC
    (49) list_order -> ORDER BY ID . DESC

    ASC             shift and go to state 393
    DESC            shift and go to state 394


state 376

    (31) list_joins -> list_joins join_type JOIN ID join_conditions .

    WHERE           reduce using rule 31 (list_joins -> list_joins join_type JOIN ID join_conditions .)
    INNER           reduce using rule 31 (list_joins -> list_joins join_type JOIN ID join_conditions .)
    LEFT            reduce using rule 31 (list_joins -> list_joins join_type JOIN ID join_conditions .)
    RIGHT           reduce using rule 31 (list_joins -> list_joins join_type JOIN ID join_conditions .)
    FULL            reduce using rule 31 (list_joins -> list_joins join_type JOIN ID join_conditions .)
    OUTER           reduce using rule 31 (list_joins -> list_joins join_type JOIN ID join_conditions .)
    ORDER           reduce using rule 31 (list_joins -> list_joins join_type JOIN ID join_conditions .)
    PTCOMA          reduce using rule 31 (list_joins -> list_joins join_type JOIN ID join_conditions .)
    JOIN            reduce using rule 31 (list_joins -> list_joins join_type JOIN ID join_conditions .)


state 377

    (46) sel_cond -> ID sel_comp ID .

    AND             reduce using rule 46 (sel_cond -> ID sel_comp ID .)
    ORDER           reduce using rule 46 (sel_cond -> ID sel_comp ID .)
    PTCOMA          reduce using rule 46 (sel_cond -> ID sel_comp ID .)


state 378

    (47) sel_cond -> ID sel_comp data_type .

    AND             reduce using rule 47 (sel_cond -> ID sel_comp data_type .)
    ORDER           reduce using rule 47 (sel_cond -> ID sel_comp data_type .)
    PTCOMA          reduce using rule 47 (sel_cond -> ID sel_comp data_type .)


state 379

    (40) join_conditions -> ON ID . sel_comp ID
    (41) join_conditions -> ON ID . sel_comp data_type
    (51) sel_comp -> . IGUAL
    (52) sel_comp -> . MAYIG
    (53) sel_comp -> . MENIG
    (54) sel_comp -> . DIFEQ
    (55) sel_comp -> . MAYOR
    (56) sel_comp -> . MENOR

    IGUAL           shift and go to state 328
    MAYIG           shift and go to state 329
    MENIG           shift and go to state 330
    DIFEQ           shift and go to state 331
    MAYOR           shift and go to state 332
    MENOR           shift and go to state 333

    sel_comp                       shift and go to state 395

state 380

    (76) data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .

    DEFAULT         reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    NOT             reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    NULL            reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    CONSTRAINT      reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    UNIQUE          reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    CHECK           reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    PRIMARY         reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    REFERENCES      reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    COMA            reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    PARDER          reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    PTCOMA          reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    CREATE          reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    SHOW            reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    ALTER           reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    DROP            reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    DELETE          reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    INSERT          reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    UPDATE          reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    SELECT          reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    $end            reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    AND             reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    ORDER           reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    WHERE           reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    INNER           reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    LEFT            reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    RIGHT           reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    FULL            reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    OUTER           reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)
    JOIN            reduce using rule 76 (data_type -> CHARACTER VARYING PARIZQ ENTERO PARDER .)


state 381

    (128) const -> const CONSTRAINT ID CHECK PARIZQ PARDER .

    DEFAULT         reduce using rule 128 (const -> const CONSTRAINT ID CHECK PARIZQ PARDER .)
    NOT             reduce using rule 128 (const -> const CONSTRAINT ID CHECK PARIZQ PARDER .)
    NULL            reduce using rule 128 (const -> const CONSTRAINT ID CHECK PARIZQ PARDER .)
    CONSTRAINT      reduce using rule 128 (const -> const CONSTRAINT ID CHECK PARIZQ PARDER .)
    UNIQUE          reduce using rule 128 (const -> const CONSTRAINT ID CHECK PARIZQ PARDER .)
    CHECK           reduce using rule 128 (const -> const CONSTRAINT ID CHECK PARIZQ PARDER .)
    PRIMARY         reduce using rule 128 (const -> const CONSTRAINT ID CHECK PARIZQ PARDER .)
    REFERENCES      reduce using rule 128 (const -> const CONSTRAINT ID CHECK PARIZQ PARDER .)
    CREATE          reduce using rule 128 (const -> const CONSTRAINT ID CHECK PARIZQ PARDER .)
    SHOW            reduce using rule 128 (const -> const CONSTRAINT ID CHECK PARIZQ PARDER .)
    ALTER           reduce using rule 128 (const -> const CONSTRAINT ID CHECK PARIZQ PARDER .)
    DROP            reduce using rule 128 (const -> const CONSTRAINT ID CHECK PARIZQ PARDER .)
    DELETE          reduce using rule 128 (const -> const CONSTRAINT ID CHECK PARIZQ PARDER .)
    INSERT          reduce using rule 128 (const -> const CONSTRAINT ID CHECK PARIZQ PARDER .)
    UPDATE          reduce using rule 128 (const -> const CONSTRAINT ID CHECK PARIZQ PARDER .)
    SELECT          reduce using rule 128 (const -> const CONSTRAINT ID CHECK PARIZQ PARDER .)
    $end            reduce using rule 128 (const -> const CONSTRAINT ID CHECK PARIZQ PARDER .)
    COMA            reduce using rule 128 (const -> const CONSTRAINT ID CHECK PARIZQ PARDER .)
    PARDER          reduce using rule 128 (const -> const CONSTRAINT ID CHECK PARIZQ PARDER .)


state 382

    (119) const_keys -> const_keys COMA PRIMARY KEY PARIZQ lista_id . PARDER
    (141) lista_id -> lista_id . COMA ID

    PARDER          shift and go to state 396
    COMA            shift and go to state 202


state 383

    (120) const_keys -> const_keys COMA FOREIGN KEY PARIZQ PARDER . REFERENCES PARIZQ lista_id PARDER

    REFERENCES      shift and go to state 397


state 384

    (122) const_keys -> FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ . lista_id PARDER
    (141) lista_id -> . lista_id COMA ID
    (142) lista_id -> . ID

    ID              shift and go to state 132

    lista_id                       shift and go to state 398

state 385

    (183) expresion -> SUM PARIZQ expresion PARDER .

    PTCOMA          reduce using rule 183 (expresion -> SUM PARIZQ expresion PARDER .)
    OR              reduce using rule 183 (expresion -> SUM PARIZQ expresion PARDER .)
    AND             reduce using rule 183 (expresion -> SUM PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 183 (expresion -> SUM PARIZQ expresion PARDER .)
    MENOR           reduce using rule 183 (expresion -> SUM PARIZQ expresion PARDER .)
    MAYIG           reduce using rule 183 (expresion -> SUM PARIZQ expresion PARDER .)
    MENIG           reduce using rule 183 (expresion -> SUM PARIZQ expresion PARDER .)
    IGUAQ           reduce using rule 183 (expresion -> SUM PARIZQ expresion PARDER .)
    DIFEQ           reduce using rule 183 (expresion -> SUM PARIZQ expresion PARDER .)
    POTEN           reduce using rule 183 (expresion -> SUM PARIZQ expresion PARDER .)
    MULTI           reduce using rule 183 (expresion -> SUM PARIZQ expresion PARDER .)
    DIVIS           reduce using rule 183 (expresion -> SUM PARIZQ expresion PARDER .)
    SUMAS           reduce using rule 183 (expresion -> SUM PARIZQ expresion PARDER .)
    MENOS           reduce using rule 183 (expresion -> SUM PARIZQ expresion PARDER .)
    PARDER          reduce using rule 183 (expresion -> SUM PARIZQ expresion PARDER .)


state 386

    (184) expresion -> AVG PARIZQ expresion PARDER .

    PTCOMA          reduce using rule 184 (expresion -> AVG PARIZQ expresion PARDER .)
    OR              reduce using rule 184 (expresion -> AVG PARIZQ expresion PARDER .)
    AND             reduce using rule 184 (expresion -> AVG PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 184 (expresion -> AVG PARIZQ expresion PARDER .)
    MENOR           reduce using rule 184 (expresion -> AVG PARIZQ expresion PARDER .)
    MAYIG           reduce using rule 184 (expresion -> AVG PARIZQ expresion PARDER .)
    MENIG           reduce using rule 184 (expresion -> AVG PARIZQ expresion PARDER .)
    IGUAQ           reduce using rule 184 (expresion -> AVG PARIZQ expresion PARDER .)
    DIFEQ           reduce using rule 184 (expresion -> AVG PARIZQ expresion PARDER .)
    POTEN           reduce using rule 184 (expresion -> AVG PARIZQ expresion PARDER .)
    MULTI           reduce using rule 184 (expresion -> AVG PARIZQ expresion PARDER .)
    DIVIS           reduce using rule 184 (expresion -> AVG PARIZQ expresion PARDER .)
    SUMAS           reduce using rule 184 (expresion -> AVG PARIZQ expresion PARDER .)
    MENOS           reduce using rule 184 (expresion -> AVG PARIZQ expresion PARDER .)
    PARDER          reduce using rule 184 (expresion -> AVG PARIZQ expresion PARDER .)


state 387

    (185) expresion -> MAX PARIZQ expresion PARDER .

    PTCOMA          reduce using rule 185 (expresion -> MAX PARIZQ expresion PARDER .)
    OR              reduce using rule 185 (expresion -> MAX PARIZQ expresion PARDER .)
    AND             reduce using rule 185 (expresion -> MAX PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 185 (expresion -> MAX PARIZQ expresion PARDER .)
    MENOR           reduce using rule 185 (expresion -> MAX PARIZQ expresion PARDER .)
    MAYIG           reduce using rule 185 (expresion -> MAX PARIZQ expresion PARDER .)
    MENIG           reduce using rule 185 (expresion -> MAX PARIZQ expresion PARDER .)
    IGUAQ           reduce using rule 185 (expresion -> MAX PARIZQ expresion PARDER .)
    DIFEQ           reduce using rule 185 (expresion -> MAX PARIZQ expresion PARDER .)
    POTEN           reduce using rule 185 (expresion -> MAX PARIZQ expresion PARDER .)
    MULTI           reduce using rule 185 (expresion -> MAX PARIZQ expresion PARDER .)
    DIVIS           reduce using rule 185 (expresion -> MAX PARIZQ expresion PARDER .)
    SUMAS           reduce using rule 185 (expresion -> MAX PARIZQ expresion PARDER .)
    MENOS           reduce using rule 185 (expresion -> MAX PARIZQ expresion PARDER .)
    PARDER          reduce using rule 185 (expresion -> MAX PARIZQ expresion PARDER .)


state 388

    (187) expresion -> POWER PARIZQ expresion PARDER .

    PTCOMA          reduce using rule 187 (expresion -> POWER PARIZQ expresion PARDER .)
    OR              reduce using rule 187 (expresion -> POWER PARIZQ expresion PARDER .)
    AND             reduce using rule 187 (expresion -> POWER PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 187 (expresion -> POWER PARIZQ expresion PARDER .)
    MENOR           reduce using rule 187 (expresion -> POWER PARIZQ expresion PARDER .)
    MAYIG           reduce using rule 187 (expresion -> POWER PARIZQ expresion PARDER .)
    MENIG           reduce using rule 187 (expresion -> POWER PARIZQ expresion PARDER .)
    IGUAQ           reduce using rule 187 (expresion -> POWER PARIZQ expresion PARDER .)
    DIFEQ           reduce using rule 187 (expresion -> POWER PARIZQ expresion PARDER .)
    POTEN           reduce using rule 187 (expresion -> POWER PARIZQ expresion PARDER .)
    MULTI           reduce using rule 187 (expresion -> POWER PARIZQ expresion PARDER .)
    DIVIS           reduce using rule 187 (expresion -> POWER PARIZQ expresion PARDER .)
    SUMAS           reduce using rule 187 (expresion -> POWER PARIZQ expresion PARDER .)
    MENOS           reduce using rule 187 (expresion -> POWER PARIZQ expresion PARDER .)
    PARDER          reduce using rule 187 (expresion -> POWER PARIZQ expresion PARDER .)


state 389

    (188) expresion -> SQRT PARIZQ expresion PARDER .

    PTCOMA          reduce using rule 188 (expresion -> SQRT PARIZQ expresion PARDER .)
    OR              reduce using rule 188 (expresion -> SQRT PARIZQ expresion PARDER .)
    AND             reduce using rule 188 (expresion -> SQRT PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 188 (expresion -> SQRT PARIZQ expresion PARDER .)
    MENOR           reduce using rule 188 (expresion -> SQRT PARIZQ expresion PARDER .)
    MAYIG           reduce using rule 188 (expresion -> SQRT PARIZQ expresion PARDER .)
    MENIG           reduce using rule 188 (expresion -> SQRT PARIZQ expresion PARDER .)
    IGUAQ           reduce using rule 188 (expresion -> SQRT PARIZQ expresion PARDER .)
    DIFEQ           reduce using rule 188 (expresion -> SQRT PARIZQ expresion PARDER .)
    POTEN           reduce using rule 188 (expresion -> SQRT PARIZQ expresion PARDER .)
    MULTI           reduce using rule 188 (expresion -> SQRT PARIZQ expresion PARDER .)
    DIVIS           reduce using rule 188 (expresion -> SQRT PARIZQ expresion PARDER .)
    SUMAS           reduce using rule 188 (expresion -> SQRT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 188 (expresion -> SQRT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 188 (expresion -> SQRT PARIZQ expresion PARDER .)


state 390

    (156) lista_values -> PARIZQ lista_valores PARDER .

    PTCOMA          reduce using rule 156 (lista_values -> PARIZQ lista_valores PARDER .)
    COMA            reduce using rule 156 (lista_values -> PARIZQ lista_valores PARDER .)


state 391

    (157) lista_valores -> lista_valores COMA . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    valores                        shift and go to state 399

state 392

    (155) lista_values -> lista_values COMA PARIZQ . lista_valores PARDER
    (157) lista_valores -> . lista_valores COMA valores
    (158) lista_valores -> . valores
    (159) valores -> . CADENA
    (160) valores -> . ENTERO
    (161) valores -> . DECIMA

    CADENA          shift and go to state 204
    ENTERO          shift and go to state 205
    DECIMA          shift and go to state 206

    lista_valores                  shift and go to state 400
    valores                        shift and go to state 371

state 393

    (48) list_order -> ORDER BY ID ASC .

    PTCOMA          reduce using rule 48 (list_order -> ORDER BY ID ASC .)


state 394

    (49) list_order -> ORDER BY ID DESC .

    PTCOMA          reduce using rule 49 (list_order -> ORDER BY ID DESC .)


state 395

    (40) join_conditions -> ON ID sel_comp . ID
    (41) join_conditions -> ON ID sel_comp . data_type
    (68) data_type -> . ENTERO
    (69) data_type -> . TEXT
    (70) data_type -> . SMALLINT
    (71) data_type -> . BEGINT
    (72) data_type -> . DECIMAL
    (73) data_type -> . REAL
    (74) data_type -> . DOUBLE PRECISION
    (75) data_type -> . MONEY
    (76) data_type -> . CHARACTER VARYING PARIZQ ENTERO PARDER
    (77) data_type -> . VARCHAR PARIZQ ENTERO PARDER
    (78) data_type -> . CHARACTER PARIZQ ENTERO PARDER
    (79) data_type -> . CHAR PARIZQ ENTERO PARDER
    (80) data_type -> . TIMESTAMP
    (81) data_type -> . TIMESTAMP time_zone
    (82) data_type -> . DATA
    (83) data_type -> . TIME
    (84) data_type -> . TIME time_zone
    (85) data_type -> . INTERVAL

    ID              shift and go to state 401
    ENTERO          shift and go to state 154
    TEXT            shift and go to state 155
    SMALLINT        shift and go to state 156
    BEGINT          shift and go to state 157
    DECIMAL         shift and go to state 158
    REAL            shift and go to state 159
    DOUBLE          shift and go to state 160
    MONEY           shift and go to state 161
    CHARACTER       shift and go to state 162
    VARCHAR         shift and go to state 163
    CHAR            shift and go to state 164
    TIMESTAMP       shift and go to state 165
    DATA            shift and go to state 166
    TIME            shift and go to state 167
    INTERVAL        shift and go to state 168

    data_type                      shift and go to state 402

state 396

    (119) const_keys -> const_keys COMA PRIMARY KEY PARIZQ lista_id PARDER .

    COMA            reduce using rule 119 (const_keys -> const_keys COMA PRIMARY KEY PARIZQ lista_id PARDER .)
    CREATE          reduce using rule 119 (const_keys -> const_keys COMA PRIMARY KEY PARIZQ lista_id PARDER .)
    SHOW            reduce using rule 119 (const_keys -> const_keys COMA PRIMARY KEY PARIZQ lista_id PARDER .)
    ALTER           reduce using rule 119 (const_keys -> const_keys COMA PRIMARY KEY PARIZQ lista_id PARDER .)
    DROP            reduce using rule 119 (const_keys -> const_keys COMA PRIMARY KEY PARIZQ lista_id PARDER .)
    DELETE          reduce using rule 119 (const_keys -> const_keys COMA PRIMARY KEY PARIZQ lista_id PARDER .)
    INSERT          reduce using rule 119 (const_keys -> const_keys COMA PRIMARY KEY PARIZQ lista_id PARDER .)
    UPDATE          reduce using rule 119 (const_keys -> const_keys COMA PRIMARY KEY PARIZQ lista_id PARDER .)
    SELECT          reduce using rule 119 (const_keys -> const_keys COMA PRIMARY KEY PARIZQ lista_id PARDER .)
    $end            reduce using rule 119 (const_keys -> const_keys COMA PRIMARY KEY PARIZQ lista_id PARDER .)
    PARDER          reduce using rule 119 (const_keys -> const_keys COMA PRIMARY KEY PARIZQ lista_id PARDER .)


state 397

    (120) const_keys -> const_keys COMA FOREIGN KEY PARIZQ PARDER REFERENCES . PARIZQ lista_id PARDER

    PARIZQ          shift and go to state 403


state 398

    (122) const_keys -> FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id . PARDER
    (141) lista_id -> lista_id . COMA ID

    PARDER          shift and go to state 404
    COMA            shift and go to state 202


state 399

    (157) lista_valores -> lista_valores COMA valores .

    PARDER          reduce using rule 157 (lista_valores -> lista_valores COMA valores .)
    COMA            reduce using rule 157 (lista_valores -> lista_valores COMA valores .)


state 400

    (155) lista_values -> lista_values COMA PARIZQ lista_valores . PARDER
    (157) lista_valores -> lista_valores . COMA valores

    PARDER          shift and go to state 405
    COMA            shift and go to state 391


state 401

    (40) join_conditions -> ON ID sel_comp ID .

    WHERE           reduce using rule 40 (join_conditions -> ON ID sel_comp ID .)
    INNER           reduce using rule 40 (join_conditions -> ON ID sel_comp ID .)
    LEFT            reduce using rule 40 (join_conditions -> ON ID sel_comp ID .)
    RIGHT           reduce using rule 40 (join_conditions -> ON ID sel_comp ID .)
    FULL            reduce using rule 40 (join_conditions -> ON ID sel_comp ID .)
    OUTER           reduce using rule 40 (join_conditions -> ON ID sel_comp ID .)
    ORDER           reduce using rule 40 (join_conditions -> ON ID sel_comp ID .)
    PTCOMA          reduce using rule 40 (join_conditions -> ON ID sel_comp ID .)
    JOIN            reduce using rule 40 (join_conditions -> ON ID sel_comp ID .)


state 402

    (41) join_conditions -> ON ID sel_comp data_type .

    WHERE           reduce using rule 41 (join_conditions -> ON ID sel_comp data_type .)
    INNER           reduce using rule 41 (join_conditions -> ON ID sel_comp data_type .)
    LEFT            reduce using rule 41 (join_conditions -> ON ID sel_comp data_type .)
    RIGHT           reduce using rule 41 (join_conditions -> ON ID sel_comp data_type .)
    FULL            reduce using rule 41 (join_conditions -> ON ID sel_comp data_type .)
    OUTER           reduce using rule 41 (join_conditions -> ON ID sel_comp data_type .)
    ORDER           reduce using rule 41 (join_conditions -> ON ID sel_comp data_type .)
    PTCOMA          reduce using rule 41 (join_conditions -> ON ID sel_comp data_type .)
    JOIN            reduce using rule 41 (join_conditions -> ON ID sel_comp data_type .)


state 403

    (120) const_keys -> const_keys COMA FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ . lista_id PARDER
    (141) lista_id -> . lista_id COMA ID
    (142) lista_id -> . ID

    ID              shift and go to state 132

    lista_id                       shift and go to state 406

state 404

    (122) const_keys -> FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .

    COMA            reduce using rule 122 (const_keys -> FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .)
    CREATE          reduce using rule 122 (const_keys -> FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .)
    SHOW            reduce using rule 122 (const_keys -> FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .)
    ALTER           reduce using rule 122 (const_keys -> FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .)
    DROP            reduce using rule 122 (const_keys -> FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .)
    DELETE          reduce using rule 122 (const_keys -> FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .)
    INSERT          reduce using rule 122 (const_keys -> FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .)
    UPDATE          reduce using rule 122 (const_keys -> FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .)
    SELECT          reduce using rule 122 (const_keys -> FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .)
    $end            reduce using rule 122 (const_keys -> FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .)
    PARDER          reduce using rule 122 (const_keys -> FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .)


state 405

    (155) lista_values -> lista_values COMA PARIZQ lista_valores PARDER .

    PTCOMA          reduce using rule 155 (lista_values -> lista_values COMA PARIZQ lista_valores PARDER .)
    COMA            reduce using rule 155 (lista_values -> lista_values COMA PARIZQ lista_valores PARDER .)


state 406

    (120) const_keys -> const_keys COMA FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id . PARDER
    (141) lista_id -> lista_id . COMA ID

    PARDER          shift and go to state 407
    COMA            shift and go to state 202


state 407

    (120) const_keys -> const_keys COMA FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .

    COMA            reduce using rule 120 (const_keys -> const_keys COMA FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .)
    CREATE          reduce using rule 120 (const_keys -> const_keys COMA FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .)
    SHOW            reduce using rule 120 (const_keys -> const_keys COMA FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .)
    ALTER           reduce using rule 120 (const_keys -> const_keys COMA FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .)
    DROP            reduce using rule 120 (const_keys -> const_keys COMA FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .)
    DELETE          reduce using rule 120 (const_keys -> const_keys COMA FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .)
    INSERT          reduce using rule 120 (const_keys -> const_keys COMA FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .)
    UPDATE          reduce using rule 120 (const_keys -> const_keys COMA FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .)
    SELECT          reduce using rule 120 (const_keys -> const_keys COMA FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .)
    $end            reduce using rule 120 (const_keys -> const_keys COMA FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .)
    PARDER          reduce using rule 120 (const_keys -> const_keys COMA FOREIGN KEY PARIZQ PARDER REFERENCES PARIZQ lista_id PARDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INNER in state 93 resolved as shift
WARNING: shift/reduce conflict for LEFT in state 93 resolved as shift
WARNING: shift/reduce conflict for RIGHT in state 93 resolved as shift
WARNING: shift/reduce conflict for FULL in state 93 resolved as shift
WARNING: shift/reduce conflict for OUTER in state 93 resolved as shift
WARNING: reduce/reduce conflict in state 141 resolved using rule (list_joins -> empty)
WARNING: rejected rule (join_type -> empty) in state 141
